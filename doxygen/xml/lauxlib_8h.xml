<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="lauxlib_8h" kind="file">
    <compoundname>lauxlib.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="lua_8h" local="yes">lua.h</includes>
    <includedby refid="lua_8hpp" local="yes">lua.hpp</includedby>
    <incdepgraph>
      <node id="577">
        <label>lauxlib.h</label>
        <link refid="lauxlib.h"/>
        <childnode refid="578" relation="include">
        </childnode>
        <childnode refid="579" relation="include">
        </childnode>
        <childnode refid="580" relation="include">
        </childnode>
      </node>
      <node id="581">
        <label>stdarg.h</label>
      </node>
      <node id="582">
        <label>luaconf.h</label>
        <link refid="luaconf_8h"/>
        <childnode refid="583" relation="include">
        </childnode>
        <childnode refid="578" relation="include">
        </childnode>
      </node>
      <node id="578">
        <label>stddef.h</label>
      </node>
      <node id="580">
        <label>lua.h</label>
        <link refid="lua_8h"/>
        <childnode refid="581" relation="include">
        </childnode>
        <childnode refid="578" relation="include">
        </childnode>
        <childnode refid="582" relation="include">
        </childnode>
      </node>
      <node id="583">
        <label>limits.h</label>
      </node>
      <node id="579">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="584">
        <label>lauxlib.h</label>
        <link refid="lauxlib.h"/>
        <childnode refid="585" relation="include">
        </childnode>
      </node>
      <node id="585">
        <label>lua.hpp</label>
        <link refid="lua_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structlua_l___reg" prot="public">luaL_Reg</innerclass>
    <innerclass refid="structlua_l___buffer" prot="public">luaL_Buffer</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="lauxlib_8h_1a0ef5c05520dabbaa65ecbade53e719fa" prot="public" static="no">
        <name>luaL_getn</name>
        <param><defname>L</defname></param>
        <param><defname>i</defname></param>
        <initializer>((int)<ref refid="lua_8h_1a07bd1384def434a4a3efdcd48b771ca9" kindref="member">lua_objlen</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, i))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="22" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1a6528439647f8e5928dd9151be7c89302" prot="public" static="no">
        <name>luaL_setn</name>
        <param><defname>L</defname></param>
        <param><defname>i</defname></param>
        <param><defname>j</defname></param>
        <initializer>((void)0)  /* no op! */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="23" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1aba5d150de784924e9111ccf650bea087" prot="public" static="no">
        <name>luaI_openlib</name>
        <initializer>luaL_openlib</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="27" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1ab8d4418d33cd59728435db95ac2caf5a" prot="public" static="no">
        <name>LUA_ERRFILE</name>
        <initializer>(<ref refid="lua_8h_1a295ea44b6036e266b06e5de0f8ff24e0" kindref="member">LUA_ERRERR</ref>+1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="32" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1afe2e3018d561c14f2622fb32f425c111" prot="public" static="no">
        <name>luaL_argcheck</name>
        <param><defname>L</defname></param>
        <param><defname>cond</defname></param>
        <param><defname>numarg</defname></param>
        <param><defname>extramsg</defname></param>
        <initializer>((void)((cond) || <ref refid="lauxlib_8h_1a526c220d17273c63ce9973bcde4a2c4a" kindref="member">luaL_argerror</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, (numarg), (extramsg))))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="101" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1ad9917d22c79651fdd73d42c146b5056f" prot="public" static="no">
        <name>luaL_checkstring</name>
        <param><defname>L</defname></param>
        <param><defname>n</defname></param>
        <initializer>(<ref refid="lauxlib_8h_1af4af154dcb41f8990a572e6a00c349fc" kindref="member">luaL_checklstring</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, (n), NULL))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="102" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1a732bc5882c4a5da46b236649ab6db47b" prot="public" static="no">
        <name>luaL_optstring</name>
        <param><defname>L</defname></param>
        <param><defname>n</defname></param>
        <param><defname>d</defname></param>
        <initializer>(<ref refid="lauxlib_8h_1a15b8c426b2e1b0cd1f9ddc32bc94df2f" kindref="member">luaL_optlstring</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, (n), (d), NULL))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="103" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1adb277a5f654228b51b66f95bcf883601" prot="public" static="no">
        <name>luaL_checkint</name>
        <param><defname>L</defname></param>
        <param><defname>n</defname></param>
        <initializer>((int)<ref refid="lauxlib_8h_1ab9c2bb4294fb7a81d3745dad5711cd63" kindref="member">luaL_checkinteger</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, (n)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="104" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1ab4d7f693e9405558c725783a756e0aca" prot="public" static="no">
        <name>luaL_optint</name>
        <param><defname>L</defname></param>
        <param><defname>n</defname></param>
        <param><defname>d</defname></param>
        <initializer>((int)<ref refid="lauxlib_8h_1a2b17cdda9e7ed73a1cd152cd386dc7a4" kindref="member">luaL_optinteger</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, (n), (d)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="105" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1a0df2697cbe2d4a33e012ab336af44b9b" prot="public" static="no">
        <name>luaL_checklong</name>
        <param><defname>L</defname></param>
        <param><defname>n</defname></param>
        <initializer>((long)<ref refid="lauxlib_8h_1ab9c2bb4294fb7a81d3745dad5711cd63" kindref="member">luaL_checkinteger</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, (n)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="106" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1a58ea6d94dccfa493103d8e112dd276b6" prot="public" static="no">
        <name>luaL_optlong</name>
        <param><defname>L</defname></param>
        <param><defname>n</defname></param>
        <param><defname>d</defname></param>
        <initializer>((long)<ref refid="lauxlib_8h_1a2b17cdda9e7ed73a1cd152cd386dc7a4" kindref="member">luaL_optinteger</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, (n), (d)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="107" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1a2bee94954917c5bccb05d6578f3c675b" prot="public" static="no">
        <name>luaL_typename</name>
        <param><defname>L</defname></param>
        <param><defname>i</defname></param>
        <initializer><ref refid="lua_8h_1a963a421b920cd7ce229f82091eab18a9" kindref="member">lua_typename</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, <ref refid="lua_8h_1aa988ba5b97ff838ccb92babd63063273" kindref="member">lua_type</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,(i)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="109" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1aa49a7a47a683d6e7868ede50ceb826be" prot="public" static="no">
        <name>luaL_dofile</name>
        <param><defname>L</defname></param>
        <param><defname>fn</defname></param>
        <initializer>(<ref refid="lauxlib_8h_1afa862c5bdbbcfc8f46e0cac9f32a771e" kindref="member">luaL_loadfile</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, fn) || <ref refid="lua_8h_1a513752286ffd536ea5ce1988e4ebf884" kindref="member">lua_pcall</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, 0, <ref refid="lua_8h_1ace3545adc11664c2f2b152fbe8b6283c" kindref="member">LUA_MULTRET</ref>, 0))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="112" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1a1a0639bfde6b1e2f6181af45b0137cf5" prot="public" static="no">
        <name>luaL_dostring</name>
        <param><defname>L</defname></param>
        <param><defname>s</defname></param>
        <initializer>(<ref refid="lauxlib_8h_1ac88130d6214ff6b3e2f1781f327807eb" kindref="member">luaL_loadstring</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, s) || <ref refid="lua_8h_1a513752286ffd536ea5ce1988e4ebf884" kindref="member">lua_pcall</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, 0, <ref refid="lua_8h_1ace3545adc11664c2f2b152fbe8b6283c" kindref="member">LUA_MULTRET</ref>, 0))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="115" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1a201407aa41ff74577c67308372a130d9" prot="public" static="no">
        <name>luaL_getmetatable</name>
        <param><defname>L</defname></param>
        <param><defname>n</defname></param>
        <initializer>(<ref refid="lua_8h_1ac3112bb28ba217adc46f13da8e9e6585" kindref="member">lua_getfield</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, <ref refid="lua_8h_1a3524c2bbc8fcf847dc083246b62945dd" kindref="member">LUA_REGISTRYINDEX</ref>, (n)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="117" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1aca033280b0176012ef290131876f706e" prot="public" static="no">
        <name>luaL_opt</name>
        <param><defname>L</defname></param>
        <param><defname>f</defname></param>
        <param><defname>n</defname></param>
        <param><defname>d</defname></param>
        <initializer>(<ref refid="lua_8h_1af51702bb75a31bb4a279953ee386d533" kindref="member">lua_isnoneornil</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,(n)) ? (d) : f(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,(n)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="119" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1a63935c5b4cf5d45930c875f6cc5e1432" prot="public" static="no">
        <name>luaL_addchar</name>
        <param><defname>B</defname></param>
        <param><defname>c</defname></param>
        <initializer>((void)((B)-&gt;p &lt; ((B)-&gt;buffer+<ref refid="luaconf_8h_1af360ad37a770dfdc29291a99c398f42d" kindref="member">LUAL_BUFFERSIZE</ref>) || <ref refid="lauxlib_8h_1adb0d0b797f1b8cc8ec4cda17a2939f87" kindref="member">luaL_prepbuffer</ref>(B)), \
   (*(B)-&gt;p++ = (char)(c)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="138" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1abbe5398fb8c79198354ba483e334cfdf" prot="public" static="no">
        <name>luaL_putchar</name>
        <param><defname>B</defname></param>
        <param><defname>c</defname></param>
        <initializer><ref refid="lauxlib_8h_1a63935c5b4cf5d45930c875f6cc5e1432" kindref="member">luaL_addchar</ref>(B,c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="141" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1a2c5063f5c005f0ecd3fd69a9f7509073" prot="public" static="no">
        <name>luaL_addsize</name>
        <param><defname>B</defname></param>
        <param><defname>n</defname></param>
        <initializer>((B)-&gt;p += (n))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="143" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1a3bfb758f2ac7c9ecb758e1aeaaa82d3d" prot="public" static="no">
        <name>LUA_NOREF</name>
        <initializer>(-2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="159" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1a004a6b76c047f3b94890a08dbdcbbee7" prot="public" static="no">
        <name>LUA_REFNIL</name>
        <initializer>(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="160" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1ad33a233129d81d873e9b5a65fc7d0c3a" prot="public" static="no">
        <name>lua_ref</name>
        <param><defname>L</defname></param>
        <param><defname>lock</defname></param>
        <initializer>((lock) ? <ref refid="lauxlib_8h_1a2b69e67252d95df410818251f4b2d8e5" kindref="member">luaL_ref</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, <ref refid="lua_8h_1a3524c2bbc8fcf847dc083246b62945dd" kindref="member">LUA_REGISTRYINDEX</ref>) : \
      (<ref refid="lua_8h_1af2db74e1d8e7062bf5d1a2a779e53369" kindref="member">lua_pushstring</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, &quot;unlocked references are obsolete&quot;), lua_error(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>), 0))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="163" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1ac9b78e96e9af92b1f43fa2fa016b263c" prot="public" static="no">
        <name>lua_unref</name>
        <param><defname>L</defname></param>
        <param><defname>ref</defname></param>
        <initializer><ref refid="lauxlib_8h_1a6200030ecae784852045161274501e0e" kindref="member">luaL_unref</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, <ref refid="lua_8h_1a3524c2bbc8fcf847dc083246b62945dd" kindref="member">LUA_REGISTRYINDEX</ref>, (ref))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="165" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1a7bce9002427e63aa572e53f77432a7ee" prot="public" static="no">
        <name>lua_getref</name>
        <param><defname>L</defname></param>
        <param><defname>ref</defname></param>
        <initializer><ref refid="lua_8h_1a83de0bf688c2a389db2e444aa34e752a" kindref="member">lua_rawgeti</ref>(<ref refid="main_8cpp_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>, <ref refid="lua_8h_1a3524c2bbc8fcf847dc083246b62945dd" kindref="member">LUA_REGISTRYINDEX</ref>, (ref))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="167" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lauxlib_8h_1a2015fce24247ce967682fd7458684af2" prot="public" static="no">
        <name>luaL_reg</name>
        <initializer><ref refid="structlua_l___reg" kindref="compound">luaL_Reg</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="170" bodyfile="D:/repo/newCapitalBreak/lauxlib.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lauxlib_8h_1a48bebf7b56d108021c1ae29549c912f9" prot="public" static="no">
        <type>struct <ref refid="structlua_l___reg" kindref="compound">luaL_Reg</ref></type>
        <definition>typedef struct luaL_Reg  luaL_Reg</definition>
        <argsstring></argsstring>
        <name>luaL_Reg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="38"/>
      </memberdef>
      <memberdef kind="typedef" id="lauxlib_8h_1a5f2195b3845806aa4bd9117b11b4d91c" prot="public" static="no">
        <type>struct <ref refid="structlua_l___buffer" kindref="compound">luaL_Buffer</ref></type>
        <definition>typedef struct luaL_Buffer  luaL_Buffer</definition>
        <argsstring></argsstring>
        <name>luaL_Buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="134"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lauxlib_8h_1ae352d571a7b93c6b311b7aa993f9aaba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> void()</type>
        <definition>LUALIB_API void() luaI_openlib</definition>
        <argsstring>(lua_State *L, const char *libname, const luaL_Reg *l, int nup)</argsstring>
        <name>luaI_openlib</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>libname</declname>
        </param>
        <param>
          <type>const <ref refid="structlua_l___reg" kindref="compound">luaL_Reg</ref> *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="43"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a258c0fd40d57aec9cf62ebd74be7666e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> void()</type>
        <definition>LUALIB_API void() luaL_register</definition>
        <argsstring>(lua_State *L, const char *libname, const luaL_Reg *l)</argsstring>
        <name>luaL_register</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>libname</declname>
        </param>
        <param>
          <type>const <ref refid="structlua_l___reg" kindref="compound">luaL_Reg</ref> *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="45"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1aed3f129411ba1ec14f813d650f16384d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> int()</type>
        <definition>LUALIB_API int() luaL_getmetafield</definition>
        <argsstring>(lua_State *L, int obj, const char *e)</argsstring>
        <name>luaL_getmetafield</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="46"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1af26aec8cce4a3f4448c60f402d78f17d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> int()</type>
        <definition>LUALIB_API int() luaL_callmeta</definition>
        <argsstring>(lua_State *L, int obj, const char *e)</argsstring>
        <name>luaL_callmeta</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="47"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a022056a7197e2e2c12f2b65b2993fd53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> int()</type>
        <definition>LUALIB_API int() luaL_typerror</definition>
        <argsstring>(lua_State *L, int narg, const char *tname)</argsstring>
        <name>luaL_typerror</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>narg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a526c220d17273c63ce9973bcde4a2c4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> int()</type>
        <definition>LUALIB_API int() luaL_argerror</definition>
        <argsstring>(lua_State *L, int numarg, const char *extramsg)</argsstring>
        <name>luaL_argerror</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numarg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>extramsg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="49"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1af4af154dcb41f8990a572e6a00c349fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> const char *()</type>
        <definition>LUALIB_API const char*() luaL_checklstring</definition>
        <argsstring>(lua_State *L, int numArg, size_t *l)</argsstring>
        <name>luaL_checklstring</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numArg</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="51"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a15b8c426b2e1b0cd1f9ddc32bc94df2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> const char *()</type>
        <definition>LUALIB_API const char*() luaL_optlstring</definition>
        <argsstring>(lua_State *L, int numArg, const char *def, size_t *l)</argsstring>
        <name>luaL_optlstring</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numArg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>def</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="53"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a3e39a4d35c3ce1555126e372a8a329c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> <ref refid="lua_8h_1af0a6ed3b852d680769cfc410a0672172" kindref="member">lua_Number</ref>()</type>
        <definition>LUALIB_API lua_Number() luaL_checknumber</definition>
        <argsstring>(lua_State *L, int numArg)</argsstring>
        <name>luaL_checknumber</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numArg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="54"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a001e2679c64c24eefbaf478fd0c22f97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> <ref refid="lua_8h_1af0a6ed3b852d680769cfc410a0672172" kindref="member">lua_Number</ref>()</type>
        <definition>LUALIB_API lua_Number() luaL_optnumber</definition>
        <argsstring>(lua_State *L, int nArg, lua_Number def)</argsstring>
        <name>luaL_optnumber</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nArg</declname>
        </param>
        <param>
          <type><ref refid="lua_8h_1af0a6ed3b852d680769cfc410a0672172" kindref="member">lua_Number</ref></type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="55"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1ab9c2bb4294fb7a81d3745dad5711cd63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> <ref refid="lua_8h_1a362144baa0cfb14dc38fd21438053d73" kindref="member">lua_Integer</ref>()</type>
        <definition>LUALIB_API lua_Integer() luaL_checkinteger</definition>
        <argsstring>(lua_State *L, int numArg)</argsstring>
        <name>luaL_checkinteger</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numArg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="57"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a2b17cdda9e7ed73a1cd152cd386dc7a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> <ref refid="lua_8h_1a362144baa0cfb14dc38fd21438053d73" kindref="member">lua_Integer</ref>()</type>
        <definition>LUALIB_API lua_Integer() luaL_optinteger</definition>
        <argsstring>(lua_State *L, int nArg, lua_Integer def)</argsstring>
        <name>luaL_optinteger</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nArg</declname>
        </param>
        <param>
          <type><ref refid="lua_8h_1a362144baa0cfb14dc38fd21438053d73" kindref="member">lua_Integer</ref></type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="59"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a724f5a5aeee97c0b40948c8bca91341c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> void()</type>
        <definition>LUALIB_API void() luaL_checkstack</definition>
        <argsstring>(lua_State *L, int sz, const char *msg)</argsstring>
        <name>luaL_checkstack</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="61"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1ae5f465fb757069d016a10b106c69bdd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> void()</type>
        <definition>LUALIB_API void() luaL_checktype</definition>
        <argsstring>(lua_State *L, int narg, int t)</argsstring>
        <name>luaL_checktype</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>narg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="62"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1ad78c85dce421e9cb793e205b9e81c640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> void()</type>
        <definition>LUALIB_API void() luaL_checkany</definition>
        <argsstring>(lua_State *L, int narg)</argsstring>
        <name>luaL_checkany</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>narg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="63"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a0e9e032108e7aedc05836b0c1d72a0fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> int()</type>
        <definition>LUALIB_API int() luaL_newmetatable</definition>
        <argsstring>(lua_State *L, const char *tname)</argsstring>
        <name>luaL_newmetatable</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="65"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1aed8d8e4f3b95c6bcac246ec9895027b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> void *()</type>
        <definition>LUALIB_API void*() luaL_checkudata</definition>
        <argsstring>(lua_State *L, int ud, const char *tname)</argsstring>
        <name>luaL_checkudata</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ud</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="66"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a269122a77674ca63c9193c2a30b4729e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> void()</type>
        <definition>LUALIB_API void() luaL_where</definition>
        <argsstring>(lua_State *L, int lvl)</argsstring>
        <name>luaL_where</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lvl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="68"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a994f73d7985c30672469a260d9e86ae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> int()</type>
        <definition>LUALIB_API int() luaL_error</definition>
        <argsstring>(lua_State *L, const char *fmt,...)</argsstring>
        <name>luaL_error</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="69"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a638633914d3a19650db8320c1fccf161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> int()</type>
        <definition>LUALIB_API int() luaL_checkoption</definition>
        <argsstring>(lua_State *L, int narg, const char *def, const char *const lst[])</argsstring>
        <name>luaL_checkoption</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>narg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>def</declname>
        </param>
        <param>
          <type>const char *const</type>
          <declname>lst</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="72"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a2b69e67252d95df410818251f4b2d8e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> int()</type>
        <definition>LUALIB_API int() luaL_ref</definition>
        <argsstring>(lua_State *L, int t)</argsstring>
        <name>luaL_ref</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="74"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a6200030ecae784852045161274501e0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> void()</type>
        <definition>LUALIB_API void() luaL_unref</definition>
        <argsstring>(lua_State *L, int t, int ref)</argsstring>
        <name>luaL_unref</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="75"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1afa862c5bdbbcfc8f46e0cac9f32a771e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> int()</type>
        <definition>LUALIB_API int() luaL_loadfile</definition>
        <argsstring>(lua_State *L, const char *filename)</argsstring>
        <name>luaL_loadfile</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="77"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a74d560ea0256e7b48496a4acb1d7522e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> int()</type>
        <definition>LUALIB_API int() luaL_loadbuffer</definition>
        <argsstring>(lua_State *L, const char *buff, size_t sz, const char *name)</argsstring>
        <name>luaL_loadbuffer</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="79"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1ac88130d6214ff6b3e2f1781f327807eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> int()</type>
        <definition>LUALIB_API int() luaL_loadstring</definition>
        <argsstring>(lua_State *L, const char *s)</argsstring>
        <name>luaL_loadstring</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="80"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a7d8712fcede90ae93d5a9a7b409c586e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> <ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *()</type>
        <definition>LUALIB_API lua_State*() luaL_newstate</definition>
        <argsstring>(void)</argsstring>
        <name>luaL_newstate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="82"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a46672be75da57e1a464c5c6d80f19064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> const char *()</type>
        <definition>LUALIB_API const char*() luaL_gsub</definition>
        <argsstring>(lua_State *L, const char *s, const char *p, const char *r)</argsstring>
        <name>luaL_gsub</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="86"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a561116e7d323baa7ae514054bc15978f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> const char *()</type>
        <definition>LUALIB_API const char*() luaL_findtable</definition>
        <argsstring>(lua_State *L, int idx, const char *fname, int szhint)</argsstring>
        <name>luaL_findtable</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>int</type>
          <declname>szhint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="89"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1aab6af54c782855fee2bef84eb41bdc00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> void()</type>
        <definition>LUALIB_API void() luaL_buffinit</definition>
        <argsstring>(lua_State *L, luaL_Buffer *B)</argsstring>
        <name>luaL_buffinit</name>
        <param>
          <type><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref> *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="structlua_l___buffer" kindref="compound">luaL_Buffer</ref> *</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="145"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1adb0d0b797f1b8cc8ec4cda17a2939f87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> char *()</type>
        <definition>LUALIB_API char*() luaL_prepbuffer</definition>
        <argsstring>(luaL_Buffer *B)</argsstring>
        <name>luaL_prepbuffer</name>
        <param>
          <type><ref refid="structlua_l___buffer" kindref="compound">luaL_Buffer</ref> *</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="146"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1a06fceedb3abb1272566ca22c96e34b95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> void()</type>
        <definition>LUALIB_API void() luaL_addlstring</definition>
        <argsstring>(luaL_Buffer *B, const char *s, size_t l)</argsstring>
        <name>luaL_addlstring</name>
        <param>
          <type><ref refid="structlua_l___buffer" kindref="compound">luaL_Buffer</ref> *</type>
          <declname>B</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="147"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1ad9c038f6e108e216011aca1801f84f44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> void()</type>
        <definition>LUALIB_API void() luaL_addstring</definition>
        <argsstring>(luaL_Buffer *B, const char *s)</argsstring>
        <name>luaL_addstring</name>
        <param>
          <type><ref refid="structlua_l___buffer" kindref="compound">luaL_Buffer</ref> *</type>
          <declname>B</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="148"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1aeeb03d69681da0ec0e952b582ce3841c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> void()</type>
        <definition>LUALIB_API void() luaL_addvalue</definition>
        <argsstring>(luaL_Buffer *B)</argsstring>
        <name>luaL_addvalue</name>
        <param>
          <type><ref refid="structlua_l___buffer" kindref="compound">luaL_Buffer</ref> *</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="149"/>
      </memberdef>
      <memberdef kind="function" id="lauxlib_8h_1aac5dfab9ba0ced4f5ae3b22aa35faffe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref> void()</type>
        <definition>LUALIB_API void() luaL_pushresult</definition>
        <argsstring>(luaL_Buffer *B)</argsstring>
        <name>luaL_pushresult</name>
        <param>
          <type><ref refid="structlua_l___buffer" kindref="compound">luaL_Buffer</ref> *</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/newCapitalBreak/lauxlib.h" line="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>$Id:<sp/>lauxlib.h,v<sp/>1.88.1.1<sp/>2007/12/27<sp/>13:02:25<sp/>roberto<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/>Auxiliary<sp/>functions<sp/>for<sp/>building<sp/>Lua<sp/>libraries</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>See<sp/>Copyright<sp/>Notice<sp/>in<sp/>lua.h</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>lauxlib_h</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>lauxlib_h</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lua_8h" kindref="compound">lua.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUA_COMPAT_GETN)</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>int<sp/>(<ref refid="lauxlib_8h_1a0ef5c05520dabbaa65ecbade53e719fa" kindref="member">luaL_getn</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>void<sp/>(<ref refid="lauxlib_8h_1a6528439647f8e5928dd9151be7c89302" kindref="member">luaL_setn</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="22" refid="lauxlib_8h_1a0ef5c05520dabbaa65ecbade53e719fa" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>luaL_getn(L,i)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int)lua_objlen(L,<sp/>i))</highlight></codeline>
<codeline lineno="23" refid="lauxlib_8h_1a6528439647f8e5928dd9151be7c89302" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>luaL_setn(L,i,j)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((void)0)<sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>op!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUA_COMPAT_OPENLIB)</highlight></codeline>
<codeline lineno="27" refid="lauxlib_8h_1aba5d150de784924e9111ccf650bea087" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>luaI_openlib<sp/><sp/><sp/><sp/>luaL_openlib</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>extra<sp/>error<sp/>code<sp/>for<sp/>`luaL_load&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="lauxlib_8h_1ab8d4418d33cd59728435db95ac2caf5a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUA_ERRFILE<sp/><sp/><sp/><sp/><sp/>(LUA_ERRERR+1)</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structlua_l___reg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlua_l___reg" kindref="compound">luaL_Reg</ref><sp/>{</highlight></codeline>
<codeline lineno="36" refid="structlua_l___reg_1a58b99f63b304e5c489b90d812f92cba2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlua_l___reg_1a58b99f63b304e5c489b90d812f92cba2" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="37" refid="structlua_l___reg_1a54aa8f9955870caf78148514e61196ce" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lua_8h_1a5f5bedea265eccf43c6e404e020988ce" kindref="member">lua_CFunction</ref><sp/><ref refid="structlua_l___reg_1a54aa8f9955870caf78148514e61196ce" kindref="member">func</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}<sp/><ref refid="lauxlib_8h_1a48bebf7b56d108021c1ae29549c912f9" kindref="member">luaL_Reg</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>void<sp/>(<ref refid="lauxlib_8h_1aba5d150de784924e9111ccf650bea087" kindref="member">luaI_openlib</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*libname,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlua_l___reg" kindref="compound">luaL_Reg</ref><sp/>*l,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nup);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>void<sp/>(<ref refid="lauxlib_8h_1a258c0fd40d57aec9cf62ebd74be7666e" kindref="member">luaL_register</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*libname,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlua_l___reg" kindref="compound">luaL_Reg</ref><sp/>*l);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>int<sp/>(<ref refid="lauxlib_8h_1aed3f129411ba1ec14f813d650f16384d" kindref="member">luaL_getmetafield</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*e);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>int<sp/>(<ref refid="lauxlib_8h_1af26aec8cce4a3f4448c60f402d78f17d" kindref="member">luaL_callmeta</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*e);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>int<sp/>(<ref refid="lauxlib_8h_1a022056a7197e2e2c12f2b65b2993fd53" kindref="member">luaL_typerror</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>narg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tname);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>int<sp/>(<ref refid="lauxlib_8h_1a526c220d17273c63ce9973bcde4a2c4a" kindref="member">luaL_argerror</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numarg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*extramsg);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*(<ref refid="lauxlib_8h_1af4af154dcb41f8990a572e6a00c349fc" kindref="member">luaL_checklstring</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArg,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*l);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*(<ref refid="lauxlib_8h_1a15b8c426b2e1b0cd1f9ddc32bc94df2f" kindref="member">luaL_optlstring</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArg,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*def,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*l);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/><ref refid="lua_8h_1af0a6ed3b852d680769cfc410a0672172" kindref="member">lua_Number</ref><sp/>(<ref refid="lauxlib_8h_1a3e39a4d35c3ce1555126e372a8a329c3" kindref="member">luaL_checknumber</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArg);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/><ref refid="lua_8h_1af0a6ed3b852d680769cfc410a0672172" kindref="member">lua_Number</ref><sp/>(<ref refid="lauxlib_8h_1a001e2679c64c24eefbaf478fd0c22f97" kindref="member">luaL_optnumber</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nArg,<sp/><ref refid="lua_8h_1af0a6ed3b852d680769cfc410a0672172" kindref="member">lua_Number</ref><sp/>def);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/><ref refid="lua_8h_1a362144baa0cfb14dc38fd21438053d73" kindref="member">lua_Integer</ref><sp/>(<ref refid="lauxlib_8h_1ab9c2bb4294fb7a81d3745dad5711cd63" kindref="member">luaL_checkinteger</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numArg);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/><ref refid="lua_8h_1a362144baa0cfb14dc38fd21438053d73" kindref="member">lua_Integer</ref><sp/>(<ref refid="lauxlib_8h_1a2b17cdda9e7ed73a1cd152cd386dc7a4" kindref="member">luaL_optinteger</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nArg,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lua_8h_1a362144baa0cfb14dc38fd21438053d73" kindref="member">lua_Integer</ref><sp/>def);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>void<sp/>(<ref refid="lauxlib_8h_1a724f5a5aeee97c0b40948c8bca91341c" kindref="member">luaL_checkstack</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>void<sp/>(<ref refid="lauxlib_8h_1ae5f465fb757069d016a10b106c69bdd7" kindref="member">luaL_checktype</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>narg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>void<sp/>(<ref refid="lauxlib_8h_1ad78c85dce421e9cb793e205b9e81c640" kindref="member">luaL_checkany</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>narg);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>int<sp/><sp/><sp/>(<ref refid="lauxlib_8h_1a0e9e032108e7aedc05836b0c1d72a0fa" kindref="member">luaL_newmetatable</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tname);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(<ref refid="lauxlib_8h_1aed8d8e4f3b95c6bcac246ec9895027b1" kindref="member">luaL_checkudata</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ud,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tname);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>void<sp/>(<ref refid="lauxlib_8h_1a269122a77674ca63c9193c2a30b4729e" kindref="member">luaL_where</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lvl);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>int<sp/>(<ref refid="lauxlib_8h_1a994f73d7985c30672469a260d9e86ae6" kindref="member">luaL_error</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>int<sp/>(<ref refid="lauxlib_8h_1a638633914d3a19650db8320c1fccf161" kindref="member">luaL_checkoption</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>narg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*def,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lst[]);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>int<sp/>(<ref refid="lauxlib_8h_1a2b69e67252d95df410818251f4b2d8e5" kindref="member">luaL_ref</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>void<sp/>(<ref refid="lauxlib_8h_1a6200030ecae784852045161274501e0e" kindref="member">luaL_unref</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>int<sp/>(<ref refid="lauxlib_8h_1afa862c5bdbbcfc8f46e0cac9f32a771e" kindref="member">luaL_loadfile</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>int<sp/>(<ref refid="lauxlib_8h_1a74d560ea0256e7b48496a4acb1d7522e" kindref="member">luaL_loadbuffer</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buff,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>int<sp/>(<ref refid="lauxlib_8h_1ac88130d6214ff6b3e2f1781f327807eb" kindref="member">luaL_loadstring</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*(<ref refid="lauxlib_8h_1a7d8712fcede90ae93d5a9a7b409c586e" kindref="member">luaL_newstate</ref>)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*(<ref refid="lauxlib_8h_1a46672be75da57e1a464c5c6d80f19064" kindref="member">luaL_gsub</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*r);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*(<ref refid="lauxlib_8h_1a561116e7d323baa7ae514054bc15978f" kindref="member">luaL_findtable</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>szhint);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="95"><highlight class="comment">**<sp/>===============================================================</highlight></codeline>
<codeline lineno="96"><highlight class="comment">**<sp/>some<sp/>useful<sp/>macros</highlight></codeline>
<codeline lineno="97"><highlight class="comment">**<sp/>===============================================================</highlight></codeline>
<codeline lineno="98"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="lauxlib_8h_1afe2e3018d561c14f2622fb32f425c111" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>luaL_argcheck(L,<sp/>cond,numarg,extramsg)<sp/><sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((void)((cond)<sp/>||<sp/>luaL_argerror(L,<sp/>(numarg),<sp/>(extramsg))))</highlight></codeline>
<codeline lineno="102" refid="lauxlib_8h_1ad9917d22c79651fdd73d42c146b5056f" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>luaL_checkstring(L,n)<sp/><sp/><sp/>(luaL_checklstring(L,<sp/>(n),<sp/>NULL))</highlight></codeline>
<codeline lineno="103" refid="lauxlib_8h_1a732bc5882c4a5da46b236649ab6db47b" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>luaL_optstring(L,n,d)<sp/><sp/><sp/>(luaL_optlstring(L,<sp/>(n),<sp/>(d),<sp/>NULL))</highlight></codeline>
<codeline lineno="104" refid="lauxlib_8h_1adb277a5f654228b51b66f95bcf883601" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>luaL_checkint(L,n)<sp/><sp/><sp/><sp/><sp/><sp/>((int)luaL_checkinteger(L,<sp/>(n)))</highlight></codeline>
<codeline lineno="105" refid="lauxlib_8h_1ab4d7f693e9405558c725783a756e0aca" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>luaL_optint(L,n,d)<sp/><sp/><sp/><sp/><sp/><sp/>((int)luaL_optinteger(L,<sp/>(n),<sp/>(d)))</highlight></codeline>
<codeline lineno="106" refid="lauxlib_8h_1a0df2697cbe2d4a33e012ab336af44b9b" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>luaL_checklong(L,n)<sp/><sp/><sp/><sp/><sp/>((long)luaL_checkinteger(L,<sp/>(n)))</highlight></codeline>
<codeline lineno="107" refid="lauxlib_8h_1a58ea6d94dccfa493103d8e112dd276b6" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>luaL_optlong(L,n,d)<sp/><sp/><sp/><sp/><sp/>((long)luaL_optinteger(L,<sp/>(n),<sp/>(d)))</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="lauxlib_8h_1a2bee94954917c5bccb05d6578f3c675b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>luaL_typename(L,i)<sp/><sp/><sp/><sp/><sp/><sp/>lua_typename(L,<sp/>lua_type(L,(i)))</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="lauxlib_8h_1aa49a7a47a683d6e7868ede50ceb826be" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>luaL_dofile(L,<sp/>fn)<sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(luaL_loadfile(L,<sp/>fn)<sp/>||<sp/>lua_pcall(L,<sp/>0,<sp/>LUA_MULTRET,<sp/>0))</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="lauxlib_8h_1a1a0639bfde6b1e2f6181af45b0137cf5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>luaL_dostring(L,<sp/>s)<sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(luaL_loadstring(L,<sp/>s)<sp/>||<sp/>lua_pcall(L,<sp/>0,<sp/>LUA_MULTRET,<sp/>0))</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="lauxlib_8h_1a201407aa41ff74577c67308372a130d9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>luaL_getmetatable(L,n)<sp/><sp/>(lua_getfield(L,<sp/>LUA_REGISTRYINDEX,<sp/>(n)))</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="lauxlib_8h_1aca033280b0176012ef290131876f706e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>luaL_opt(L,f,n,d)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lua_isnoneornil(L,(n))<sp/>?<sp/>(d)<sp/>:<sp/>f(L,(n)))</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="122"><highlight class="comment">**<sp/>{======================================================</highlight></codeline>
<codeline lineno="123"><highlight class="comment">**<sp/>Generic<sp/>Buffer<sp/>manipulation</highlight></codeline>
<codeline lineno="124"><highlight class="comment">**<sp/>=======================================================</highlight></codeline>
<codeline lineno="125"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="structlua_l___buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlua_l___buffer" kindref="compound">luaL_Buffer</ref><sp/>{</highlight></codeline>
<codeline lineno="130" refid="structlua_l___buffer_1a0af2235170aa873ae30b2dab5a92d78f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlua_l___buffer_1a0af2235170aa873ae30b2dab5a92d78f" kindref="member">p</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>position<sp/>in<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="structlua_l___buffer_1a5edc23a360999279c335bac6f33121db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlua_l___buffer_1a5edc23a360999279c335bac6f33121db" kindref="member">lvl</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>strings<sp/>in<sp/>the<sp/>stack<sp/>(level)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structlua_l___buffer_1a66ae63716768952c74910da4351886fb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="structlua_l___buffer_1a66ae63716768952c74910da4351886fb" kindref="member">L</ref>;</highlight></codeline>
<codeline lineno="133" refid="structlua_l___buffer_1a848307dbf02455a3acfe690a6b3f9a71" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structlua_l___buffer_1a848307dbf02455a3acfe690a6b3f9a71" kindref="member">buffer</ref>[<ref refid="luaconf_8h_1af360ad37a770dfdc29291a99c398f42d" kindref="member">LUAL_BUFFERSIZE</ref>];</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}<sp/><ref refid="lauxlib_8h_1a5f2195b3845806aa4bd9117b11b4d91c" kindref="member">luaL_Buffer</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="lauxlib_8h_1a63935c5b4cf5d45930c875f6cc5e1432" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>luaL_addchar(B,c)<sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"><sp/><sp/>((void)((B)-&gt;p<sp/>&lt;<sp/>((B)-&gt;buffer+LUAL_BUFFERSIZE)<sp/>||<sp/>luaL_prepbuffer(B)),<sp/>\</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"><sp/><sp/><sp/>(*(B)-&gt;p++<sp/>=<sp/>(char)(c)))</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>compatibility<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="lauxlib_8h_1abbe5398fb8c79198354ba483e334cfdf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>luaL_putchar(B,c)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>luaL_addchar(B,c)</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="lauxlib_8h_1a2c5063f5c005f0ecd3fd69a9f7509073" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>luaL_addsize(B,n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((B)-&gt;p<sp/>+=<sp/>(n))</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>void<sp/>(<ref refid="lauxlib_8h_1aab6af54c782855fee2bef84eb41bdc00" kindref="member">luaL_buffinit</ref>)<sp/>(<ref refid="lua_8h_1a28186297f2e9f2de0652504633de8fb3" kindref="member">lua_State</ref><sp/>*<ref refid="global_8h_1a62f94dfc0036bec0c14106c2f15caf3e" kindref="member">L</ref>,<sp/><ref refid="structlua_l___buffer" kindref="compound">luaL_Buffer</ref><sp/>*B);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*(<ref refid="lauxlib_8h_1adb0d0b797f1b8cc8ec4cda17a2939f87" kindref="member">luaL_prepbuffer</ref>)<sp/>(<ref refid="structlua_l___buffer" kindref="compound">luaL_Buffer</ref><sp/>*B);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>void<sp/>(<ref refid="lauxlib_8h_1a06fceedb3abb1272566ca22c96e34b95" kindref="member">luaL_addlstring</ref>)<sp/>(<ref refid="structlua_l___buffer" kindref="compound">luaL_Buffer</ref><sp/>*B,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>void<sp/>(<ref refid="lauxlib_8h_1ad9c038f6e108e216011aca1801f84f44" kindref="member">luaL_addstring</ref>)<sp/>(<ref refid="structlua_l___buffer" kindref="compound">luaL_Buffer</ref><sp/>*B,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>void<sp/>(<ref refid="lauxlib_8h_1aeeb03d69681da0ec0e952b582ce3841c" kindref="member">luaL_addvalue</ref>)<sp/>(<ref refid="structlua_l___buffer" kindref="compound">luaL_Buffer</ref><sp/>*B);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><ref refid="luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95" kindref="member">LUALIB_API</ref><sp/>void<sp/>(<ref refid="lauxlib_8h_1aac5dfab9ba0ced4f5ae3b22aa35faffe" kindref="member">luaL_pushresult</ref>)<sp/>(<ref refid="structlua_l___buffer" kindref="compound">luaL_Buffer</ref><sp/>*B);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>}======================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>compatibility<sp/>with<sp/>ref<sp/>system<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pre-defined<sp/>references<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="lauxlib_8h_1a3bfb758f2ac7c9ecb758e1aeaaa82d3d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUA_NOREF<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-2)</highlight></codeline>
<codeline lineno="160" refid="lauxlib_8h_1a004a6b76c047f3b94890a08dbdcbbee7" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>LUA_REFNIL<sp/><sp/><sp/><sp/><sp/><sp/>(-1)</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="lauxlib_8h_1ad33a233129d81d873e9b5a65fc7d0c3a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>lua_ref(L,lock)<sp/>((lock)<sp/>?<sp/>luaL_ref(L,<sp/>LUA_REGISTRYINDEX)<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>(lua_pushstring(L,<sp/>&quot;unlocked<sp/>references<sp/>are<sp/>obsolete&quot;),<sp/>lua_error(L),<sp/>0))</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="lauxlib_8h_1ac9b78e96e9af92b1f43fa2fa016b263c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>lua_unref(L,ref)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>luaL_unref(L,<sp/>LUA_REGISTRYINDEX,<sp/>(ref))</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="lauxlib_8h_1a7bce9002427e63aa572e53f77432a7ee" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>lua_getref(L,ref)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawgeti(L,<sp/>LUA_REGISTRYINDEX,<sp/>(ref))</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="lauxlib_8h_1a2015fce24247ce967682fd7458684af2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>luaL_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>luaL_Reg</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/repo/newCapitalBreak/lauxlib.h"/>
  </compounddef>
</doxygen>
