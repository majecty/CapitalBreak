.TH "luaconf.h" 3 "금 2월 3 2012" "Version test" "Capital Break" \" -*- nroff -*-
.ad l
.nh
.SH NAME
luaconf.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <limits\&.h>\fP
.br
\fC#include <stddef\&.h>\fP
.br

.SS "매크로"

.in +1c
.ti -1c
.RI "#define \fBLUA_PATH\fP   'LUA_PATH'"
.br
.ti -1c
.RI "#define \fBLUA_CPATH\fP   'LUA_CPATH'"
.br
.ti -1c
.RI "#define \fBLUA_INIT\fP   'LUA_INIT'"
.br
.ti -1c
.RI "#define \fBLUA_ROOT\fP   '/usr/local/'"
.br
.ti -1c
.RI "#define \fBLUA_LDIR\fP   \fBLUA_ROOT\fP 'share/lua/5\&.1/'"
.br
.ti -1c
.RI "#define \fBLUA_CDIR\fP   \fBLUA_ROOT\fP 'lib/lua/5\&.1/'"
.br
.ti -1c
.RI "#define \fBLUA_PATH_DEFAULT\fP"
.br
.ti -1c
.RI "#define \fBLUA_CPATH_DEFAULT\fP   '\&./?\&.so;'  '\&./lib?51\&.so;'  LUA_CDIR'?\&.so;' LUA_CDIR'lib?51\&.so;' LUA_CDIR'loadall\&.so'"
.br
.ti -1c
.RI "#define \fBLUA_DIRSEP\fP   '/'"
.br
.ti -1c
.RI "#define \fBLUA_PATHSEP\fP   ';'"
.br
.ti -1c
.RI "#define \fBLUA_PATH_MARK\fP   '?'"
.br
.ti -1c
.RI "#define \fBLUA_EXECDIR\fP   '!'"
.br
.ti -1c
.RI "#define \fBLUA_IGMARK\fP   '-'"
.br
.ti -1c
.RI "#define \fBLUA_INTEGER\fP   ptrdiff_t"
.br
.ti -1c
.RI "#define \fBLUA_API\fP   extern"
.br
.ti -1c
.RI "#define \fBLUALIB_API\fP   \fBLUA_API\fP"
.br
.ti -1c
.RI "#define \fBLUAI_FUNC\fP   extern"
.br
.ti -1c
.RI "#define \fBLUAI_DATA\fP   extern"
.br
.ti -1c
.RI "#define \fBLUA_QL\fP(x)   ''' x '''"
.br
.ti -1c
.RI "#define \fBLUA_QS\fP   \fBLUA_QL\fP('%s')"
.br
.ti -1c
.RI "#define \fBLUA_IDSIZE\fP   60"
.br
.ti -1c
.RI "#define \fBLUAI_GCPAUSE\fP   200  /* 200% (wait memory to double before next GC) */"
.br
.ti -1c
.RI "#define \fBLUAI_GCMUL\fP   200 /* GC runs 'twice the speed' of memory allocation */"
.br
.ti -1c
.RI "#define \fBLUA_COMPAT_VARARG\fP"
.br
.ti -1c
.RI "#define \fBLUA_COMPAT_MOD\fP"
.br
.ti -1c
.RI "#define \fBLUA_COMPAT_LSTR\fP   1"
.br
.ti -1c
.RI "#define \fBLUA_COMPAT_GFIND\fP"
.br
.ti -1c
.RI "#define \fBLUA_COMPAT_OPENLIB\fP"
.br
.ti -1c
.RI "#define \fBluai_apicheck\fP(\fBL\fP, o)   { (void)\fBL\fP; }"
.br
.ti -1c
.RI "#define \fBLUAI_BITSINT\fP   16"
.br
.ti -1c
.RI "#define \fBLUAI_UINT32\fP   unsigned long"
.br
.ti -1c
.RI "#define \fBLUAI_INT32\fP   long"
.br
.ti -1c
.RI "#define \fBLUAI_MAXINT32\fP   LONG_MAX"
.br
.ti -1c
.RI "#define \fBLUAI_UMEM\fP   unsigned long"
.br
.ti -1c
.RI "#define \fBLUAI_MEM\fP   long"
.br
.ti -1c
.RI "#define \fBLUAI_MAXCALLS\fP   20000"
.br
.ti -1c
.RI "#define \fBLUAI_MAXCSTACK\fP   8000"
.br
.ti -1c
.RI "#define \fBLUAI_MAXCCALLS\fP   200"
.br
.ti -1c
.RI "#define \fBLUAI_MAXVARS\fP   200"
.br
.ti -1c
.RI "#define \fBLUAI_MAXUPVALUES\fP   60"
.br
.ti -1c
.RI "#define \fBLUAL_BUFFERSIZE\fP   BUFSIZ"
.br
.ti -1c
.RI "#define \fBLUA_NUMBER_DOUBLE\fP"
.br
.ti -1c
.RI "#define \fBLUA_NUMBER\fP   double"
.br
.ti -1c
.RI "#define \fBLUAI_UACNUMBER\fP   double"
.br
.ti -1c
.RI "#define \fBLUA_NUMBER_SCAN\fP   '%lf'"
.br
.ti -1c
.RI "#define \fBLUA_NUMBER_FMT\fP   '%\&.14g'"
.br
.ti -1c
.RI "#define \fBlua_number2str\fP(s, n)   sprintf((s), \fBLUA_NUMBER_FMT\fP, (n))"
.br
.ti -1c
.RI "#define \fBLUAI_MAXNUMBER2STR\fP   32 /* 16 digits, sign, point, and \\0 */"
.br
.ti -1c
.RI "#define \fBlua_str2number\fP(s, p)   strtod((s), (p))"
.br
.ti -1c
.RI "#define \fBlua_number2int\fP(i, d)   ((i)=(int)(d))"
.br
.ti -1c
.RI "#define \fBlua_number2integer\fP(i, d)   ((i)=(\fBlua_Integer\fP)(d))"
.br
.ti -1c
.RI "#define \fBLUAI_USER_ALIGNMENT_T\fP   union { double u; void *s; long l; }"
.br
.ti -1c
.RI "#define \fBLUAI_THROW\fP(\fBL\fP, c)   longjmp((c)->b, 1)"
.br
.ti -1c
.RI "#define \fBLUAI_TRY\fP(\fBL\fP, c, a)   if (setjmp((c)->b) == 0) { a }"
.br
.ti -1c
.RI "#define \fBluai_jmpbuf\fP   jmp_buf"
.br
.ti -1c
.RI "#define \fBLUA_MAXCAPTURES\fP   32"
.br
.ti -1c
.RI "#define \fBlua_popen\fP(\fBL\fP, c, m)"
.br
.ti -1c
.RI "#define \fBlua_pclose\fP(\fBL\fP, file)   ((void)((void)\fBL\fP, file), 0)"
.br
.ti -1c
.RI "#define \fBLUAI_EXTRASPACE\fP   0"
.br
.ti -1c
.RI "#define \fBluai_userstateopen\fP(\fBL\fP)   ((void)\fBL\fP)"
.br
.ti -1c
.RI "#define \fBluai_userstateclose\fP(\fBL\fP)   ((void)\fBL\fP)"
.br
.ti -1c
.RI "#define \fBluai_userstatethread\fP(\fBL\fP, L1)   ((void)\fBL\fP)"
.br
.ti -1c
.RI "#define \fBluai_userstatefree\fP(\fBL\fP)   ((void)\fBL\fP)"
.br
.ti -1c
.RI "#define \fBluai_userstateresume\fP(\fBL\fP, n)   ((void)\fBL\fP)"
.br
.ti -1c
.RI "#define \fBluai_userstateyield\fP(\fBL\fP, n)   ((void)\fBL\fP)"
.br
.ti -1c
.RI "#define \fBLUA_INTFRMLEN\fP   'l'"
.br
.ti -1c
.RI "#define \fBLUA_INTFRM_T\fP   long"
.br
.in -1c
.SH "매크로 문서화"
.PP 
.SS "#define \fBLUA_API\fP   extern"
.SS "#define \fBLUA_CDIR\fP   \fBLUA_ROOT\fP 'lib/lua/5\&.1/'"
.SS "#define \fBLUA_COMPAT_GFIND\fP"
.SS "#define \fBLUA_COMPAT_LSTR\fP   1"
.SS "#define \fBLUA_COMPAT_MOD\fP"
.SS "#define \fBLUA_COMPAT_OPENLIB\fP"
.SS "#define \fBLUA_COMPAT_VARARG\fP"
.SS "#define \fBLUA_CPATH\fP   'LUA_CPATH'"
.SS "#define \fBLUA_CPATH_DEFAULT\fP   '\&./?\&.so;'  '\&./lib?51\&.so;'  LUA_CDIR'?\&.so;' LUA_CDIR'lib?51\&.so;' LUA_CDIR'loadall\&.so'"
.SS "#define \fBLUA_DIRSEP\fP   '/'"
.SS "#define \fBLUA_EXECDIR\fP   '!'"
.SS "#define \fBLUA_IDSIZE\fP   60"
.SS "#define \fBLUA_IGMARK\fP   '-'"
.SS "#define \fBLUA_INIT\fP   'LUA_INIT'"
.SS "#define \fBLUA_INTEGER\fP   ptrdiff_t"
.SS "#define \fBLUA_INTFRM_T\fP   long"
.SS "#define \fBLUA_INTFRMLEN\fP   'l'"
.SS "#define \fBLUA_LDIR\fP   \fBLUA_ROOT\fP 'share/lua/5\&.1/'"
.SS "#define \fBLUA_MAXCAPTURES\fP   32"
.SS "#define \fBLUA_NUMBER\fP   double"
.SS "#define \fBlua_number2int\fP(i, d)   ((i)=(int)(d))"
.SS "#define \fBlua_number2integer\fP(i, d)   ((i)=(\fBlua_Integer\fP)(d))"
.SS "#define \fBlua_number2str\fP(s, n)   sprintf((s), \fBLUA_NUMBER_FMT\fP, (n))"
.SS "#define \fBLUA_NUMBER_DOUBLE\fP"
.SS "#define \fBLUA_NUMBER_FMT\fP   '%\&.14g'"
.SS "#define \fBLUA_NUMBER_SCAN\fP   '%lf'"
.SS "#define \fBLUA_PATH\fP   'LUA_PATH'"
.SS "#define \fBLUA_PATH_DEFAULT\fP"\fB값:\fP
.PP
.nf
'\&./?\&.lua;'  LUA_LDIR'?\&.lua;'  LUA_LDIR'?/init\&.lua;' \
                            LUA_CDIR'?\&.lua;'  LUA_CDIR'?/init\&.lua'
.fi
.SS "#define \fBLUA_PATH_MARK\fP   '?'"
.SS "#define \fBLUA_PATHSEP\fP   ';'"
.SS "#define \fBlua_pclose\fP(\fBL\fP, file)   ((void)((void)\fBL\fP, file), 0)"
.SS "#define \fBlua_popen\fP(\fBL\fP, c, m)"\fB값:\fP
.PP
.nf
((void)((void)c, m),  \
                luaL_error(L, LUA_QL('popen') ' not supported'), (FILE*)0)
.fi
.SS "#define \fBLUA_QL\fP(x)   ''' x '''"
.SS "#define \fBLUA_QS\fP   \fBLUA_QL\fP('%s')"
.SS "#define \fBLUA_ROOT\fP   '/usr/local/'"
.SS "#define \fBlua_str2number\fP(s, p)   strtod((s), (p))"
.SS "#define \fBluai_apicheck\fP(\fBL\fP, o)   { (void)\fBL\fP; }"
.SS "#define \fBLUAI_BITSINT\fP   16"
.SS "#define \fBLUAI_DATA\fP   extern"
.SS "#define \fBLUAI_EXTRASPACE\fP   0"
.SS "#define \fBLUAI_FUNC\fP   extern"
.SS "#define \fBLUAI_GCMUL\fP   200 /* GC runs 'twice the speed' of memory allocation */"
.SS "#define \fBLUAI_GCPAUSE\fP   200  /* 200% (wait memory to double before next GC) */"
.SS "#define \fBLUAI_INT32\fP   long"
.SS "#define \fBluai_jmpbuf\fP   jmp_buf"
.SS "#define \fBLUAI_MAXCALLS\fP   20000"
.SS "#define \fBLUAI_MAXCCALLS\fP   200"
.SS "#define \fBLUAI_MAXCSTACK\fP   8000"
.SS "#define \fBLUAI_MAXINT32\fP   LONG_MAX"
.SS "#define \fBLUAI_MAXNUMBER2STR\fP   32 /* 16 digits, sign, point, and \\0 */"
.SS "#define \fBLUAI_MAXUPVALUES\fP   60"
.SS "#define \fBLUAI_MAXVARS\fP   200"
.SS "#define \fBLUAI_MEM\fP   long"
.SS "#define \fBLUAI_THROW\fP(\fBL\fP, c)   longjmp((c)->b, 1)"
.SS "#define \fBLUAI_TRY\fP(\fBL\fP, c, a)   if (setjmp((c)->b) == 0) { a }"
.SS "#define \fBLUAI_UACNUMBER\fP   double"
.SS "#define \fBLUAI_UINT32\fP   unsigned long"
.SS "#define \fBLUAI_UMEM\fP   unsigned long"
.SS "#define \fBLUAI_USER_ALIGNMENT_T\fP   union { double u; void *s; long l; }"
.SS "#define \fBluai_userstateclose\fP(\fBL\fP)   ((void)\fBL\fP)"
.SS "#define \fBluai_userstatefree\fP(\fBL\fP)   ((void)\fBL\fP)"
.SS "#define \fBluai_userstateopen\fP(\fBL\fP)   ((void)\fBL\fP)"
.SS "#define \fBluai_userstateresume\fP(\fBL\fP, n)   ((void)\fBL\fP)"
.SS "#define \fBluai_userstatethread\fP(\fBL\fP, L1)   ((void)\fBL\fP)"
.SS "#define \fBluai_userstateyield\fP(\fBL\fP, n)   ((void)\fBL\fP)"
.SS "#define \fBLUAL_BUFFERSIZE\fP   BUFSIZ"
.SS "#define \fBLUALIB_API\fP   \fBLUA_API\fP"
.SH "작성자"
.PP 
소스 코드로부터 Capital Break를 위해 Doxygen에 의해 자동으로 생성됨\&.
