!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AT	.\common.h	35;"	d
AddCard	.\CPlayer.cpp	/^bool CPlayer::AddCard(ECard pCard)$/;"	f	class:CPlayer	signature:(ECard pCard)
AddCard	.\CPlayer.h	/^	bool	AddCard(ECard pCard);$/;"	p	class:CPlayer	access:public	signature:(ECard pCard)
AddCreditorCount	.\CPlayer.cpp	/^void CPlayer::AddCreditorCount(int pCount)$/;"	f	class:CPlayer	signature:(int pCount)
AddCreditorCount	.\CPlayer.h	/^	void	AddCreditorCount(int pCount);$/;"	p	class:CPlayer	access:public	signature:(int pCount)
AddDept	.\CCard.cpp	/^bool CCard::AddDept(uint64_t pMoney)$/;"	f	class:CCard	signature:(uint64_t pMoney)
AddDept	.\CCard.h	/^	bool	AddDept(uint64_t pMoney);		\/\/ 돈이 리미트보다 커지면 false 를 리턴$/;"	p	class:CCard	access:public	signature:(uint64_t pMoney)
AddDept	.\CPlayer.cpp	/^void CPlayer::AddDept(uint64_t pDept)$/;"	f	class:CPlayer	signature:(uint64_t pDept)
AddDept	.\CPlayer.h	/^	void	AddDept(uint64_t pDept);			\/\/ 이자를 계산할 때 주로 쓰임$/;"	p	class:CPlayer	access:public	signature:(uint64_t pDept)
BAR_HEIGHT	.\Configuration.h	/^const int BAR_HEIGHT = SCREEN_HEIGHT;$/;"	v
BAR_WIDTH	.\Configuration.h	/^const int BAR_WIDTH = 150;$/;"	v
BadEndScene	.\Scene.cpp	/^BadEndScene::BadEndScene()$/;"	f	class:BadEndScene	signature:()
BadEndScene	.\Scene.h	/^		BadEndScene();$/;"	p	class:BadEndScene	access:public	signature:()
BadEndScene	.\Scene.h	/^class BadEndScene : public Scene$/;"	c	inherits:Scene
BadEndScene::BadEndScene	.\Scene.cpp	/^BadEndScene::BadEndScene()$/;"	f	class:BadEndScene	signature:()
BadEndScene::BadEndScene	.\Scene.h	/^		BadEndScene();$/;"	p	class:BadEndScene	access:public	signature:()
BadEndScene::clean_up	.\Scene.cpp	/^void BadEndScene::clean_up()$/;"	f	class:BadEndScene	signature:()
BadEndScene::clean_up	.\Scene.h	/^		virtual void clean_up();$/;"	p	class:BadEndScene	access:public	signature:()
BadEndScene::do_event	.\Scene.cpp	/^void BadEndScene::do_event()$/;"	f	class:BadEndScene	signature:()
BadEndScene::do_event	.\Scene.h	/^		virtual void do_event();$/;"	p	class:BadEndScene	access:public	signature:()
BadEndScene::init	.\Scene.cpp	/^void BadEndScene::init()$/;"	f	class:BadEndScene	signature:()
BadEndScene::init	.\Scene.h	/^		virtual void init();$/;"	p	class:BadEndScene	access:public	signature:()
BadEndScene::show	.\Scene.cpp	/^void BadEndScene::show()$/;"	f	class:BadEndScene	signature:()
BadEndScene::show	.\Scene.h	/^		virtual void show();$/;"	p	class:BadEndScene	access:public	signature:()
Building	.\building.cpp	/^Building::Building(int _x, int _y, int _w, int _h, SDL_Surface* bs_image)$/;"	f	class:Building	signature:(int _x, int _y, int _w, int _h, SDL_Surface* bs_image)
Building	.\building.h	/^		Building(int _x, int _y,int _w, int _h, SDL_Surface* bs_image);$/;"	p	class:Building	access:public	signature:(int _x, int _y,int _w, int _h, SDL_Surface* bs_image)
Building	.\building.h	/^class Building : public Collider$/;"	c	inherits:Collider
Building::Building	.\building.cpp	/^Building::Building(int _x, int _y, int _w, int _h, SDL_Surface* bs_image)$/;"	f	class:Building	signature:(int _x, int _y, int _w, int _h, SDL_Surface* bs_image)
Building::Building	.\building.h	/^		Building(int _x, int _y,int _w, int _h, SDL_Surface* bs_image);$/;"	p	class:Building	access:public	signature:(int _x, int _y,int _w, int _h, SDL_Surface* bs_image)
Building::buildings_image	.\building.h	/^                SDL_Surface *buildings_image;$/;"	m	class:Building	access:private
Building::card_id	.\building.h	/^		int card_id;$/;"	m	class:Building	access:public
Building::check_collide	.\building.cpp	/^bool Building::check_collide(Collider* other)$/;"	f	class:Building	signature:(Collider* other)
Building::check_collide	.\building.h	/^		virtual bool check_collide(Collider*);$/;"	p	class:Building	access:public	signature:(Collider*)
Building::clean_up	.\building.cpp	/^void Building::clean_up()$/;"	f	class:Building	signature:()
Building::clean_up	.\building.h	/^		void clean_up();$/;"	p	class:Building	access:public	signature:()
Building::clip	.\building.h	/^		SDL_Rect clip;$/;"	m	class:Building	access:private
Building::depart_image	.\building.h	/^		SDL_Surface *depart_image;$/;"	m	class:Building	access:private
Building::door	.\building.h	/^		Door *door;$/;"	m	class:Building	access:private
Building::get_box	.\building.cpp	/^SDL_Rect* Building::get_box()$/;"	f	class:Building	signature:()
Building::get_box	.\building.h	/^		virtual SDL_Rect* get_box();$/;"	p	class:Building	access:public	signature:()
Building::get_door	.\building.cpp	/^Door* Building::get_door()$/;"	f	class:Building	signature:()
Building::get_door	.\building.h	/^		Door* get_door();$/;"	p	class:Building	access:public	signature:()
Building::h	.\building.h	/^		int w,h;$/;"	m	class:Building	access:private
Building::init	.\building.cpp	/^void Building::init(ECard pCard)$/;"	f	class:Building	signature:(ECard pCard)
Building::init	.\building.h	/^		void init(ECard pCard);$/;"	p	class:Building	access:public	signature:(ECard pCard)
Building::show	.\building.cpp	/^void Building::show()$/;"	f	class:Building	signature:()
Building::show	.\building.h	/^		void show();$/;"	p	class:Building	access:public	signature:()
Building::w	.\building.h	/^		int w,h;$/;"	m	class:Building	access:private
Building::x	.\building.h	/^		int x,y;$/;"	m	class:Building	access:private
Building::y	.\building.h	/^		int x,y;$/;"	m	class:Building	access:private
BuySomething	.\CCard.cpp	/^bool CCard::BuySomething(uint64_t pPrice)$/;"	f	class:CCard	signature:(uint64_t pPrice)
BuySomething	.\CCard.h	/^	bool	BuySomething(uint64_t pPrice);	\/\/ 물건 살 때 무조건 이 함수 사용 (성공실패)$/;"	p	class:CCard	access:public	signature:(uint64_t pPrice)
BuySomething	.\CPlayer.cpp	/^bool CPlayer::BuySomething(uint64_t pPrice)$/;"	f	class:CPlayer	signature:(uint64_t pPrice)
BuySomething	.\CPlayer.h	/^	bool	BuySomething(uint64_t pPrice);	\/\/ 물건을 살 때 호출해야 하는 함수$/;"	p	class:CPlayer	access:public	signature:(uint64_t pPrice)
CCard	.\CCard.cpp	/^CCard::CCard()$/;"	f	class:CCard	signature:()
CCard	.\CCard.h	/^	CCard();$/;"	p	class:CCard	access:public	signature:()
CCard	.\CCard.h	/^class CCard$/;"	c
CCard::AddDept	.\CCard.cpp	/^bool CCard::AddDept(uint64_t pMoney)$/;"	f	class:CCard	signature:(uint64_t pMoney)
CCard::AddDept	.\CCard.h	/^	bool	AddDept(uint64_t pMoney);		\/\/ 돈이 리미트보다 커지면 false 를 리턴$/;"	p	class:CCard	access:public	signature:(uint64_t pMoney)
CCard::BuySomething	.\CCard.cpp	/^bool CCard::BuySomething(uint64_t pPrice)$/;"	f	class:CCard	signature:(uint64_t pPrice)
CCard::BuySomething	.\CCard.h	/^	bool	BuySomething(uint64_t pPrice);	\/\/ 물건 살 때 무조건 이 함수 사용 (성공실패)$/;"	p	class:CCard	access:public	signature:(uint64_t pPrice)
CCard::CCard	.\CCard.cpp	/^CCard::CCard()$/;"	f	class:CCard	signature:()
CCard::CCard	.\CCard.h	/^	CCard();$/;"	p	class:CCard	access:public	signature:()
CCard::GetCardNo	.\CCard.cpp	/^int CCard::GetCardNo(void) const$/;"	f	class:CCard	signature:(void) const
CCard::GetCardNo	.\CCard.h	/^	int		GetCardNo(void) const;$/;"	p	class:CCard	access:public	signature:(void) const
CCard::GetDept	.\CCard.cpp	/^uint64_t CCard::GetDept(void) const$/;"	f	class:CCard	signature:(void) const
CCard::GetDept	.\CCard.h	/^	uint64_t	GetDept(void) const;$/;"	p	class:CCard	access:public	signature:(void) const
CCard::GetGage	.\CCard.cpp	/^int CCard::GetGage(void) const$/;"	f	class:CCard	signature:(void) const
CCard::GetGage	.\CCard.h	/^	int		GetGage(void) const;$/;"	p	class:CCard	access:public	signature:(void) const
CCard::GetLimit	.\CCard.cpp	/^uint64_t CCard::GetLimit(void) const$/;"	f	class:CCard	signature:(void) const
CCard::GetLimit	.\CCard.h	/^	uint64_t	GetLimit(void) const;$/;"	p	class:CCard	access:public	signature:(void) const
CCard::MinusGage	.\CCard.cpp	/^void CCard::MinusGage(int pMinus)$/;"	f	class:CCard	signature:(int pMinus)
CCard::MinusGage	.\CCard.h	/^	void	MinusGage(int pMinus);$/;"	p	class:CCard	access:public	signature:(int pMinus)
CCard::PlusGage	.\CCard.cpp	/^void CCard::PlusGage(int pAdd)$/;"	f	class:CCard	signature:(int pAdd)
CCard::PlusGage	.\CCard.h	/^	void	PlusGage(int pAdd);$/;"	p	class:CCard	access:public	signature:(int pAdd)
CCard::Reset	.\CCard.cpp	/^void CCard::Reset(void)$/;"	f	class:CCard	signature:(void)
CCard::Reset	.\CCard.h	/^	void Reset();$/;"	p	class:CCard	access:public	signature:()
CCard::SetCard	.\CCard.cpp	/^void CCard::SetCard(int pCardNo)$/;"	f	class:CCard	signature:(int pCardNo)
CCard::SetCard	.\CCard.h	/^	void	SetCard(int pCardNo);$/;"	p	class:CCard	access:public	signature:(int pCardNo)
CCard::SetDept	.\CCard.cpp	/^bool CCard::SetDept(uint64_t pDept)$/;"	f	class:CCard	signature:(uint64_t pDept)
CCard::SetDept	.\CCard.h	/^	bool	SetDept(uint64_t pDept);		\/\/ 돈이 리미트보다 크면 false 를 리턴$/;"	p	class:CCard	access:public	signature:(uint64_t pDept)
CCard::SetGage	.\CCard.cpp	/^void CCard::SetGage(int pGage)$/;"	f	class:CCard	signature:(int pGage)
CCard::SetGage	.\CCard.h	/^	void	SetGage(int pGage);$/;"	p	class:CCard	access:public	signature:(int pGage)
CCard::SetLimit	.\CCard.cpp	/^void CCard::SetLimit(unsigned short pGrade, ERank pRank)$/;"	f	class:CCard	signature:(unsigned short pGrade, ERank pRank)
CCard::SetLimit	.\CCard.h	/^	void	SetLimit(unsigned short pGrade, ERank pRank);$/;"	p	class:CCard	access:public	signature:(unsigned short pGrade, ERank pRank)
CCard::__mCard	.\CCard.h	/^	int			__mCard;	\/\/ 카드번호$/;"	m	class:CCard	access:private
CCard::__mGage	.\CCard.h	/^	int			__mGage;	\/\/ 게이지$/;"	m	class:CCard	access:private
CCard::__mLimit	.\CCard.h	/^	uint64_t		__mLimit;	\/\/ 카드한도$/;"	m	class:CCard	access:private
CCard::__mMoney	.\CCard.h	/^	uint64_t		__mMoney;	\/\/ 빌린돈$/;"	m	class:CCard	access:private
CHAR_VELOCITY	.\global.cpp	/^int CHAR_VELOCITY;$/;"	v
CPlayer	.\CPlayer.cpp	/^CPlayer::CPlayer()$/;"	f	class:CPlayer	signature:()
CPlayer	.\CPlayer.h	/^	CPlayer();$/;"	p	class:CPlayer	access:public	signature:()
CPlayer	.\CPlayer.h	/^class CPlayer$/;"	c
CPlayer::AddCard	.\CPlayer.cpp	/^bool CPlayer::AddCard(ECard pCard)$/;"	f	class:CPlayer	signature:(ECard pCard)
CPlayer::AddCard	.\CPlayer.h	/^	bool	AddCard(ECard pCard);$/;"	p	class:CPlayer	access:public	signature:(ECard pCard)
CPlayer::AddCreditorCount	.\CPlayer.cpp	/^void CPlayer::AddCreditorCount(int pCount)$/;"	f	class:CPlayer	signature:(int pCount)
CPlayer::AddCreditorCount	.\CPlayer.h	/^	void	AddCreditorCount(int pCount);$/;"	p	class:CPlayer	access:public	signature:(int pCount)
CPlayer::AddDept	.\CPlayer.cpp	/^void CPlayer::AddDept(uint64_t pDept)$/;"	f	class:CPlayer	signature:(uint64_t pDept)
CPlayer::AddDept	.\CPlayer.h	/^	void	AddDept(uint64_t pDept);			\/\/ 이자를 계산할 때 주로 쓰임$/;"	p	class:CPlayer	access:public	signature:(uint64_t pDept)
CPlayer::BuySomething	.\CPlayer.cpp	/^bool CPlayer::BuySomething(uint64_t pPrice)$/;"	f	class:CPlayer	signature:(uint64_t pPrice)
CPlayer::BuySomething	.\CPlayer.h	/^	bool	BuySomething(uint64_t pPrice);	\/\/ 물건을 살 때 호출해야 하는 함수$/;"	p	class:CPlayer	access:public	signature:(uint64_t pPrice)
CPlayer::CPlayer	.\CPlayer.cpp	/^CPlayer::CPlayer()$/;"	f	class:CPlayer	signature:()
CPlayer::CPlayer	.\CPlayer.h	/^	CPlayer();$/;"	p	class:CPlayer	access:public	signature:()
CPlayer::CalcDept	.\CPlayer.cpp	/^uint64_t CPlayer::CalcDept(void)$/;"	f	class:CPlayer	signature:(void)
CPlayer::CalcDept	.\CPlayer.h	/^	uint64_t	CalcDept(void);					\/\/ 현재 금융권과 신용등급을 고려한 이자계산$/;"	p	class:CPlayer	access:public	signature:(void)
CPlayer::DecreaseGrade	.\CPlayer.cpp	/^void CPlayer::DecreaseGrade(void)$/;"	f	class:CPlayer	signature:(void)
CPlayer::DecreaseGrade	.\CPlayer.h	/^	void	DecreaseGrade(void);$/;"	p	class:CPlayer	access:public	signature:(void)
CPlayer::GetCardInven	.\CPlayer.cpp	/^CPlayer::TCardInven* CPlayer::GetCardInven(void)$/;"	f	class:CPlayer	signature:(void)
CPlayer::GetCardInven	.\CPlayer.h	/^	TCardInven*		GetCardInven(void);$/;"	p	class:CPlayer	access:public	signature:(void)
CPlayer::GetCreditorCount	.\CPlayer.cpp	/^int CPlayer::GetCreditorCount(void) const$/;"	f	class:CPlayer	signature:(void) const
CPlayer::GetCreditorCount	.\CPlayer.h	/^	int				GetCreditorCount(void) const;$/;"	p	class:CPlayer	access:public	signature:(void) const
CPlayer::GetCurrentCard	.\CPlayer.cpp	/^CCard* CPlayer::GetCurrentCard(void)$/;"	f	class:CPlayer	signature:(void)
CPlayer::GetCurrentCard	.\CPlayer.h	/^	CCard*			GetCurrentCard(void);$/;"	p	class:CPlayer	access:public	signature:(void)
CPlayer::GetDept	.\CPlayer.cpp	/^uint64_t CPlayer::GetDept(void) const$/;"	f	class:CPlayer	signature:(void) const
CPlayer::GetDept	.\CPlayer.h	/^	uint64_t			GetDept(void) const;$/;"	p	class:CPlayer	access:public	signature:(void) const
CPlayer::GetGrade	.\CPlayer.cpp	/^unsigned short CPlayer::GetGrade(void) const$/;"	f	class:CPlayer	signature:(void) const
CPlayer::GetGrade	.\CPlayer.h	/^	unsigned short	GetGrade(void) const;$/;"	p	class:CPlayer	access:public	signature:(void) const
CPlayer::GetPlayerName	.\CPlayer.cpp	/^const char* CPlayer::GetPlayerName(void) const$/;"	f	class:CPlayer	signature:(void) const
CPlayer::GetPlayerName	.\CPlayer.h	/^	const char*		GetPlayerName(void) const;$/;"	p	class:CPlayer	access:public	signature:(void) const
CPlayer::GetRank	.\CPlayer.cpp	/^ERank CPlayer::GetRank(void) const$/;"	f	class:CPlayer	signature:(void) const
CPlayer::GetRank	.\CPlayer.h	/^	ERank			GetRank(void) const;$/;"	p	class:CPlayer	access:public	signature:(void) const
CPlayer::IncreaseGrade	.\CPlayer.cpp	/^void CPlayer::IncreaseGrade(void)$/;"	f	class:CPlayer	signature:(void)
CPlayer::IncreaseGrade	.\CPlayer.h	/^	void	IncreaseGrade(void);$/;"	p	class:CPlayer	access:public	signature:(void)
CPlayer::Reset	.\CPlayer.cpp	/^void CPlayer::Reset()$/;"	f	class:CPlayer	signature:()
CPlayer::Reset	.\CPlayer.h	/^	void	Reset(void);$/;"	p	class:CPlayer	access:public	signature:(void)
CPlayer::SelectCard	.\CPlayer.cpp	/^bool CPlayer::SelectCard(ECard pCard)$/;"	f	class:CPlayer	signature:(ECard pCard)
CPlayer::SelectCard	.\CPlayer.h	/^	bool	SelectCard(ECard pCard);$/;"	p	class:CPlayer	access:public	signature:(ECard pCard)
CPlayer::SetGrade	.\CPlayer.cpp	/^void CPlayer::SetGrade(unsigned short pGrade)$/;"	f	class:CPlayer	signature:(unsigned short pGrade)
CPlayer::SetGrade	.\CPlayer.h	/^	void	SetGrade(unsigned short pGrade);$/;"	p	class:CPlayer	access:public	signature:(unsigned short pGrade)
CPlayer::SetName	.\CPlayer.cpp	/^void CPlayer::SetName(char* pName)$/;"	f	class:CPlayer	signature:(char* pName)
CPlayer::SetName	.\CPlayer.h	/^	void	SetName(char* pName);$/;"	p	class:CPlayer	access:public	signature:(char* pName)
CPlayer::SetRank	.\CPlayer.cpp	/^void CPlayer::SetRank(ERank pRank)$/;"	f	class:CPlayer	signature:(ERank pRank)
CPlayer::SetRank	.\CPlayer.h	/^	void	SetRank(ERank pRank);$/;"	p	class:CPlayer	access:public	signature:(ERank pRank)
CPlayer::TCardInven	.\CPlayer.h	/^	typedef std::map<int, CCard>		TCardInven;				\/\/ 카드 지갑(카드번호 + 카드클래스)$/;"	t	class:CPlayer	access:public
CPlayer::TCardInvenItr	.\CPlayer.h	/^	typedef TCardInven::iterator		TCardInvenItr;$/;"	t	class:CPlayer	access:public
CPlayer::__mCardInven	.\CPlayer.h	/^	TCardInven		__mCardInven;								\/\/ 카드 지갑$/;"	m	class:CPlayer	access:private
CPlayer::__mCreditorCount	.\CPlayer.h	/^	int				__mCreditorCount;							\/\/ 빚쟁이 수$/;"	m	class:CPlayer	access:private
CPlayer::__mCurrentCard	.\CPlayer.h	/^	int				__mCurrentCard;								\/\/ 현재 선택된 카드$/;"	m	class:CPlayer	access:private
CPlayer::__mCurrentRank	.\CPlayer.h	/^	ERank			__mCurrentRank;								\/\/ 현재 금융권$/;"	m	class:CPlayer	access:private
CPlayer::__mDept	.\CPlayer.h	/^	uint64_t			__mDept;									\/\/ 현재 빚$/;"	m	class:CPlayer	access:private
CPlayer::__mGrade	.\CPlayer.h	/^	unsigned short	__mGrade;									\/\/ 현재 신용등급$/;"	m	class:CPlayer	access:private
CPlayer::__mPlayerName	.\CPlayer.h	/^	char			__mPlayerName[MAX_PLAYER_NAME_LEN + 1];		\/\/ 플레이어 이름$/;"	m	class:CPlayer	access:private
CalcDept	.\CPlayer.cpp	/^uint64_t CPlayer::CalcDept(void)$/;"	f	class:CPlayer	signature:(void)
CalcDept	.\CPlayer.h	/^	uint64_t	CalcDept(void);					\/\/ 현재 금융권과 신용등급을 고려한 이자계산$/;"	p	class:CPlayer	access:public	signature:(void)
Character	.\character.h	/^class Character $/;"	c
Character::add_person	.\character.cpp	/^void Character::add_person(){$/;"	f	class:Character	signature:()
Character::add_person	.\character.h	/^		virtual void add_person();$/;"	p	class:Character	access:public	signature:()
Character::clean_up	.\character.cpp	/^void Character::clean_up(){;}$/;"	f	class:Character	signature:()
Character::clean_up	.\character.h	/^		virtual void clean_up();$/;"	p	class:Character	access:public	signature:()
Character::clip	.\character.h	/^		SDL_Rect clip[4][3];\/\/ 8 은 넉넉잡은 숫$/;"	m	class:Character	access:protected
Character::frame	.\character.h	/^		int frame;$/;"	m	class:Character	access:protected
Character::h	.\character.h	/^		int w, h;$/;"	m	class:Character	access:protected
Character::image	.\character.h	/^		SDL_Surface *image;$/;"	m	class:Character	access:protected
Character::init	.\character.cpp	/^void Character::init() {;}$/;"	f	class:Character	signature:()
Character::init	.\character.h	/^		virtual void init();$/;"	p	class:Character	access:public	signature:()
Character::move	.\character.cpp	/^bool Character::move(Uint32 deltaTicks) {return true ;}$/;"	f	class:Character	signature:(Uint32 deltaTicks)
Character::move	.\character.h	/^		virtual bool move(Uint32 deltaTicks);$/;"	p	class:Character	access:public	signature:(Uint32 deltaTicks)
Character::move_back	.\character.cpp	/^void Character::move_back()$/;"	f	class:Character	signature:()
Character::move_back	.\character.h	/^		virtual void move_back();$/;"	p	class:Character	access:public	signature:()
Character::next_person	.\character.h	/^		Character* next_person;$/;"	m	class:Character	access:private
Character::p_x	.\character.h	/^		int x, y, p_x, p_y;$/;"	m	class:Character	access:protected
Character::p_y	.\character.h	/^		int x, y, p_x, p_y;$/;"	m	class:Character	access:protected
Character::set_clip	.\character.cpp	/^void Character::set_clip(){;}$/;"	f	class:Character	signature:()
Character::set_clip	.\character.h	/^		virtual void set_clip();$/;"	p	class:Character	access:public	signature:()
Character::set_object	.\character.cpp	/^void Character::set_object(SDL_Rect *object){;}$/;"	f	class:Character	signature:(SDL_Rect *object)
Character::set_object	.\character.h	/^		virtual void set_object(SDL_Rect *object);$/;"	p	class:Character	access:public	signature:(SDL_Rect *object)
Character::show	.\character.cpp	/^void Character::show(SDL_Surface*){;}$/;"	f	class:Character	signature:(SDL_Surface*)
Character::show	.\character.h	/^		virtual void show(SDL_Surface*);$/;"	p	class:Character	access:public	signature:(SDL_Surface*)
Character::w	.\character.h	/^		int w, h;$/;"	m	class:Character	access:protected
Character::x	.\character.h	/^		int x, y, p_x, p_y;$/;"	m	class:Character	access:protected
Character::xVel	.\character.h	/^		int xVel, yVel;$/;"	m	class:Character	access:protected
Character::y	.\character.h	/^		int x, y, p_x, p_y;$/;"	m	class:Character	access:protected
Character::yVel	.\character.h	/^		int xVel, yVel;$/;"	m	class:Character	access:protected
Character::~Character	.\character.cpp	/^Character::~Character()$/;"	f	class:Character	signature:()
Character::~Character	.\character.h	/^                virtual ~Character();$/;"	p	class:Character	access:public	signature:()
Collider	.\collider.h	/^class Collider$/;"	c
Collider::check_collide	.\collider.h	/^		virtual bool check_collide(Collider*)=0;$/;"	p	class:Collider	access:public	signature:(Collider*)
Collider::get_box	.\collider.h	/^		virtual SDL_Rect* get_box()=0;$/;"	p	class:Collider	access:public	signature:()
ConsoleGlue	.\lua_glue.cpp	/^static luaL_Reg ConsoleGlue[] = $/;"	v	file:
CreditScene	.\Scene.cpp	/^CreditScene::CreditScene()$/;"	f	class:CreditScene	signature:()
CreditScene	.\Scene.h	/^		CreditScene();$/;"	p	class:CreditScene	access:public	signature:()
CreditScene	.\Scene.h	/^class CreditScene: public Scene$/;"	c	inherits:Scene
CreditScene::CreditScene	.\Scene.cpp	/^CreditScene::CreditScene()$/;"	f	class:CreditScene	signature:()
CreditScene::CreditScene	.\Scene.h	/^		CreditScene();$/;"	p	class:CreditScene	access:public	signature:()
CreditScene::clean_up	.\Scene.cpp	/^void CreditScene::clean_up()$/;"	f	class:CreditScene	signature:()
CreditScene::clean_up	.\Scene.h	/^		virtual void clean_up();$/;"	p	class:CreditScene	access:public	signature:()
CreditScene::do_event	.\Scene.cpp	/^void CreditScene::do_event()$/;"	f	class:CreditScene	signature:()
CreditScene::do_event	.\Scene.h	/^		virtual void do_event();$/;"	p	class:CreditScene	access:public	signature:()
CreditScene::init	.\Scene.cpp	/^void CreditScene::init()$/;"	f	class:CreditScene	signature:()
CreditScene::init	.\Scene.h	/^		virtual void init();$/;"	p	class:CreditScene	access:public	signature:()
CreditScene::show	.\Scene.cpp	/^void CreditScene::show()$/;"	f	class:CreditScene	signature:()
CreditScene::show	.\Scene.h	/^		virtual void show();$/;"	p	class:CreditScene	access:public	signature:()
DEBUG_ON	.\global.h	/^const bool DEBUG_ON = true;$/;"	v
DEFAULT_FRAME_RATE	.\global.cpp	/^int DEFAULT_FRAME_RATE;$/;"	v
DEFAULT_LIMIT	.\global.cpp	/^int DEFAULT_LIMIT;$/;"	v
DEFAULT_RATE	.\global.cpp	/^double DEFAULT_RATE;$/;"	v
DOOR_H	.\global.h	/^const int DOOR_H = 16;$/;"	v
DOOR_W	.\global.h	/^const int DOOR_W = 50;$/;"	v
DOOR_X	.\global.h	/^const int DOOR_X = 40;$/;"	v
DOOR_Y	.\global.h	/^const int DOOR_Y = 60;$/;"	v
DOWN	.\character.h	/^		const int DOWN = 0;$/;"	v
DecreaseGrade	.\CPlayer.cpp	/^void CPlayer::DecreaseGrade(void)$/;"	f	class:CPlayer	signature:(void)
DecreaseGrade	.\CPlayer.h	/^	void	DecreaseGrade(void);$/;"	p	class:CPlayer	access:public	signature:(void)
Door	.\building.cpp	/^Door::Door(int building_x,int building_y, int _x , int _y, int _w, int _h)$/;"	f	class:Door	signature:(int building_x,int building_y, int _x , int _y, int _w, int _h)
Door	.\building.h	/^		Door(int building_x, int building_y, int _x = DOOR_X, int _y = DOOR_Y, int _w= DOOR_W, int _h = DOOR_H);$/;"	p	class:Door	access:public	signature:(int building_x, int building_y, int _x = DOOR_X, int _y = DOOR_Y, int _w= DOOR_W, int _h = DOOR_H)
Door	.\building.h	/^class Door : public Collider$/;"	c	inherits:Collider
Door::Door	.\building.cpp	/^Door::Door(int building_x,int building_y, int _x , int _y, int _w, int _h)$/;"	f	class:Door	signature:(int building_x,int building_y, int _x , int _y, int _w, int _h)
Door::Door	.\building.h	/^		Door(int building_x, int building_y, int _x = DOOR_X, int _y = DOOR_Y, int _w= DOOR_W, int _h = DOOR_H);$/;"	p	class:Door	access:public	signature:(int building_x, int building_y, int _x = DOOR_X, int _y = DOOR_Y, int _w= DOOR_W, int _h = DOOR_H)
Door::check_collide	.\building.cpp	/^bool Door::check_collide(Collider* other)$/;"	f	class:Door	signature:(Collider* other)
Door::check_collide	.\building.h	/^		virtual bool check_collide(Collider*);$/;"	p	class:Door	access:public	signature:(Collider*)
Door::get_box	.\building.cpp	/^SDL_Rect* Door::get_box()$/;"	f	class:Door	signature:()
Door::get_box	.\building.h	/^		virtual SDL_Rect* get_box();$/;"	p	class:Door	access:public	signature:()
Door::h	.\building.h	/^		int w,h;$/;"	m	class:Door	access:private
Door::w	.\building.h	/^		int w,h;$/;"	m	class:Door	access:private
Door::x	.\building.h	/^		int x,y;$/;"	m	class:Door	access:private
Door::y	.\building.h	/^		int x,y;$/;"	m	class:Door	access:private
ECard	.\Constants.h	/^enum ECard$/;"	g
ENonBanking	.\Constants.h	/^enum ENonBanking$/;"	g
EPrivateLoan	.\Constants.h	/^enum EPrivateLoan$/;"	g
ERank	.\Constants.h	/^enum ERank$/;"	g
EScript	.\Constants.h	/^enum EScript$/;"	g
FIRSTBUILDING_NUM	.\map.h	/^const int FIRSTBUILDING_NUM  = 6;$/;"	v
GameScene	.\GameScene.cpp	/^GameScene::GameScene()$/;"	f	class:GameScene	signature:()
GameScene	.\Scene.h	/^		GameScene();$/;"	p	class:GameScene	access:public	signature:()
GameScene	.\Scene.h	/^class GameScene : public Scene$/;"	c	inherits:Scene
GameScene::GameScene	.\GameScene.cpp	/^GameScene::GameScene()$/;"	f	class:GameScene	signature:()
GameScene::GameScene	.\Scene.h	/^		GameScene();$/;"	p	class:GameScene	access:public	signature:()
GameScene::check_collide	.\GameScene.cpp	/^void GameScene::check_collide()$/;"	f	class:GameScene	signature:()
GameScene::check_collide	.\Scene.h	/^		void check_collide();$/;"	p	class:GameScene	access:public	signature:()
GameScene::clean_up	.\GameScene.cpp	/^void GameScene::clean_up()$/;"	f	class:GameScene	signature:()
GameScene::clean_up	.\Scene.h	/^		virtual void clean_up();$/;"	p	class:GameScene	access:public	signature:()
GameScene::delta	.\Scene.h	/^		Timer delta;$/;"	m	class:GameScene	access:private
GameScene::do_event	.\GameScene.cpp	/^void GameScene::do_event()$/;"	f	class:GameScene	signature:()
GameScene::do_event	.\Scene.h	/^		virtual void do_event();$/;"	p	class:GameScene	access:public	signature:()
GameScene::gang	.\Scene.h	/^		Character* gang;$/;"	m	class:GameScene	access:private
GameScene::handleInput	.\GameScene.cpp	/^void GameScene::handleInput()$/;"	f	class:GameScene	signature:()
GameScene::handleInput	.\Scene.h	/^                void handleInput();$/;"	p	class:GameScene	access:private	signature:()
GameScene::handleUserEvent	.\GameScene.cpp	/^void GameScene::handleUserEvent()$/;"	f	class:GameScene	signature:()
GameScene::handleUserEvent	.\Scene.h	/^                void handleUserEvent();$/;"	p	class:GameScene	access:private	signature:()
GameScene::happy_ending_flag	.\Scene.h	/^		bool happy_ending_flag;$/;"	m	class:GameScene	access:private
GameScene::hero	.\Scene.h	/^		Hero *hero;$/;"	m	class:GameScene	access:private
GameScene::init	.\GameScene.cpp	/^void GameScene::init()$/;"	f	class:GameScene	signature:()
GameScene::init	.\Scene.h	/^		virtual void init();$/;"	p	class:GameScene	access:public	signature:()
GameScene::init_variables	.\GameScene.cpp	/^void GameScene::init_variables()$/;"	f	class:GameScene	signature:()
GameScene::init_variables	.\Scene.h	/^                void init_variables();$/;"	p	class:GameScene	access:private	signature:()
GameScene::interest_count	.\Scene.h	/^		int interest_count;$/;"	m	class:GameScene	access:private
GameScene::interest_timer	.\Scene.h	/^		Timer interest_timer;$/;"	m	class:GameScene	access:private
GameScene::load_background_image	.\GameScene.cpp	/^void GameScene::load_background_image()$/;"	f	class:GameScene	signature:()
GameScene::load_background_image	.\Scene.h	/^                void load_background_image();$/;"	p	class:GameScene	access:private	signature:()
GameScene::map	.\Scene.h	/^		Map* map;$/;"	m	class:GameScene	access:private
GameScene::message	.\Scene.h	/^		std::string message;$/;"	m	class:GameScene	access:private
GameScene::message2	.\Scene.h	/^		std::string message2;$/;"	m	class:GameScene	access:private
GameScene::message_box	.\Scene.h	/^		SDL_Rect message_box;$/;"	m	class:GameScene	access:private
GameScene::message_box_	.\Scene.h	/^                MessageBox* message_box_;$/;"	m	class:GameScene	access:private
GameScene::message_box_clip	.\Scene.h	/^		SDL_Rect message_box_clip;$/;"	m	class:GameScene	access:private
GameScene::message_timer	.\Scene.h	/^		Timer message_timer;$/;"	m	class:GameScene	access:private
GameScene::message_timer2	.\Scene.h	/^		Timer message_timer2;$/;"	m	class:GameScene	access:private
GameScene::print_message_1	.\GameScene.cpp	/^void GameScene::print_message_1(std::string msg, int duration)$/;"	f	class:GameScene	signature:(std::string msg, int duration)
GameScene::print_message_1	.\Scene.h	/^                void print_message_1(std::string msg, int duration);$/;"	p	class:GameScene	access:public	signature:(std::string msg, int duration)
GameScene::print_message_2	.\GameScene.cpp	/^void GameScene::print_message_2(std::string msg, int duration) $/;"	f	class:GameScene	signature:(std::string msg, int duration)
GameScene::print_message_2	.\Scene.h	/^                void print_message_2(std::string msg, int duration);$/;"	p	class:GameScene	access:public	signature:(std::string msg, int duration)
GameScene::purchase_count	.\Scene.h	/^		int purchase_count;$/;"	m	class:GameScene	access:private
GameScene::show	.\GameScene.cpp	/^void GameScene::show()$/;"	f	class:GameScene	signature:()
GameScene::show	.\Scene.h	/^		virtual void show();$/;"	p	class:GameScene	access:public	signature:()
GameScene::show_message_box	.\GameScene.cpp	/^void GameScene::show_message_box(){$/;"	f	class:GameScene	signature:()
GameScene::show_message_box	.\Scene.h	/^		void show_message_box();$/;"	p	class:GameScene	access:public	signature:()
GameScene::top	.\Scene.h	/^		Top* top;$/;"	m	class:GameScene	access:private
GameScene::wallet	.\Scene.h	/^		WalletBar* wallet;$/;"	m	class:GameScene	access:private
Gang	.\character.h	/^class Gang: public Character, public Collider$/;"	c	inherits:Character,Collider
Gang::add_person	.\character.h	/^		virtual void add_person();$/;"	p	class:Gang	access:public	signature:()
Gang::add_person	.\gang.cpp	/^void Gang::add_person( ){$/;"	f	class:Gang	signature:( )
Gang::check_collide	.\character.h	/^		virtual bool check_collide(Collider*);$/;"	p	class:Gang	access:public	signature:(Collider*)
Gang::check_collide	.\gang.cpp	/^bool Gang::check_collide(Collider* other)$/;"	f	class:Gang	signature:(Collider* other)
Gang::clean_up	.\character.h	/^		virtual void clean_up();$/;"	p	class:Gang	access:public	signature:()
Gang::clean_up	.\gang.cpp	/^void Gang::clean_up()$/;"	f	class:Gang	signature:()
Gang::follow	.\character.h	/^		bool follow();$/;"	p	class:Gang	access:public	signature:()
Gang::follow	.\gang.cpp	/^bool Gang::follow()$/;"	f	class:Gang	signature:()
Gang::get_box	.\character.h	/^		virtual SDL_Rect* get_box();$/;"	p	class:Gang	access:public	signature:()
Gang::get_box	.\gang.cpp	/^SDL_Rect* Gang::get_box()$/;"	f	class:Gang	signature:()
Gang::init	.\character.h	/^		virtual void init();$/;"	p	class:Gang	access:public	signature:()
Gang::init	.\gang.cpp	/^void Gang::init()$/;"	f	class:Gang	signature:()
Gang::move	.\character.h	/^		virtual bool move(Uint32 deltaTicks);$/;"	p	class:Gang	access:public	signature:(Uint32 deltaTicks)
Gang::move	.\gang.cpp	/^bool Gang::move(Uint32 deltaTicks)$/;"	f	class:Gang	signature:(Uint32 deltaTicks)
Gang::move_back	.\character.h	/^		virtual void move_back();$/;"	p	class:Gang	access:public	signature:()
Gang::move_back	.\gang.cpp	/^void Gang::move_back()$/;"	f	class:Gang	signature:()
Gang::next_person	.\character.h	/^		Gang* next_person;$/;"	m	class:Gang	access:private
Gang::object_point	.\character.h	/^		SDL_Rect* object_point;$/;"	m	class:Gang	access:private
Gang::set_clip	.\character.h	/^		virtual void set_clip();$/;"	p	class:Gang	access:public	signature:()
Gang::set_clip	.\gang.cpp	/^void Gang::set_clip()$/;"	f	class:Gang	signature:()
Gang::set_object	.\character.h	/^		virtual void set_object(SDL_Rect *object);$/;"	p	class:Gang	access:public	signature:(SDL_Rect *object)
Gang::set_object	.\gang.cpp	/^void Gang::set_object(SDL_Rect* object)$/;"	f	class:Gang	signature:(SDL_Rect* object)
Gang::show	.\character.h	/^		virtual void show(SDL_Surface*);$/;"	p	class:Gang	access:public	signature:(SDL_Surface*)
Gang::show	.\gang.cpp	/^void Gang::show(SDL_Surface* screen)$/;"	f	class:Gang	signature:(SDL_Surface* screen)
GetCardInven	.\CPlayer.cpp	/^CPlayer::TCardInven* CPlayer::GetCardInven(void)$/;"	f	class:CPlayer	signature:(void)
GetCardInven	.\CPlayer.h	/^	TCardInven*		GetCardInven(void);$/;"	p	class:CPlayer	access:public	signature:(void)
GetCardNo	.\CCard.cpp	/^int CCard::GetCardNo(void) const$/;"	f	class:CCard	signature:(void) const
GetCardNo	.\CCard.h	/^	int		GetCardNo(void) const;$/;"	p	class:CCard	access:public	signature:(void) const
GetCreditorCount	.\CPlayer.cpp	/^int CPlayer::GetCreditorCount(void) const$/;"	f	class:CPlayer	signature:(void) const
GetCreditorCount	.\CPlayer.h	/^	int				GetCreditorCount(void) const;$/;"	p	class:CPlayer	access:public	signature:(void) const
GetCurrentCard	.\CPlayer.cpp	/^CCard* CPlayer::GetCurrentCard(void)$/;"	f	class:CPlayer	signature:(void)
GetCurrentCard	.\CPlayer.h	/^	CCard*			GetCurrentCard(void);$/;"	p	class:CPlayer	access:public	signature:(void)
GetDept	.\CCard.cpp	/^uint64_t CCard::GetDept(void) const$/;"	f	class:CCard	signature:(void) const
GetDept	.\CCard.h	/^	uint64_t	GetDept(void) const;$/;"	p	class:CCard	access:public	signature:(void) const
GetDept	.\CPlayer.cpp	/^uint64_t CPlayer::GetDept(void) const$/;"	f	class:CPlayer	signature:(void) const
GetDept	.\CPlayer.h	/^	uint64_t			GetDept(void) const;$/;"	p	class:CPlayer	access:public	signature:(void) const
GetGage	.\CCard.cpp	/^int CCard::GetGage(void) const$/;"	f	class:CCard	signature:(void) const
GetGage	.\CCard.h	/^	int		GetGage(void) const;$/;"	p	class:CCard	access:public	signature:(void) const
GetGlobalLimit	.\GlobalFunctions.cpp	/^uint64_t GetGlobalLimit(unsigned short pGrade, ERank pRank)$/;"	f	signature:(unsigned short pGrade, ERank pRank)
GetGlobalLimit	.\GlobalFunctions.h	/^uint64_t GetGlobalLimit(unsigned short pGrade, ERank pRank);$/;"	p	signature:(unsigned short pGrade, ERank pRank)
GetGrade	.\CPlayer.cpp	/^unsigned short CPlayer::GetGrade(void) const$/;"	f	class:CPlayer	signature:(void) const
GetGrade	.\CPlayer.h	/^	unsigned short	GetGrade(void) const;$/;"	p	class:CPlayer	access:public	signature:(void) const
GetLimit	.\CCard.cpp	/^uint64_t CCard::GetLimit(void) const$/;"	f	class:CCard	signature:(void) const
GetLimit	.\CCard.h	/^	uint64_t	GetLimit(void) const;$/;"	p	class:CCard	access:public	signature:(void) const
GetNonInterestTime	.\GlobalFunctions.cpp	/^double GetNonInterestTime(unsigned short pGrade, ERank pRank)$/;"	f	signature:(unsigned short pGrade, ERank pRank)
GetNonInterestTime	.\GlobalFunctions.h	/^double GetNonInterestTime(unsigned short pGrade, ERank pRank);$/;"	p	signature:(unsigned short pGrade, ERank pRank)
GetPlayerName	.\CPlayer.cpp	/^const char* CPlayer::GetPlayerName(void) const$/;"	f	class:CPlayer	signature:(void) const
GetPlayerName	.\CPlayer.h	/^	const char*		GetPlayerName(void) const;$/;"	p	class:CPlayer	access:public	signature:(void) const
GetRank	.\CPlayer.cpp	/^ERank CPlayer::GetRank(void) const$/;"	f	class:CPlayer	signature:(void) const
GetRank	.\CPlayer.h	/^	ERank			GetRank(void) const;$/;"	p	class:CPlayer	access:public	signature:(void) const
GetRate	.\GlobalFunctions.cpp	/^double GetRate(unsigned short pGrade, ERank pRank)$/;"	f	signature:(unsigned short pGrade, ERank pRank)
GetRate	.\GlobalFunctions.h	/^double GetRate(unsigned short pGrade, ERank pRank);$/;"	p	signature:(unsigned short pGrade, ERank pRank)
GoodEndScene	.\Scene.cpp	/^GoodEndScene::GoodEndScene()$/;"	f	class:GoodEndScene	signature:()
GoodEndScene	.\Scene.h	/^		GoodEndScene();$/;"	p	class:GoodEndScene	access:public	signature:()
GoodEndScene	.\Scene.h	/^class GoodEndScene: public Scene$/;"	c	inherits:Scene
GoodEndScene::GoodEndScene	.\Scene.cpp	/^GoodEndScene::GoodEndScene()$/;"	f	class:GoodEndScene	signature:()
GoodEndScene::GoodEndScene	.\Scene.h	/^		GoodEndScene();$/;"	p	class:GoodEndScene	access:public	signature:()
GoodEndScene::clean_up	.\Scene.cpp	/^void GoodEndScene::clean_up()$/;"	f	class:GoodEndScene	signature:()
GoodEndScene::clean_up	.\Scene.h	/^		virtual void clean_up();$/;"	p	class:GoodEndScene	access:public	signature:()
GoodEndScene::do_event	.\Scene.cpp	/^void GoodEndScene::do_event()$/;"	f	class:GoodEndScene	signature:()
GoodEndScene::do_event	.\Scene.h	/^		virtual void do_event();$/;"	p	class:GoodEndScene	access:public	signature:()
GoodEndScene::init	.\Scene.cpp	/^void GoodEndScene::init()$/;"	f	class:GoodEndScene	signature:()
GoodEndScene::init	.\Scene.h	/^		virtual void init();$/;"	p	class:GoodEndScene	access:public	signature:()
GoodEndScene::show	.\Scene.cpp	/^void GoodEndScene::show()$/;"	f	class:GoodEndScene	signature:()
GoodEndScene::show	.\Scene.h	/^		virtual void show();$/;"	p	class:GoodEndScene	access:public	signature:()
Hero	.\character.h	/^class Hero : public Character ,public Collider$/;"	c	inherits:Character,Collider
Hero::aPlayer	.\character.h	/^		CPlayer  aPlayer;$/;"	m	class:Hero	access:private
Hero::add_card	.\character.cpp	/^void Hero::add_card(ECard pCard )$/;"	f	class:Hero	signature:(ECard pCard )
Hero::add_card	.\character.h	/^		void add_card(ECard pCard);$/;"	p	class:Hero	access:public	signature:(ECard pCard)
Hero::add_person	.\character.cpp	/^void Hero::add_person( ){$/;"	f	class:Hero	signature:( )
Hero::add_person	.\character.h	/^		virtual void add_person();$/;"	p	class:Hero	access:public	signature:()
Hero::buy	.\character.cpp	/^bool Hero::buy()$/;"	f	class:Hero	signature:()
Hero::buy	.\character.h	/^		bool buy();$/;"	p	class:Hero	access:public	signature:()
Hero::calc_dept	.\character.cpp	/^int Hero::calc_dept()$/;"	f	class:Hero	signature:()
Hero::calc_dept	.\character.h	/^		int calc_dept();$/;"	p	class:Hero	access:public	signature:()
Hero::can_buy	.\character.cpp	/^void Hero::can_buy()$/;"	f	class:Hero	signature:()
Hero::can_buy	.\character.h	/^		void can_buy();$/;"	p	class:Hero	access:public	signature:()
Hero::cant_buy	.\character.cpp	/^void Hero::cant_buy()$/;"	f	class:Hero	signature:()
Hero::cant_buy	.\character.h	/^		void cant_buy();$/;"	p	class:Hero	access:public	signature:()
Hero::check_collide	.\character.cpp	/^bool Hero::check_collide(Collider* other)$/;"	f	class:Hero	signature:(Collider* other)
Hero::check_collide	.\character.h	/^		virtual bool check_collide(Collider*);$/;"	p	class:Hero	access:public	signature:(Collider*)
Hero::clean_up	.\character.cpp	/^void Hero::clean_up()$/;"	f	class:Hero	signature:()
Hero::clean_up	.\character.h	/^		virtual void clean_up();$/;"	p	class:Hero	access:public	signature:()
Hero::decrease_grade	.\character.cpp	/^void Hero::decrease_grade()$/;"	f	class:Hero	signature:()
Hero::decrease_grade	.\character.h	/^		void decrease_grade();$/;"	p	class:Hero	access:public	signature:()
Hero::enter_building	.\character.cpp	/^void Hero::enter_building()$/;"	f	class:Hero	signature:()
Hero::enter_building	.\character.h	/^                void enter_building();$/;"	p	class:Hero	access:public	signature:()
Hero::exit_building	.\character.cpp	/^void Hero::exit_building()$/;"	f	class:Hero	signature:()
Hero::exit_building	.\character.h	/^                void exit_building();$/;"	p	class:Hero	access:public	signature:()
Hero::get_box	.\character.cpp	/^SDL_Rect* Hero::get_box()$/;"	f	class:Hero	signature:()
Hero::get_box	.\character.h	/^		virtual SDL_Rect* get_box();$/;"	p	class:Hero	access:public	signature:()
Hero::get_current_card	.\character.cpp	/^ECard Hero::get_current_card()$/;"	f	class:Hero	signature:()
Hero::get_current_card	.\character.h	/^		ECard get_current_card();$/;"	p	class:Hero	access:public	signature:()
Hero::get_depth	.\character.cpp	/^uint64_t Hero::get_depth()$/;"	f	class:Hero	signature:()
Hero::get_depth	.\character.h	/^		uint64_t get_depth();$/;"	p	class:Hero	access:public	signature:()
Hero::get_grade	.\character.cpp	/^unsigned short Hero::get_grade()$/;"	f	class:Hero	signature:()
Hero::get_grade	.\character.h	/^		unsigned short get_grade();$/;"	p	class:Hero	access:public	signature:()
Hero::get_limit	.\character.cpp	/^uint64_t Hero::get_limit()$/;"	f	class:Hero	signature:()
Hero::get_limit	.\character.h	/^		uint64_t get_limit();$/;"	p	class:Hero	access:public	signature:()
Hero::handleInput	.\character.cpp	/^void Hero::handleInput()$/;"	f	class:Hero	signature:()
Hero::handleInput	.\character.h	/^		void handleInput();$/;"	p	class:Hero	access:public	signature:()
Hero::has_card	.\character.cpp	/^bool Hero::has_card()$/;"	f	class:Hero	signature:()
Hero::has_card	.\character.h	/^		bool has_card();$/;"	p	class:Hero	access:public	signature:()
Hero::increase_grade	.\character.cpp	/^void Hero::increase_grade()$/;"	f	class:Hero	signature:()
Hero::increase_grade	.\character.h	/^		void increase_grade();$/;"	p	class:Hero	access:public	signature:()
Hero::indoor	.\character.h	/^                bool indoor;$/;"	m	class:Hero	access:private
Hero::init	.\character.cpp	/^void Hero::init()$/;"	f	class:Hero	signature:()
Hero::init	.\character.h	/^		virtual void init();$/;"	p	class:Hero	access:public	signature:()
Hero::is_buyable	.\character.h	/^		bool is_buyable;$/;"	m	class:Hero	access:private
Hero::is_indoor	.\character.cpp	/^bool Hero::is_indoor()$/;"	f	class:Hero	signature:()
Hero::is_indoor	.\character.h	/^                bool is_indoor();$/;"	p	class:Hero	access:public	signature:()
Hero::move	.\character.cpp	/^bool Hero::move(Uint32 deltaTicks)$/;"	f	class:Hero	signature:(Uint32 deltaTicks)
Hero::move	.\character.h	/^		virtual bool move(Uint32 deltaTicks);$/;"	p	class:Hero	access:public	signature:(Uint32 deltaTicks)
Hero::move_back	.\character.cpp	/^void Hero::move_back()$/;"	f	class:Hero	signature:()
Hero::move_back	.\character.h	/^		virtual void move_back();$/;"	p	class:Hero	access:public	signature:()
Hero::next_person	.\character.h	/^		Character* next_person;$/;"	m	class:Hero	access:private
Hero::select_card	.\character.cpp	/^void Hero::select_card(ECard pCard )$/;"	f	class:Hero	signature:(ECard pCard )
Hero::select_card	.\character.h	/^		void select_card(ECard pCard);$/;"	p	class:Hero	access:public	signature:(ECard pCard)
Hero::set_clip	.\character.cpp	/^void Hero::set_clip()$/;"	f	class:Hero	signature:()
Hero::set_clip	.\character.h	/^		virtual void set_clip();$/;"	p	class:Hero	access:public	signature:()
Hero::show	.\character.cpp	/^void Hero::show(SDL_Surface* screen)$/;"	f	class:Hero	signature:(SDL_Surface* screen)
Hero::show	.\character.h	/^		virtual void show(SDL_Surface*);$/;"	p	class:Hero	access:public	signature:(SDL_Surface*)
IS_FULL_SCREEN	.\global.cpp	/^bool IS_FULL_SCREEN;$/;"	v
IncreaseGrade	.\CPlayer.cpp	/^void CPlayer::IncreaseGrade(void)$/;"	f	class:CPlayer	signature:(void)
IncreaseGrade	.\CPlayer.h	/^	void	IncreaseGrade(void);$/;"	p	class:CPlayer	access:public	signature:(void)
L	.\global.cpp	/^lua_State* L = NULL;$/;"	v
L	.\lauxlib.h	/^  lua_State *L;$/;"	m	struct:luaL_Buffer	access:public
L	.\lua\lauxlib.h	/^  lua_State *L;$/;"	m	struct:luaL_Buffer	access:public
LEFT	.\character.h	/^		const int LEFT = 1;$/;"	v
LIMIT_RATE	.\global.cpp	/^int LIMIT_RATE;$/;"	v
LUAI_BITSINT	.\lua\luaconf.h	314;"	d
LUAI_BITSINT	.\lua\luaconf.h	317;"	d
LUAI_BITSINT	.\luaconf.h	392;"	d
LUAI_BITSINT	.\luaconf.h	395;"	d
LUAI_DATA	.\luaconf.h	183;"	d
LUAI_DATA	.\luaconf.h	188;"	d
LUAI_DATA	.\luaconf.h	192;"	d
LUAI_DDEC	.\lua\luaconf.h	182;"	d
LUAI_DDEC	.\lua\luaconf.h	187;"	d
LUAI_DDEF	.\lua\luaconf.h	183;"	d
LUAI_DDEF	.\lua\luaconf.h	188;"	d
LUAI_EXTRASPACE	.\luaconf.h	715;"	d
LUAI_FIRSTPSEUDOIDX	.\lua\luaconf.h	358;"	d
LUAI_FUNC	.\lua\luaconf.h	181;"	d
LUAI_FUNC	.\lua\luaconf.h	186;"	d
LUAI_FUNC	.\luaconf.h	182;"	d
LUAI_FUNC	.\luaconf.h	187;"	d
LUAI_FUNC	.\luaconf.h	191;"	d
LUAI_GCMUL	.\luaconf.h	313;"	d
LUAI_GCPAUSE	.\luaconf.h	302;"	d
LUAI_INT32	.\luaconf.h	415;"	d
LUAI_INT32	.\luaconf.h	422;"	d
LUAI_MAXCALLS	.\luaconf.h	435;"	d
LUAI_MAXCCALLS	.\luaconf.h	468;"	d
LUAI_MAXCSTACK	.\luaconf.h	446;"	d
LUAI_MAXINT32	.\luaconf.h	416;"	d
LUAI_MAXINT32	.\luaconf.h	423;"	d
LUAI_MAXNUMBER2STR	.\lua\luaconf.h	400;"	d
LUAI_MAXNUMBER2STR	.\luaconf.h	524;"	d
LUAI_MAXSTACK	.\lua\luaconf.h	352;"	d
LUAI_MAXSTACK	.\lua\luaconf.h	354;"	d
LUAI_MAXUPVALUES	.\luaconf.h	482;"	d
LUAI_MAXVARS	.\luaconf.h	475;"	d
LUAI_MEM	.\lua\luaconf.h	336;"	d
LUAI_MEM	.\lua\luaconf.h	341;"	d
LUAI_MEM	.\luaconf.h	418;"	d
LUAI_MEM	.\luaconf.h	425;"	d
LUAI_THROW	.\luaconf.h	608;"	d
LUAI_THROW	.\luaconf.h	615;"	d
LUAI_THROW	.\luaconf.h	621;"	d
LUAI_TRY	.\luaconf.h	609;"	d
LUAI_TRY	.\luaconf.h	616;"	d
LUAI_TRY	.\luaconf.h	622;"	d
LUAI_UACNUMBER	.\lua\luaconf.h	388;"	d
LUAI_UACNUMBER	.\luaconf.h	511;"	d
LUAI_UINT32	.\luaconf.h	414;"	d
LUAI_UINT32	.\luaconf.h	421;"	d
LUAI_UMEM	.\lua\luaconf.h	335;"	d
LUAI_UMEM	.\lua\luaconf.h	340;"	d
LUAI_UMEM	.\luaconf.h	417;"	d
LUAI_UMEM	.\luaconf.h	424;"	d
LUAI_USER_ALIGNMENT_T	.\luaconf.h	595;"	d
LUALIB_API	.\lua\luaconf.h	161;"	d
LUALIB_API	.\luaconf.h	169;"	d
LUAL_BUFFERSIZE	.\lua\luaconf.h	367;"	d
LUAL_BUFFERSIZE	.\luaconf.h	488;"	d
LUAMOD_API	.\lua\luaconf.h	162;"	d
LUA_ANSI	.\lua\luaconf.h	28;"	d
LUA_ANSI	.\luaconf.h	28;"	d
LUA_API	.\lua\luaconf.h	148;"	d
LUA_API	.\lua\luaconf.h	150;"	d
LUA_API	.\lua\luaconf.h	155;"	d
LUA_API	.\luaconf.h	157;"	d
LUA_API	.\luaconf.h	159;"	d
LUA_API	.\luaconf.h	164;"	d
LUA_AUTHORS	.\lua.h	23;"	d
LUA_AUTHORS	.\lua\lua.h	27;"	d
LUA_BITLIBNAME	.\lua\lualib.h	32;"	d
LUA_CDIR	.\lua\luaconf.h	106;"	d
LUA_CDIR	.\lua\luaconf.h	93;"	d
LUA_CDIR	.\luaconf.h	89;"	d
LUA_CDIR	.\luaconf.h	99;"	d
LUA_COLIBNAME	.\lua\lualib.h	17;"	d
LUA_COLIBNAME	.\lualib.h	18;"	d
LUA_COMPAT_GETN	.\luaconf.h	322;"	d
LUA_COMPAT_GFIND	.\luaconf.h	358;"	d
LUA_COMPAT_LOADERS	.\lua\luaconf.h	254;"	d
LUA_COMPAT_LOADLIB	.\luaconf.h	329;"	d
LUA_COMPAT_LOADSTRING	.\lua\luaconf.h	276;"	d
LUA_COMPAT_LOG10	.\lua\luaconf.h	270;"	d
LUA_COMPAT_LSTR	.\luaconf.h	351;"	d
LUA_COMPAT_MAXN	.\lua\luaconf.h	281;"	d
LUA_COMPAT_MOD	.\luaconf.h	343;"	d
LUA_COMPAT_MODULE	.\lua\luaconf.h	299;"	d
LUA_COMPAT_OPENLIB	.\luaconf.h	366;"	d
LUA_COMPAT_UNPACK	.\lua\luaconf.h	248;"	d
LUA_COMPAT_VARARG	.\luaconf.h	336;"	d
LUA_COPYRIGHT	.\lua.h	22;"	d
LUA_COPYRIGHT	.\lua\lua.h	26;"	d
LUA_CPATH	.\luaconf.h	70;"	d
LUA_CPATH_DEFAULT	.\lua\luaconf.h	110;"	d
LUA_CPATH_DEFAULT	.\lua\luaconf.h	97;"	d
LUA_CPATH_DEFAULT	.\luaconf.h	103;"	d
LUA_CPATH_DEFAULT	.\luaconf.h	93;"	d
LUA_DBLIBNAME	.\lua\lualib.h	38;"	d
LUA_DBLIBNAME	.\lualib.h	36;"	d
LUA_DIRSEP	.\lua\luaconf.h	122;"	d
LUA_DIRSEP	.\lua\luaconf.h	124;"	d
LUA_DIRSEP	.\luaconf.h	114;"	d
LUA_DIRSEP	.\luaconf.h	116;"	d
LUA_DL_DLL	.\lua\luaconf.h	37;"	d
LUA_DL_DLL	.\luaconf.h	705;"	d
LUA_DL_DLOPEN	.\luaconf.h	701;"	d
LUA_DL_DYLD	.\luaconf.h	44;"	d
LUA_ENV	.\lua\luaconf.h	133;"	d
LUA_ENVIRONINDEX	.\lua.h	37;"	d
LUA_ERRERR	.\lua.h	47;"	d
LUA_ERRERR	.\lua\lua.h	51;"	d
LUA_ERRFILE	.\lauxlib.h	32;"	d
LUA_ERRFILE	.\lua\lauxlib.h	20;"	d
LUA_ERRGCMM	.\lua\lua.h	50;"	d
LUA_ERRMEM	.\lua.h	46;"	d
LUA_ERRMEM	.\lua\lua.h	49;"	d
LUA_ERRRUN	.\lua.h	44;"	d
LUA_ERRRUN	.\lua\lua.h	47;"	d
LUA_ERRSYNTAX	.\lua.h	45;"	d
LUA_ERRSYNTAX	.\lua\lua.h	48;"	d
LUA_EXECDIR	.\luaconf.h	134;"	d
LUA_FILEHANDLE	.\lua\lauxlib.h	185;"	d
LUA_FILEHANDLE	.\lualib.h	15;"	d
LUA_GCCOLLECT	.\lua.h	223;"	d
LUA_GCCOLLECT	.\lua\lua.h	278;"	d
LUA_GCCOUNT	.\lua.h	224;"	d
LUA_GCCOUNT	.\lua\lua.h	279;"	d
LUA_GCCOUNTB	.\lua.h	225;"	d
LUA_GCCOUNTB	.\lua\lua.h	280;"	d
LUA_GCGEN	.\lua\lua.h	286;"	d
LUA_GCINC	.\lua\lua.h	287;"	d
LUA_GCISRUNNING	.\lua\lua.h	285;"	d
LUA_GCRESTART	.\lua.h	222;"	d
LUA_GCRESTART	.\lua\lua.h	277;"	d
LUA_GCSETMAJORINC	.\lua\lua.h	284;"	d
LUA_GCSETPAUSE	.\lua.h	227;"	d
LUA_GCSETPAUSE	.\lua\lua.h	282;"	d
LUA_GCSETSTEPMUL	.\lua.h	228;"	d
LUA_GCSETSTEPMUL	.\lua\lua.h	283;"	d
LUA_GCSTEP	.\lua.h	226;"	d
LUA_GCSTEP	.\lua\lua.h	281;"	d
LUA_GCSTOP	.\lua.h	221;"	d
LUA_GCSTOP	.\lua\lua.h	276;"	d
LUA_GLOBALSINDEX	.\lua.h	38;"	d
LUA_HOOKCALL	.\lua.h	311;"	d
LUA_HOOKCALL	.\lua\lua.h	355;"	d
LUA_HOOKCOUNT	.\lua.h	314;"	d
LUA_HOOKCOUNT	.\lua\lua.h	358;"	d
LUA_HOOKLINE	.\lua.h	313;"	d
LUA_HOOKLINE	.\lua\lua.h	357;"	d
LUA_HOOKRET	.\lua.h	312;"	d
LUA_HOOKRET	.\lua\lua.h	356;"	d
LUA_HOOKTAILCALL	.\lua\lua.h	359;"	d
LUA_HOOKTAILRET	.\lua.h	315;"	d
LUA_IDSIZE	.\lua\luaconf.h	206;"	d
LUA_IDSIZE	.\luaconf.h	210;"	d
LUA_IEEE754TRICK	.\lua\luaconf.h	472;"	d
LUA_IEEEENDIAN	.\lua\luaconf.h	482;"	d
LUA_IEEEENDIAN	.\lua\luaconf.h	484;"	d
LUA_IGMARK	.\luaconf.h	135;"	d
LUA_INIT	.\luaconf.h	71;"	d
LUA_INT32	.\lua\luaconf.h	334;"	d
LUA_INT32	.\lua\luaconf.h	339;"	d
LUA_INTEGER	.\lua\luaconf.h	449;"	d
LUA_INTEGER	.\luaconf.h	143;"	d
LUA_INTFRMLEN	.\luaconf.h	741;"	d
LUA_INTFRMLEN	.\luaconf.h	746;"	d
LUA_INTFRM_T	.\luaconf.h	742;"	d
LUA_INTFRM_T	.\luaconf.h	747;"	d
LUA_IOLIBNAME	.\lua\lualib.h	23;"	d
LUA_IOLIBNAME	.\lualib.h	24;"	d
LUA_LDIR	.\lua\luaconf.h	105;"	d
LUA_LDIR	.\lua\luaconf.h	92;"	d
LUA_LDIR	.\luaconf.h	88;"	d
LUA_LDIR	.\luaconf.h	98;"	d
LUA_LOADLIBNAME	.\lua\lualib.h	41;"	d
LUA_LOADLIBNAME	.\lualib.h	39;"	d
LUA_MASKCALL	.\lua.h	321;"	d
LUA_MASKCALL	.\lua\lua.h	365;"	d
LUA_MASKCOUNT	.\lua.h	324;"	d
LUA_MASKCOUNT	.\lua\lua.h	368;"	d
LUA_MASKLINE	.\lua.h	323;"	d
LUA_MASKLINE	.\lua\lua.h	367;"	d
LUA_MASKRET	.\lua.h	322;"	d
LUA_MASKRET	.\lua\lua.h	366;"	d
LUA_MATHLIBNAME	.\lua\lualib.h	35;"	d
LUA_MATHLIBNAME	.\lualib.h	33;"	d
LUA_MAXCAPTURES	.\luaconf.h	633;"	d
LUA_MAXINPUT	.\luaconf.h	262;"	d
LUA_MINSTACK	.\lua.h	87;"	d
LUA_MINSTACK	.\lua\lua.h	93;"	d
LUA_MULTRET	.\lua.h	30;"	d
LUA_MULTRET	.\lua\lua.h	34;"	d
LUA_NANTRICK_LE	.\lua\luaconf.h	512;"	d
LUA_NOREF	.\lauxlib.h	159;"	d
LUA_NOREF	.\lua\lauxlib.h	69;"	d
LUA_NUMBER	.\lua\luaconf.h	382;"	d
LUA_NUMBER	.\luaconf.h	505;"	d
LUA_NUMBER_DOUBLE	.\lua\luaconf.h	381;"	d
LUA_NUMBER_DOUBLE	.\luaconf.h	504;"	d
LUA_NUMBER_FMT	.\lua\luaconf.h	398;"	d
LUA_NUMBER_FMT	.\luaconf.h	522;"	d
LUA_NUMBER_SCAN	.\lua\luaconf.h	397;"	d
LUA_NUMBER_SCAN	.\luaconf.h	521;"	d
LUA_NUMTAGS	.\lua\lua.h	88;"	d
LUA_OK	.\lua\lua.h	45;"	d
LUA_OPADD	.\lua\lua.h	179;"	d
LUA_OPDIV	.\lua\lua.h	182;"	d
LUA_OPEQ	.\lua\lua.h	189;"	d
LUA_OPLE	.\lua\lua.h	191;"	d
LUA_OPLT	.\lua\lua.h	190;"	d
LUA_OPMOD	.\lua\lua.h	183;"	d
LUA_OPMUL	.\lua\lua.h	181;"	d
LUA_OPPOW	.\lua\lua.h	184;"	d
LUA_OPSUB	.\lua\lua.h	180;"	d
LUA_OPUNM	.\lua\lua.h	185;"	d
LUA_OSLIBNAME	.\lua\lualib.h	26;"	d
LUA_OSLIBNAME	.\lualib.h	27;"	d
LUA_PATH	.\luaconf.h	69;"	d
LUA_PATHSEP	.\luaconf.h	132;"	d
LUA_PATH_DEFAULT	.\lua\luaconf.h	107;"	d
LUA_PATH_DEFAULT	.\lua\luaconf.h	94;"	d
LUA_PATH_DEFAULT	.\luaconf.h	100;"	d
LUA_PATH_DEFAULT	.\luaconf.h	90;"	d
LUA_PATH_MARK	.\luaconf.h	133;"	d
LUA_PROGNAME	.\luaconf.h	254;"	d
LUA_PROMPT	.\luaconf.h	245;"	d
LUA_PROMPT2	.\luaconf.h	246;"	d
LUA_QL	.\lua\luaconf.h	197;"	d
LUA_QL	.\luaconf.h	201;"	d
LUA_QS	.\lua\luaconf.h	198;"	d
LUA_QS	.\luaconf.h	202;"	d
LUA_REFNIL	.\lauxlib.h	160;"	d
LUA_REFNIL	.\lua\lauxlib.h	70;"	d
LUA_REGISTRYINDEX	.\lua.h	36;"	d
LUA_REGISTRYINDEX	.\lua\lua.h	40;"	d
LUA_RELEASE	.\lua.h	20;"	d
LUA_RELEASE	.\lua\lua.h	25;"	d
LUA_RIDX_GLOBALS	.\lua\lua.h	98;"	d
LUA_RIDX_LAST	.\lua\lua.h	99;"	d
LUA_RIDX_MAINTHREAD	.\lua\lua.h	97;"	d
LUA_ROOT	.\lua\luaconf.h	104;"	d
LUA_ROOT	.\luaconf.h	97;"	d
LUA_SIGNATURE	.\lua.h	27;"	d
LUA_SIGNATURE	.\lua\lua.h	31;"	d
LUA_STRLIBNAME	.\lua\lualib.h	29;"	d
LUA_STRLIBNAME	.\lualib.h	30;"	d
LUA_TABLIBNAME	.\lua\lualib.h	20;"	d
LUA_TABLIBNAME	.\lualib.h	21;"	d
LUA_TBOOLEAN	.\lua.h	75;"	d
LUA_TBOOLEAN	.\lua\lua.h	79;"	d
LUA_TFUNCTION	.\lua.h	80;"	d
LUA_TFUNCTION	.\lua\lua.h	84;"	d
LUA_TLIGHTUSERDATA	.\lua.h	76;"	d
LUA_TLIGHTUSERDATA	.\lua\lua.h	80;"	d
LUA_TMPNAMBUFSIZE	.\luaconf.h	648;"	d
LUA_TMPNAMBUFSIZE	.\luaconf.h	656;"	d
LUA_TNIL	.\lua.h	74;"	d
LUA_TNIL	.\lua\lua.h	78;"	d
LUA_TNONE	.\lua.h	72;"	d
LUA_TNONE	.\lua\lua.h	76;"	d
LUA_TNUMBER	.\lua.h	77;"	d
LUA_TNUMBER	.\lua\lua.h	81;"	d
LUA_TSTRING	.\lua.h	78;"	d
LUA_TSTRING	.\lua\lua.h	82;"	d
LUA_TTABLE	.\lua.h	79;"	d
LUA_TTABLE	.\lua\lua.h	83;"	d
LUA_TTHREAD	.\lua.h	82;"	d
LUA_TTHREAD	.\lua\lua.h	86;"	d
LUA_TUSERDATA	.\lua.h	81;"	d
LUA_TUSERDATA	.\lua\lua.h	85;"	d
LUA_UNSIGNED	.\lua\luaconf.h	455;"	d
LUA_USE_AFORMAT	.\lua\luaconf.h	38;"	d
LUA_USE_AFORMAT	.\lua\luaconf.h	48;"	d
LUA_USE_AFORMAT	.\lua\luaconf.h	57;"	d
LUA_USE_DLOPEN	.\lua\luaconf.h	45;"	d
LUA_USE_DLOPEN	.\lua\luaconf.h	54;"	d
LUA_USE_DLOPEN	.\luaconf.h	38;"	d
LUA_USE_GMTIME_R	.\lua\luaconf.h	73;"	d
LUA_USE_ISATTY	.\lua\luaconf.h	70;"	d
LUA_USE_ISATTY	.\luaconf.h	56;"	d
LUA_USE_LONGLONG	.\lua\luaconf.h	49;"	d
LUA_USE_LONGLONG	.\lua\luaconf.h	58;"	d
LUA_USE_MKSTEMP	.\lua\luaconf.h	69;"	d
LUA_USE_MKSTEMP	.\luaconf.h	55;"	d
LUA_USE_POPEN	.\lua\luaconf.h	71;"	d
LUA_USE_POPEN	.\luaconf.h	57;"	d
LUA_USE_POSIX	.\lua\luaconf.h	44;"	d
LUA_USE_POSIX	.\lua\luaconf.h	53;"	d
LUA_USE_POSIX	.\luaconf.h	37;"	d
LUA_USE_POSIX	.\luaconf.h	43;"	d
LUA_USE_READLINE	.\lua\luaconf.h	46;"	d
LUA_USE_READLINE	.\lua\luaconf.h	55;"	d
LUA_USE_READLINE	.\luaconf.h	39;"	d
LUA_USE_STRTODHEX	.\lua\luaconf.h	47;"	d
LUA_USE_STRTODHEX	.\lua\luaconf.h	56;"	d
LUA_USE_ULONGJMP	.\lua\luaconf.h	72;"	d
LUA_USE_ULONGJMP	.\luaconf.h	58;"	d
LUA_VDIR	.\lua\luaconf.h	103;"	d
LUA_VERSION	.\lua.h	19;"	d
LUA_VERSION	.\lua\lua.h	24;"	d
LUA_VERSION_MAJOR	.\lua\lua.h	19;"	d
LUA_VERSION_MINOR	.\lua\lua.h	20;"	d
LUA_VERSION_NUM	.\lua.h	21;"	d
LUA_VERSION_NUM	.\lua\lua.h	21;"	d
LUA_VERSION_RELEASE	.\lua\lua.h	22;"	d
LUA_WIN	.\lua\luaconf.h	33;"	d
LUA_WIN	.\luaconf.h	33;"	d
LUA_YIELD	.\lua.h	43;"	d
LUA_YIELD	.\lua\lua.h	46;"	d
LuaGlue	.\lua_glue.cpp	9;"	d	file:
MACROTOSTRING	.\common.h	34;"	d
MAP_H	.\global.h	/^const int MAP_H = 340;$/;"	v
MAP_HEIGHT	.\Configuration.h	/^const int MAP_HEIGHT = SCREEN_HEIGHT;$/;"	v
MAP_W	.\global.h	/^const int MAP_W = 500;$/;"	v
MAP_WIDTH	.\Configuration.h	/^const int MAP_WIDTH = 490;$/;"	v
MAP_X	.\global.h	/^const int MAP_X = 140;$/;"	v
MAP_Y	.\global.h	/^const int MAP_Y = 30;$/;"	v
MAX_CARD_NAME	.\Constants.h	2;"	d
MAX_PLAYER_NAME_LEN	.\Constants.h	3;"	d
MESSAGE_BOX_1_EVENT	.\global.h	/^const int MESSAGE_BOX_1_EVENT = 110;$/;"	v
MESSAGE_BOX_2_EVENT	.\global.h	/^const int MESSAGE_BOX_2_EVENT = 111;$/;"	v
MESSAGE_BOX_H	.\global.h	/^const int MESSAGE_BOX_H = 100;$/;"	v
MESSAGE_BOX_W	.\global.h	/^const int MESSAGE_BOX_W = 500;$/;"	v
MESSAGE_BOX_X	.\global.h	/^const int MESSAGE_BOX_X = 140+10;$/;"	v
MESSAGE_BOX_Y	.\global.h	/^const int MESSAGE_BOX_Y = 389;$/;"	v
MS_ASMTRICK	.\lua\luaconf.h	466;"	d
Map	.\map.h	/^class Map$/;"	c
Map::background	.\map.h	/^		SDL_Surface* background;$/;"	m	class:Map	access:protected
Map::boxes	.\map.h	/^		vector<SDL_Rect*> boxes;$/;"	m	class:Map	access:protected
Map::buildings	.\map.h	/^		vector<Building*> buildings;$/;"	m	class:Map	access:protected
Map::buildings_image	.\map.h	/^                SDL_Surface* buildings_image;$/;"	m	class:Map	access:protected
Map::clean_up	.\map.cpp	/^void Map::clean_up()$/;"	f	class:Map	signature:()
Map::clean_up	.\map.h	/^		void clean_up();$/;"	p	class:Map	access:public	signature:()
Map::clip	.\map.h	/^		SDL_Rect clip;$/;"	m	class:Map	access:protected
Map::get_boxes	.\map.cpp	/^vector<SDL_Rect*> Map::get_boxes()$/;"	f	class:Map	signature:()
Map::get_boxes	.\map.h	/^		vector<SDL_Rect*> get_boxes(); \/\/ for collide$/;"	p	class:Map	access:public	signature:()
Map::get_buildings	.\map.cpp	/^vector<Building*> Map::get_buildings()$/;"	f	class:Map	signature:()
Map::get_buildings	.\map.h	/^		vector<Building*> get_buildings();$/;"	p	class:Map	access:public	signature:()
Map::h	.\map.h	/^		int w,h;$/;"	m	class:Map	access:protected
Map::init	.\map.cpp	/^void Map::init(SDL_Surface* back)$/;"	f	class:Map	signature:(SDL_Surface* back)
Map::init	.\map.h	/^		void init(SDL_Surface* back);$/;"	p	class:Map	access:public	signature:(SDL_Surface* back)
Map::show	.\map.cpp	/^void Map::show()$/;"	f	class:Map	signature:()
Map::show	.\map.h	/^		void show();$/;"	p	class:Map	access:public	signature:()
Map::w	.\map.h	/^		int w,h;$/;"	m	class:Map	access:protected
Map::x	.\map.h	/^		int x,y;$/;"	m	class:Map	access:protected
Map::y	.\map.h	/^		int x,y;$/;"	m	class:Map	access:protected
MessageBox	.\GameScene_GUI.cpp	/^MessageBox::MessageBox(SDL_Surface* bg)$/;"	f	class:MessageBox	signature:(SDL_Surface* bg)
MessageBox	.\Scene.h	/^        MessageBox(SDL_Surface* bg);$/;"	p	class:MessageBox	access:public	signature:(SDL_Surface* bg)
MessageBox	.\Scene.h	/^class MessageBox$/;"	c
MessageBox::MessageBox	.\GameScene_GUI.cpp	/^MessageBox::MessageBox(SDL_Surface* bg)$/;"	f	class:MessageBox	signature:(SDL_Surface* bg)
MessageBox::MessageBox	.\Scene.h	/^        MessageBox(SDL_Surface* bg);$/;"	p	class:MessageBox	access:public	signature:(SDL_Surface* bg)
MessageBox::background	.\Scene.h	/^        SDL_Surface* background;$/;"	m	class:MessageBox	access:private
MessageBox::message	.\Scene.h	/^        std::string message;$/;"	m	class:MessageBox	access:private
MessageBox::message2	.\Scene.h	/^        std::string message2;$/;"	m	class:MessageBox	access:private
MessageBox::message_timer	.\Scene.h	/^        Timer message_timer;$/;"	m	class:MessageBox	access:private
MessageBox::message_timer2	.\Scene.h	/^        Timer message_timer2;$/;"	m	class:MessageBox	access:private
MessageBox::print_message_1	.\GameScene_GUI.cpp	/^void MessageBox::print_message_1(std::string msg, int duration)$/;"	f	class:MessageBox	signature:(std::string msg, int duration)
MessageBox::print_message_1	.\Scene.h	/^        void print_message_1(std::string msg, int duration);$/;"	p	class:MessageBox	access:public	signature:(std::string msg, int duration)
MessageBox::print_message_2	.\GameScene_GUI.cpp	/^void MessageBox::print_message_2(std::string msg, int duration) $/;"	f	class:MessageBox	signature:(std::string msg, int duration)
MessageBox::print_message_2	.\Scene.h	/^        void print_message_2(std::string msg, int duration);$/;"	p	class:MessageBox	access:public	signature:(std::string msg, int duration)
MessageBox::rect	.\Scene.h	/^        SDL_Rect rect;$/;"	m	class:MessageBox	access:private
MessageBox::show	.\GameScene_GUI.cpp	/^void MessageBox::show()$/;"	f	class:MessageBox	signature:()
MessageBox::show	.\Scene.h	/^        void show();$/;"	p	class:MessageBox	access:public	signature:()
MessageBox::show_message_box	.\GameScene_GUI.cpp	/^void MessageBox::show_message_box()$/;"	f	class:MessageBox	signature:()
MessageBox::show_message_box	.\Scene.h	/^        void show_message_box();$/;"	p	class:MessageBox	access:public	signature:()
MinusGage	.\CCard.cpp	/^void CCard::MinusGage(int pMinus)$/;"	f	class:CCard	signature:(int pMinus)
MinusGage	.\CCard.h	/^	void	MinusGage(int pMinus);$/;"	p	class:CCard	access:public	signature:(int pMinus)
OPEN_DOOR_EVENT	.\global.h	/^const int OPEN_DOOR_EVENT = 100;$/;"	v
PlusGage	.\CCard.cpp	/^void CCard::PlusGage(int pAdd)$/;"	f	class:CCard	signature:(int pAdd)
PlusGage	.\CCard.h	/^	void	PlusGage(int pAdd);$/;"	p	class:CCard	access:public	signature:(int pAdd)
RANK_MAX_COUNT	.\Constants.h	4;"	d
RATE_RATE	.\global.cpp	/^double RATE_RATE;$/;"	v
RIGHT	.\character.h	/^		const int RIGHT = 2;$/;"	v
Reset	.\CCard.cpp	/^void CCard::Reset(void)$/;"	f	class:CCard	signature:(void)
Reset	.\CCard.h	/^	void Reset();$/;"	p	class:CCard	access:public	signature:()
Reset	.\CPlayer.cpp	/^void CPlayer::Reset()$/;"	f	class:CPlayer	signature:()
Reset	.\CPlayer.h	/^	void	Reset(void);$/;"	p	class:CPlayer	access:public	signature:(void)
SCENE_BADEND	.\global.h	/^const int SCENE_BADEND = 2;$/;"	v
SCENE_CREDIT	.\global.h	/^const int SCENE_CREDIT = 4;$/;"	v
SCENE_GAME	.\global.h	/^const int SCENE_GAME = 1;$/;"	v
SCENE_GOODEND	.\global.h	/^const int SCENE_GOODEND = 3;$/;"	v
SCENE_NUM	.\global.h	/^const int SCENE_NUM = 5;$/;"	v
SCENE_START	.\global.h	/^const int SCENE_START = 0;$/;"	v
SCREEN_BPP	.\Configuration.h	/^const int SCREEN_BPP = 32;$/;"	v
SCREEN_HEIGHT	.\Configuration.h	/^const int SCREEN_HEIGHT = 480;$/;"	v
SCREEN_WIDTH	.\Configuration.h	/^const int SCREEN_WIDTH = 640;$/;"	v
SDL_Initialize	.\main.cpp	/^static void SDL_Initialize()$/;"	f	file:	signature:()
SDL_Initialize	.\main.cpp	/^static void SDL_Initialize();$/;"	p	file:	signature:()
SECONDBUILDING_NUM	.\map.h	/^const int SECONDBUILDING_NUM  = 4;$/;"	v
SHOP_COUNT_FOR_UPGRADE	.\global.cpp	/^int SHOP_COUNT_FOR_UPGRADE;$/;"	v
START_GRADE	.\global.cpp	/^int START_GRADE;$/;"	v
STOP	.\character.h	/^		const int STOP = 4;$/;"	v
STRINGIFY	.\common.h	33;"	d
Scene	.\Scene.h	/^class Scene {$/;"	c
Scene::background	.\Scene.h	/^		SDL_Surface *background;$/;"	m	class:Scene	access:protected
Scene::clean_up	.\Scene.cpp	/^void Scene::clean_up(){;}$/;"	f	class:Scene	signature:()
Scene::clean_up	.\Scene.h	/^		virtual void clean_up();$/;"	p	class:Scene	access:public	signature:()
Scene::do_event	.\Scene.cpp	/^void Scene::do_event(){;}$/;"	f	class:Scene	signature:()
Scene::do_event	.\Scene.h	/^		virtual void do_event();$/;"	p	class:Scene	access:public	signature:()
Scene::init	.\Scene.cpp	/^void Scene::init() { ;$/;"	f	class:Scene	signature:()
Scene::init	.\Scene.h	/^		virtual void init();$/;"	p	class:Scene	access:public	signature:()
Scene::show	.\Scene.cpp	/^void Scene::show(){;}$/;"	f	class:Scene	signature:()
Scene::show	.\Scene.h	/^		virtual void show();$/;"	p	class:Scene	access:public	signature:()
Scene::~Scene	.\Scene.cpp	/^Scene::~Scene() { ; $/;"	f	class:Scene	signature:()
Scene::~Scene	.\Scene.h	/^                virtual ~Scene();$/;"	p	class:Scene	access:public	signature:()
Scene_Name	.\Constants.h	/^const char Scene_Name[5][16] = $/;"	v
Script_Name	.\Constants.h	/^const char Script_Name[32][16] = $/;"	v
SelectCard	.\CPlayer.cpp	/^bool CPlayer::SelectCard(ECard pCard)$/;"	f	class:CPlayer	signature:(ECard pCard)
SelectCard	.\CPlayer.h	/^	bool	SelectCard(ECard pCard);$/;"	p	class:CPlayer	access:public	signature:(ECard pCard)
SetCard	.\CCard.cpp	/^void CCard::SetCard(int pCardNo)$/;"	f	class:CCard	signature:(int pCardNo)
SetCard	.\CCard.h	/^	void	SetCard(int pCardNo);$/;"	p	class:CCard	access:public	signature:(int pCardNo)
SetDept	.\CCard.cpp	/^bool CCard::SetDept(uint64_t pDept)$/;"	f	class:CCard	signature:(uint64_t pDept)
SetDept	.\CCard.h	/^	bool	SetDept(uint64_t pDept);		\/\/ 돈이 리미트보다 크면 false 를 리턴$/;"	p	class:CCard	access:public	signature:(uint64_t pDept)
SetGage	.\CCard.cpp	/^void CCard::SetGage(int pGage)$/;"	f	class:CCard	signature:(int pGage)
SetGage	.\CCard.h	/^	void	SetGage(int pGage);$/;"	p	class:CCard	access:public	signature:(int pGage)
SetGrade	.\CPlayer.cpp	/^void CPlayer::SetGrade(unsigned short pGrade)$/;"	f	class:CPlayer	signature:(unsigned short pGrade)
SetGrade	.\CPlayer.h	/^	void	SetGrade(unsigned short pGrade);$/;"	p	class:CPlayer	access:public	signature:(unsigned short pGrade)
SetLimit	.\CCard.cpp	/^void CCard::SetLimit(unsigned short pGrade, ERank pRank)$/;"	f	class:CCard	signature:(unsigned short pGrade, ERank pRank)
SetLimit	.\CCard.h	/^	void	SetLimit(unsigned short pGrade, ERank pRank);$/;"	p	class:CCard	access:public	signature:(unsigned short pGrade, ERank pRank)
SetName	.\CPlayer.cpp	/^void CPlayer::SetName(char* pName)$/;"	f	class:CPlayer	signature:(char* pName)
SetName	.\CPlayer.h	/^	void	SetName(char* pName);$/;"	p	class:CPlayer	access:public	signature:(char* pName)
SetRank	.\CPlayer.cpp	/^void CPlayer::SetRank(ERank pRank)$/;"	f	class:CPlayer	signature:(ERank pRank)
SetRank	.\CPlayer.h	/^	void	SetRank(ERank pRank);$/;"	p	class:CPlayer	access:public	signature:(ERank pRank)
Sprite	.\sprite.h	/^class Sprite$/;"	c
Sprite::frame	.\sprite.h	/^		int frame;$/;"	m	class:Sprite	access:protected
Sprite::sprite	.\sprite.h	/^		void sprite();$/;"	p	class:Sprite	access:public	signature:()
StartScene	.\Scene.cpp	/^StartScene::StartScene()$/;"	f	class:StartScene	signature:()
StartScene	.\Scene.h	/^		StartScene();$/;"	p	class:StartScene	access:public	signature:()
StartScene	.\Scene.h	/^class StartScene : public Scene$/;"	c	inherits:Scene
StartScene::StartScene	.\Scene.cpp	/^StartScene::StartScene()$/;"	f	class:StartScene	signature:()
StartScene::StartScene	.\Scene.h	/^		StartScene();$/;"	p	class:StartScene	access:public	signature:()
StartScene::clean_up	.\Scene.cpp	/^void StartScene::clean_up()$/;"	f	class:StartScene	signature:()
StartScene::clean_up	.\Scene.h	/^		virtual void clean_up();$/;"	p	class:StartScene	access:public	signature:()
StartScene::do_event	.\Scene.cpp	/^void StartScene::do_event()$/;"	f	class:StartScene	signature:()
StartScene::do_event	.\Scene.h	/^		virtual void do_event();$/;"	p	class:StartScene	access:public	signature:()
StartScene::init	.\Scene.cpp	/^void StartScene::init()$/;"	f	class:StartScene	signature:()
StartScene::init	.\Scene.h	/^		virtual void init();$/;"	p	class:StartScene	access:public	signature:()
StartScene::main_bg	.\Scene.h	/^		SDL_Surface* main_bg;$/;"	m	class:StartScene	access:private
StartScene::main_menu1	.\Scene.h	/^		SDL_Surface* main_menu1;$/;"	m	class:StartScene	access:private
StartScene::main_menu1_over	.\Scene.h	/^		SDL_Surface* main_menu1_over;$/;"	m	class:StartScene	access:private
StartScene::main_menu2	.\Scene.h	/^		SDL_Surface* main_menu2;$/;"	m	class:StartScene	access:private
StartScene::main_menu2_over	.\Scene.h	/^		SDL_Surface* main_menu2_over;$/;"	m	class:StartScene	access:private
StartScene::menu	.\Scene.h	/^		int menu;$/;"	m	class:StartScene	access:private
StartScene::show	.\Scene.cpp	/^void StartScene::show()$/;"	f	class:StartScene	signature:()
StartScene::show	.\Scene.h	/^		virtual void show();$/;"	p	class:StartScene	access:public	signature:()
TCardInven	.\CPlayer.h	/^	typedef std::map<int, CCard>		TCardInven;				\/\/ 카드 지갑(카드번호 + 카드클래스)$/;"	t	class:CPlayer	access:public
TCardInvenItr	.\CPlayer.h	/^	typedef TCardInven::iterator		TCardInvenItr;$/;"	t	class:CPlayer	access:public
THIRDBUILDING_NUM	.\map.h	/^const int THIRDBUILDING_NUM  = 3;$/;"	v
Timer	.\timer.cpp	/^Timer::Timer()$/;"	f	class:Timer	signature:()
Timer	.\timer.h	/^		Timer();$/;"	p	class:Timer	access:public	signature:()
Timer	.\timer.h	/^class Timer$/;"	c
Timer::Timer	.\timer.cpp	/^Timer::Timer()$/;"	f	class:Timer	signature:()
Timer::Timer	.\timer.h	/^		Timer();$/;"	p	class:Timer	access:public	signature:()
Timer::get_ticks	.\timer.cpp	/^int Timer::get_ticks()$/;"	f	class:Timer	signature:()
Timer::get_ticks	.\timer.h	/^		int get_ticks();$/;"	p	class:Timer	access:public	signature:()
Timer::is_paused	.\timer.cpp	/^bool Timer::is_paused()$/;"	f	class:Timer	signature:()
Timer::is_paused	.\timer.h	/^		bool is_paused();$/;"	p	class:Timer	access:public	signature:()
Timer::is_started	.\timer.cpp	/^bool Timer::is_started()$/;"	f	class:Timer	signature:()
Timer::is_started	.\timer.h	/^		bool is_started();$/;"	p	class:Timer	access:public	signature:()
Timer::pause	.\timer.cpp	/^void Timer::pause()$/;"	f	class:Timer	signature:()
Timer::pause	.\timer.h	/^		void pause();$/;"	p	class:Timer	access:public	signature:()
Timer::paused	.\timer.h	/^		bool paused;$/;"	m	class:Timer	access:private
Timer::pausedTicks	.\timer.h	/^		int pausedTicks;$/;"	m	class:Timer	access:private
Timer::period	.\timer.h	/^                int period;$/;"	m	class:Timer	access:public
Timer::start	.\timer.cpp	/^void Timer::start()$/;"	f	class:Timer	signature:()
Timer::start	.\timer.cpp	/^void Timer::start(int prd)$/;"	f	class:Timer	signature:(int prd)
Timer::start	.\timer.h	/^		void start();$/;"	p	class:Timer	access:public	signature:()
Timer::start	.\timer.h	/^                void start(int);$/;"	p	class:Timer	access:public	signature:(int)
Timer::startTicks	.\timer.h	/^		int startTicks;$/;"	m	class:Timer	access:private
Timer::started	.\timer.h	/^		bool started;$/;"	m	class:Timer	access:private
Timer::stop	.\timer.cpp	/^void Timer::stop()$/;"	f	class:Timer	signature:()
Timer::stop	.\timer.h	/^		void stop();$/;"	p	class:Timer	access:public	signature:()
Timer::unpause	.\timer.cpp	/^void Timer::unpause()$/;"	f	class:Timer	signature:()
Timer::unpause	.\timer.h	/^		void unpause();$/;"	p	class:Timer	access:public	signature:()
Top	.\GameScene_GUI.cpp	/^Top::Top(int x, int y, int w, int h)$/;"	f	class:Top	signature:(int x, int y, int w, int h)
Top	.\Scene.h	/^		Top(int x, int y, int w, int h);$/;"	p	class:Top	access:public	signature:(int x, int y, int w, int h)
Top	.\Scene.h	/^class Top$/;"	c
Top::Top	.\GameScene_GUI.cpp	/^Top::Top(int x, int y, int w, int h)$/;"	f	class:Top	signature:(int x, int y, int w, int h)
Top::Top	.\Scene.h	/^		Top(int x, int y, int w, int h);$/;"	p	class:Top	access:public	signature:(int x, int y, int w, int h)
Top::credit_str	.\Scene.h	/^		std::string credit_str;$/;"	m	class:Top	access:private
Top::offset	.\Scene.h	/^		SDL_Rect offset;$/;"	m	class:Top	access:private
Top::set_credit_score	.\GameScene_GUI.cpp	/^void Top::set_credit_score(int credit)$/;"	f	class:Top	signature:(int credit)
Top::set_credit_score	.\Scene.h	/^		void set_credit_score(int credit);$/;"	p	class:Top	access:public	signature:(int credit)
Top::set_total_dept	.\GameScene_GUI.cpp	/^void Top::set_total_dept(int total)$/;"	f	class:Top	signature:(int total)
Top::set_total_dept	.\Scene.h	/^		void set_total_dept(int total);$/;"	p	class:Top	access:public	signature:(int total)
Top::show	.\GameScene_GUI.cpp	/^void Top::show(SDL_Surface* background)$/;"	f	class:Top	signature:(SDL_Surface* background)
Top::show	.\Scene.h	/^		void show(SDL_Surface*);$/;"	p	class:Top	access:public	signature:(SDL_Surface*)
Top::total_str	.\Scene.h	/^		std::string total_str;$/;"	m	class:Top	access:private
UNIT_HEIGHT	.\global.h	/^const int UNIT_HEIGHT = 30;$/;"	v
UNIT_WIDTH	.\global.h	/^const int UNIT_WIDTH = 30;$/;"	v
UP	.\character.h	/^		const int UP = 3;$/;"	v
WalletBar	.\Scene.h	/^class WalletBar$/;"	c
WalletBar::card_gage	.\Scene.h	/^		SDL_Rect card_gage[6];$/;"	m	class:WalletBar	access:private
WalletBar::cards	.\Scene.h	/^		SDL_Rect cards[6];$/;"	m	class:WalletBar	access:private
WalletBar::cards_clip	.\Scene.h	/^		SDL_Rect cards_clip[6];$/;"	m	class:WalletBar	access:private
WalletBar::cards_image	.\Scene.h	/^		SDL_Surface* cards_image;$/;"	m	class:WalletBar	access:private
WalletBar::cards_limits_box	.\Scene.h	/^		SDL_Rect cards_limits_box[6];$/;"	m	class:WalletBar	access:private
WalletBar::cards_limits_clip	.\Scene.h	/^		SDL_Rect cards_limits_clip[6];$/;"	m	class:WalletBar	access:private
WalletBar::clean_up	.\GameScene_GUI.cpp	/^void WalletBar::clean_up()$/;"	f	class:WalletBar	signature:()
WalletBar::clean_up	.\Scene.h	/^		void clean_up();$/;"	p	class:WalletBar	access:public	signature:()
WalletBar::face_clip	.\Scene.h	/^		SDL_Rect face_clip[6];$/;"	m	class:WalletBar	access:private
WalletBar::faces_image	.\Scene.h	/^		SDL_Surface* faces_image;$/;"	m	class:WalletBar	access:private
WalletBar::frame	.\Scene.h	/^		int frame;$/;"	m	class:WalletBar	access:private
WalletBar::init	.\GameScene_GUI.cpp	/^void WalletBar::init(int x, int y, int w, int h)$/;"	f	class:WalletBar	signature:(int x, int y, int w, int h)
WalletBar::init	.\Scene.h	/^		void init(int x, int y, int w, int h);$/;"	p	class:WalletBar	access:public	signature:(int x, int y, int w, int h)
WalletBar::offset	.\Scene.h	/^		SDL_Rect offset;$/;"	m	class:WalletBar	access:private
WalletBar::print_limit	.\GameScene_GUI.cpp	/^void WalletBar::print_limit(ECard i, uint64_t money)$/;"	f	class:WalletBar	signature:(ECard i, uint64_t money)
WalletBar::print_limit	.\Scene.h	/^		void print_limit(ECard, uint64_t);$/;"	p	class:WalletBar	access:public	signature:(ECard, uint64_t)
WalletBar::show	.\GameScene_GUI.cpp	/^void WalletBar::show( )$/;"	f	class:WalletBar	signature:( )
WalletBar::show	.\Scene.h	/^		void show();$/;"	p	class:WalletBar	access:public	signature:()
WalletBar::show_gage	.\GameScene_GUI.cpp	/^void WalletBar::show_gage(ECard i, float ratio)$/;"	f	class:WalletBar	signature:(ECard i, float ratio)
WalletBar::show_gage	.\Scene.h	/^		void show_gage(ECard, float);$/;"	p	class:WalletBar	access:public	signature:(ECard, float)
ZeroMemory	.\common.h	29;"	d
_APS_NEXT_COMMAND_VALUE	.\resource.h	10;"	d
_APS_NEXT_CONTROL_VALUE	.\resource.h	11;"	d
_APS_NEXT_RESOURCE_VALUE	.\resource.h	9;"	d
_APS_NEXT_SYMED_VALUE	.\resource.h	12;"	d
_MAJECTY_GLOBAL_H__	.\global.h	4;"	d
_MAJECTY_VALANCE_H__	.\Configuration.h	3;"	d
_MEJECTY_CHAR_H__	.\character.h	3;"	d
_WIN32_WINNT	.\targetver.h	11;"	d
__MAJECTY_BUILDING_H_	.\building.h	3;"	d
__MAJECTY_COLLIDER_H__	.\collider.h	3;"	d
__MAJECTY_MAP_H_	.\map.h	3;"	d
__MAJECTY_SPRIT_H__	.\sprite.h	4;"	d
__MAJECTY_TIMER_H_	.\timer.h	3;"	d
__SCENE_H__	.\Scene.h	3;"	d
__mCard	.\CCard.h	/^	int			__mCard;	\/\/ 카드번호$/;"	m	class:CCard	access:private
__mCardInven	.\CPlayer.h	/^	TCardInven		__mCardInven;								\/\/ 카드 지갑$/;"	m	class:CPlayer	access:private
__mCreditorCount	.\CPlayer.h	/^	int				__mCreditorCount;							\/\/ 빚쟁이 수$/;"	m	class:CPlayer	access:private
__mCurrentCard	.\CPlayer.h	/^	int				__mCurrentCard;								\/\/ 현재 선택된 카드$/;"	m	class:CPlayer	access:private
__mCurrentRank	.\CPlayer.h	/^	ERank			__mCurrentRank;								\/\/ 현재 금융권$/;"	m	class:CPlayer	access:private
__mDept	.\CPlayer.h	/^	uint64_t			__mDept;									\/\/ 현재 빚$/;"	m	class:CPlayer	access:private
__mGage	.\CCard.h	/^	int			__mGage;	\/\/ 게이지$/;"	m	class:CCard	access:private
__mGrade	.\CPlayer.h	/^	unsigned short	__mGrade;									\/\/ 현재 신용등급$/;"	m	class:CPlayer	access:private
__mLimit	.\CCard.h	/^	uint64_t		__mLimit;	\/\/ 카드한도$/;"	m	class:CCard	access:private
__mMoney	.\CCard.h	/^	uint64_t		__mMoney;	\/\/ 빌린돈$/;"	m	class:CCard	access:private
__mPlayerName	.\CPlayer.h	/^	char			__mPlayerName[MAX_PLAYER_NAME_LEN + 1];		\/\/ 플레이어 이름$/;"	m	class:CPlayer	access:private
aPlayer	.\character.h	/^		CPlayer  aPlayer;$/;"	m	class:Hero	access:private
add_card	.\character.cpp	/^void Hero::add_card(ECard pCard )$/;"	f	class:Hero	signature:(ECard pCard )
add_card	.\character.h	/^		void add_card(ECard pCard);$/;"	p	class:Hero	access:public	signature:(ECard pCard)
add_person	.\character.cpp	/^void Character::add_person(){$/;"	f	class:Character	signature:()
add_person	.\character.cpp	/^void Hero::add_person( ){$/;"	f	class:Hero	signature:( )
add_person	.\character.h	/^		virtual void add_person();$/;"	p	class:Character	access:public	signature:()
add_person	.\character.h	/^		virtual void add_person();$/;"	p	class:Gang	access:public	signature:()
add_person	.\character.h	/^		virtual void add_person();$/;"	p	class:Hero	access:public	signature:()
add_person	.\gang.cpp	/^void Gang::add_person( ){$/;"	f	class:Gang	signature:( )
apply_surface	.\GlobalFunctions.cpp	/^void apply_surface( int x, int y, SDL_Surface* source, SDL_Surface* destination,$/;"	f	signature:( int x, int y, SDL_Surface* source, SDL_Surface* destination, SDL_Rect* clip )
apply_surface	.\GlobalFunctions.h	/^void apply_surface( int x, int y, SDL_Surface* source, SDL_Surface*$/;"	p	signature:( int x, int y, SDL_Surface* source, SDL_Surface* destination, SDL_Rect* clip = NULL)
b	.\lua\lauxlib.h	/^  char *b;  \/* buffer address *\/$/;"	m	struct:luaL_Buffer	access:public
background	.\Scene.h	/^		SDL_Surface *background;$/;"	m	class:Scene	access:protected
background	.\Scene.h	/^        SDL_Surface* background;$/;"	m	class:MessageBox	access:private
background	.\map.h	/^		SDL_Surface* background;$/;"	m	class:Map	access:protected
blackColor	.\global.cpp	/^SDL_Color blackColor= {0,0,0};$/;"	v
boxes	.\map.h	/^		vector<SDL_Rect*> boxes;$/;"	m	class:Map	access:protected
buffer	.\lauxlib.h	/^  char buffer[LUAL_BUFFERSIZE];$/;"	m	struct:luaL_Buffer	access:public
buildings	.\map.h	/^		vector<Building*> buildings;$/;"	m	class:Map	access:protected
buildings_image	.\building.h	/^                SDL_Surface *buildings_image;$/;"	m	class:Building	access:private
buildings_image	.\map.h	/^                SDL_Surface* buildings_image;$/;"	m	class:Map	access:protected
buy	.\character.cpp	/^bool Hero::buy()$/;"	f	class:Hero	signature:()
buy	.\character.h	/^		bool buy();$/;"	p	class:Hero	access:public	signature:()
calc_dept	.\character.cpp	/^int Hero::calc_dept()$/;"	f	class:Hero	signature:()
calc_dept	.\character.h	/^		int calc_dept();$/;"	p	class:Hero	access:public	signature:()
can_buy	.\character.cpp	/^void Hero::can_buy()$/;"	f	class:Hero	signature:()
can_buy	.\character.h	/^		void can_buy();$/;"	p	class:Hero	access:public	signature:()
cant_buy	.\character.cpp	/^void Hero::cant_buy()$/;"	f	class:Hero	signature:()
cant_buy	.\character.h	/^		void cant_buy();$/;"	p	class:Hero	access:public	signature:()
card_gage	.\Scene.h	/^		SDL_Rect card_gage[6];$/;"	m	class:WalletBar	access:private
card_id	.\building.h	/^		int card_id;$/;"	m	class:Building	access:public
cards	.\Scene.h	/^		SDL_Rect cards[6];$/;"	m	class:WalletBar	access:private
cards_clip	.\Scene.h	/^		SDL_Rect cards_clip[6];$/;"	m	class:WalletBar	access:private
cards_image	.\Scene.h	/^		SDL_Surface* cards_image;$/;"	m	class:WalletBar	access:private
cards_limits_box	.\Scene.h	/^		SDL_Rect cards_limits_box[6];$/;"	m	class:WalletBar	access:private
cards_limits_clip	.\Scene.h	/^		SDL_Rect cards_limits_clip[6];$/;"	m	class:WalletBar	access:private
change_scene	.\GlobalFunctions.h	/^void change_scene(int scene_num);$/;"	p	signature:(int scene_num)
change_scene	.\main.cpp	/^void change_scene(int scene_num)$/;"	f	signature:(int scene_num)
check_collide	.\GameScene.cpp	/^void GameScene::check_collide()$/;"	f	class:GameScene	signature:()
check_collide	.\Scene.h	/^		void check_collide();$/;"	p	class:GameScene	access:public	signature:()
check_collide	.\building.cpp	/^bool Building::check_collide(Collider* other)$/;"	f	class:Building	signature:(Collider* other)
check_collide	.\building.cpp	/^bool Door::check_collide(Collider* other)$/;"	f	class:Door	signature:(Collider* other)
check_collide	.\building.h	/^		virtual bool check_collide(Collider*);$/;"	p	class:Building	access:public	signature:(Collider*)
check_collide	.\building.h	/^		virtual bool check_collide(Collider*);$/;"	p	class:Door	access:public	signature:(Collider*)
check_collide	.\character.cpp	/^bool Hero::check_collide(Collider* other)$/;"	f	class:Hero	signature:(Collider* other)
check_collide	.\character.h	/^		virtual bool check_collide(Collider*);$/;"	p	class:Gang	access:public	signature:(Collider*)
check_collide	.\character.h	/^		virtual bool check_collide(Collider*);$/;"	p	class:Hero	access:public	signature:(Collider*)
check_collide	.\collider.h	/^		virtual bool check_collide(Collider*)=0;$/;"	p	class:Collider	access:public	signature:(Collider*)
check_collide	.\gang.cpp	/^bool Gang::check_collide(Collider* other)$/;"	f	class:Gang	signature:(Collider* other)
check_collider	.\collider.cpp	/^bool check_collider(Collider* other){return true;}$/;"	f	signature:(Collider* other)
clean_up	.\GameScene.cpp	/^void GameScene::clean_up()$/;"	f	class:GameScene	signature:()
clean_up	.\GameScene_GUI.cpp	/^void WalletBar::clean_up()$/;"	f	class:WalletBar	signature:()
clean_up	.\Scene.cpp	/^void BadEndScene::clean_up()$/;"	f	class:BadEndScene	signature:()
clean_up	.\Scene.cpp	/^void CreditScene::clean_up()$/;"	f	class:CreditScene	signature:()
clean_up	.\Scene.cpp	/^void GoodEndScene::clean_up()$/;"	f	class:GoodEndScene	signature:()
clean_up	.\Scene.cpp	/^void Scene::clean_up(){;}$/;"	f	class:Scene	signature:()
clean_up	.\Scene.cpp	/^void StartScene::clean_up()$/;"	f	class:StartScene	signature:()
clean_up	.\Scene.h	/^		virtual void clean_up();$/;"	p	class:BadEndScene	access:public	signature:()
clean_up	.\Scene.h	/^		virtual void clean_up();$/;"	p	class:CreditScene	access:public	signature:()
clean_up	.\Scene.h	/^		virtual void clean_up();$/;"	p	class:GameScene	access:public	signature:()
clean_up	.\Scene.h	/^		virtual void clean_up();$/;"	p	class:GoodEndScene	access:public	signature:()
clean_up	.\Scene.h	/^		virtual void clean_up();$/;"	p	class:Scene	access:public	signature:()
clean_up	.\Scene.h	/^		virtual void clean_up();$/;"	p	class:StartScene	access:public	signature:()
clean_up	.\Scene.h	/^		void clean_up();$/;"	p	class:WalletBar	access:public	signature:()
clean_up	.\building.cpp	/^void Building::clean_up()$/;"	f	class:Building	signature:()
clean_up	.\building.h	/^		void clean_up();$/;"	p	class:Building	access:public	signature:()
clean_up	.\character.cpp	/^void Character::clean_up(){;}$/;"	f	class:Character	signature:()
clean_up	.\character.cpp	/^void Hero::clean_up()$/;"	f	class:Hero	signature:()
clean_up	.\character.h	/^		virtual void clean_up();$/;"	p	class:Character	access:public	signature:()
clean_up	.\character.h	/^		virtual void clean_up();$/;"	p	class:Gang	access:public	signature:()
clean_up	.\character.h	/^		virtual void clean_up();$/;"	p	class:Hero	access:public	signature:()
clean_up	.\gang.cpp	/^void Gang::clean_up()$/;"	f	class:Gang	signature:()
clean_up	.\main.cpp	/^void clean_up()$/;"	f	signature:()
clean_up	.\map.cpp	/^void Map::clean_up()$/;"	f	class:Map	signature:()
clean_up	.\map.h	/^		void clean_up();$/;"	p	class:Map	access:public	signature:()
clip	.\building.h	/^		SDL_Rect clip;$/;"	m	class:Building	access:private
clip	.\character.h	/^		SDL_Rect clip[4][3];\/\/ 8 은 넉넉잡은 숫$/;"	m	class:Character	access:protected
clip	.\map.h	/^		SDL_Rect clip;$/;"	m	class:Map	access:protected
closef	.\lua\lauxlib.h	/^  lua_CFunction closef;  \/* to close stream (NULL for closed streams) *\/$/;"	m	struct:luaL_Stream	access:public
credit_str	.\Scene.h	/^		std::string credit_str;$/;"	m	class:Top	access:private
currentline	.\lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug	access:public
currentline	.\lua\lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug	access:public
decrease_grade	.\character.cpp	/^void Hero::decrease_grade()$/;"	f	class:Hero	signature:()
decrease_grade	.\character.h	/^		void decrease_grade();$/;"	p	class:Hero	access:public	signature:()
default_video_initialize	.\main.cpp	/^static void default_video_initialize()$/;"	f	file:	signature:()
default_video_initialize	.\main.cpp	/^static void default_video_initialize();$/;"	p	file:	signature:()
delete_scenes	.\main.cpp	/^static void delete_scenes()$/;"	f	file:	signature:()
delete_scenes	.\main.cpp	/^static void delete_scenes();$/;"	p	file:	signature:()
delta	.\Scene.h	/^		Timer delta;$/;"	m	class:GameScene	access:private
depart_image	.\building.h	/^		SDL_Surface *depart_image;$/;"	m	class:Building	access:private
do_event	.\GameScene.cpp	/^void GameScene::do_event()$/;"	f	class:GameScene	signature:()
do_event	.\Scene.cpp	/^void BadEndScene::do_event()$/;"	f	class:BadEndScene	signature:()
do_event	.\Scene.cpp	/^void CreditScene::do_event()$/;"	f	class:CreditScene	signature:()
do_event	.\Scene.cpp	/^void GoodEndScene::do_event()$/;"	f	class:GoodEndScene	signature:()
do_event	.\Scene.cpp	/^void Scene::do_event(){;}$/;"	f	class:Scene	signature:()
do_event	.\Scene.cpp	/^void StartScene::do_event()$/;"	f	class:StartScene	signature:()
do_event	.\Scene.h	/^		virtual void do_event();$/;"	p	class:BadEndScene	access:public	signature:()
do_event	.\Scene.h	/^		virtual void do_event();$/;"	p	class:CreditScene	access:public	signature:()
do_event	.\Scene.h	/^		virtual void do_event();$/;"	p	class:GameScene	access:public	signature:()
do_event	.\Scene.h	/^		virtual void do_event();$/;"	p	class:GoodEndScene	access:public	signature:()
do_event	.\Scene.h	/^		virtual void do_event();$/;"	p	class:Scene	access:public	signature:()
do_event	.\Scene.h	/^		virtual void do_event();$/;"	p	class:StartScene	access:public	signature:()
door	.\building.h	/^		Door *door;$/;"	m	class:Building	access:private
eBuy	.\Constants.h	/^    eBuy,$/;"	e	enum:EScript
eCardAmerican	.\Constants.h	/^	eCardAmerican,$/;"	e	enum:ECard
eCardDC	.\Constants.h	/^	eCardDC,$/;"	e	enum:ECard
eCardJHT	.\Constants.h	/^	eCardJHT,$/;"	e	enum:ECard
eCardMax	.\Constants.h	/^	eCardMax$/;"	e	enum:ECard
eCardMister	.\Constants.h	/^	eCardMister,$/;"	e	enum:ECard
eCardNon	.\Constants.h	/^	eCardNon = 0,$/;"	e	enum:ECard
eCardStop	.\Constants.h	/^    eCardStop,$/;"	e	enum:EScript
eCardUnion	.\Constants.h	/^	eCardUnion,$/;"	e	enum:ECard
eCardVissa	.\Constants.h	/^	eCardVissa,$/;"	e	enum:ECard
eDescription	.\Constants.h	/^    eDescription = 0,$/;"	e	enum:EScript
eEndNoInterest	.\Constants.h	/^    eEndNoInterest,$/;"	e	enum:EScript
eEnterCardShop	.\Constants.h	/^    eEnterCardShop,$/;"	e	enum:EScript
eEnterShop	.\Constants.h	/^    eEnterShop,$/;"	e	enum:EScript
eFirstRank	.\Constants.h	/^	eFirstRank = 0,	\/\/ 제 1 금융권$/;"	e	enum:ERank
eGameOver	.\Constants.h	/^    eGameOver,$/;"	e	enum:EScript
eGangPlus	.\Constants.h	/^    eGangPlus,$/;"	e	enum:EScript
eGradeDown	.\Constants.h	/^    eGradeDown,$/;"	e	enum:EScript
eGradeUp	.\Constants.h	/^    eGradeUp,$/;"	e	enum:EScript
eHappyEnd	.\Constants.h	/^    eHappyEnd,$/;"	e	enum:EScript
eMaxRank	.\Constants.h	/^	eMaxRank$/;"	e	enum:ERank
eNoBanking	.\Constants.h	/^	eNoBanking = 0,$/;"	e	enum:ENonBanking
eNoCard	.\Constants.h	/^    eNoCard,$/;"	e	enum:EScript
eNonCashRush	.\Constants.h	/^	eNonCashRush,$/;"	e	enum:ENonBanking
eNonCowCow	.\Constants.h	/^	eNonCowCow,$/;"	e	enum:ENonBanking
eNonMax	.\Constants.h	/^	eNonMax$/;"	e	enum:ENonBanking
eNonOneCash	.\Constants.h	/^	eNonOneCash,$/;"	e	enum:ENonBanking
eNonSaWa	.\Constants.h	/^	eNonSaWa,$/;"	e	enum:ENonBanking
ePrivateGang	.\Constants.h	/^	ePrivateGang,$/;"	e	enum:EPrivateLoan
ePrivateMafia	.\Constants.h	/^	ePrivateMafia,$/;"	e	enum:EPrivateLoan
ePrivateMax	.\Constants.h	/^	ePrivateMax$/;"	e	enum:EPrivateLoan
ePrivateNon	.\Constants.h	/^	ePrivateNon=0,$/;"	e	enum:EPrivateLoan
ePrivateYakuza	.\Constants.h	/^	ePrivateYakuza,$/;"	e	enum:EPrivateLoan
eReceiveCard	.\Constants.h	/^    eReceiveCard$/;"	e	enum:EScript
eSecondRank	.\Constants.h	/^	eSecondRank,$/;"	e	enum:ERank
eThirdRank	.\Constants.h	/^	eThirdRank,$/;"	e	enum:ERank
enter_building	.\character.cpp	/^void Hero::enter_building()$/;"	f	class:Hero	signature:()
enter_building	.\character.h	/^                void enter_building();$/;"	p	class:Hero	access:public	signature:()
error	.\GlobalFunctions.cpp	/^void error(const char *fmt, const char *at,  ...) {$/;"	f	signature:(const char *fmt, const char *at, ...)
error	.\GlobalFunctions.h	/^void error(const char *fmt, const char *at, ...) ;$/;"	p	signature:(const char *fmt, const char *at, ...)
event	.\global.cpp	/^SDL_Event  event;$/;"	v
event	.\lua.h	/^  int event;$/;"	m	struct:lua_Debug	access:public
event	.\lua\lua.h	/^  int event;$/;"	m	struct:lua_Debug	access:public
event_loop	.\main.cpp	/^static void event_loop()$/;"	f	file:	signature:()
exit_building	.\character.cpp	/^void Hero::exit_building()$/;"	f	class:Hero	signature:()
exit_building	.\character.h	/^                void exit_building();$/;"	p	class:Hero	access:public	signature:()
f	.\lua\lauxlib.h	/^  FILE *f;  \/* stream (NULL for incompletely created streams) *\/$/;"	m	struct:luaL_Stream	access:public
face_clip	.\Scene.h	/^		SDL_Rect face_clip[6];$/;"	m	class:WalletBar	access:private
faces_image	.\Scene.h	/^		SDL_Surface* faces_image;$/;"	m	class:WalletBar	access:private
fire_lua_event	.\lua_glue.cpp	/^void fire_lua_event(int event_id)$/;"	f	signature:(int event_id)
fire_lua_event	.\lua_glue.h	/^void fire_lua_event(int);$/;"	p	signature:(int)
fire_message_event	.\lua_glue.cpp	/^void fire_message_event(int message_id)$/;"	f	signature:(int message_id)
fire_message_event	.\lua_glue.h	/^void fire_message_event(int message_id);$/;"	p	signature:(int message_id)
follow	.\character.h	/^		bool follow();$/;"	p	class:Gang	access:public	signature:()
follow	.\gang.cpp	/^bool Gang::follow()$/;"	f	class:Gang	signature:()
font	.\global.cpp	/^TTF_Font *font = NULL;$/;"	v
font_module_initialize	.\main.cpp	/^static void font_module_initialize()$/;"	f	file:	signature:()
font_module_initialize	.\main.cpp	/^static void font_module_initialize();$/;"	p	file:	signature:()
frame	.\Scene.h	/^		int frame;$/;"	m	class:WalletBar	access:private
frame	.\character.h	/^		int frame;$/;"	m	class:Character	access:protected
frame	.\sprite.h	/^		int frame;$/;"	m	class:Sprite	access:protected
func	.\lauxlib.h	/^  lua_CFunction func;$/;"	m	struct:luaL_Reg	access:public
func	.\lua\lauxlib.h	/^  lua_CFunction func;$/;"	m	struct:luaL_Reg	access:public
gCardName	.\Constants.h	/^const char gCardName[eCardMax][MAX_CARD_NAME] =$/;"	v
gGradeName	.\Constants.h	/^const char gGradeName[13][2+1] =$/;"	v
gNonBankingName	.\Constants.h	/^const char gNonBankingName[eNonMax][MAX_CARD_NAME] =$/;"	v
gPrivateLoanName	.\Constants.h	/^const char gPrivateLoanName[ePrivateMax][MAX_CARD_NAME] =$/;"	v
gRankName	.\Constants.h	/^const char gRankName[eMaxRank][MAX_CARD_NAME] =$/;"	v
g_messageEventHalder	.\lua_glue.cpp	/^static char* g_messageEventHalder = "message_handler";$/;"	v	file:
g_strEventHandler	.\lua_glue.cpp	/^static char* g_strEventHandler = "lua_event_handler";$/;"	v	file:
gang	.\Scene.h	/^		Character* gang;$/;"	m	class:GameScene	access:private
get_box	.\building.cpp	/^SDL_Rect* Building::get_box()$/;"	f	class:Building	signature:()
get_box	.\building.cpp	/^SDL_Rect* Door::get_box()$/;"	f	class:Door	signature:()
get_box	.\building.h	/^		virtual SDL_Rect* get_box();$/;"	p	class:Building	access:public	signature:()
get_box	.\building.h	/^		virtual SDL_Rect* get_box();$/;"	p	class:Door	access:public	signature:()
get_box	.\character.cpp	/^SDL_Rect* Hero::get_box()$/;"	f	class:Hero	signature:()
get_box	.\character.h	/^		virtual SDL_Rect* get_box();$/;"	p	class:Gang	access:public	signature:()
get_box	.\character.h	/^		virtual SDL_Rect* get_box();$/;"	p	class:Hero	access:public	signature:()
get_box	.\collider.cpp	/^SDL_Rect* get_box(){return NULL;}$/;"	f	signature:()
get_box	.\collider.h	/^		virtual SDL_Rect* get_box()=0;$/;"	p	class:Collider	access:public	signature:()
get_box	.\gang.cpp	/^SDL_Rect* Gang::get_box()$/;"	f	class:Gang	signature:()
get_boxes	.\map.cpp	/^vector<SDL_Rect*> Map::get_boxes()$/;"	f	class:Map	signature:()
get_boxes	.\map.h	/^		vector<SDL_Rect*> get_boxes(); \/\/ for collide$/;"	p	class:Map	access:public	signature:()
get_buildings	.\map.cpp	/^vector<Building*> Map::get_buildings()$/;"	f	class:Map	signature:()
get_buildings	.\map.h	/^		vector<Building*> get_buildings();$/;"	p	class:Map	access:public	signature:()
get_current_card	.\character.cpp	/^ECard Hero::get_current_card()$/;"	f	class:Hero	signature:()
get_current_card	.\character.h	/^		ECard get_current_card();$/;"	p	class:Hero	access:public	signature:()
get_depth	.\character.cpp	/^uint64_t Hero::get_depth()$/;"	f	class:Hero	signature:()
get_depth	.\character.h	/^		uint64_t get_depth();$/;"	p	class:Hero	access:public	signature:()
get_door	.\building.cpp	/^Door* Building::get_door()$/;"	f	class:Building	signature:()
get_door	.\building.h	/^		Door* get_door();$/;"	p	class:Building	access:public	signature:()
get_grade	.\character.cpp	/^unsigned short Hero::get_grade()$/;"	f	class:Hero	signature:()
get_grade	.\character.h	/^		unsigned short get_grade();$/;"	p	class:Hero	access:public	signature:()
get_limit	.\character.cpp	/^uint64_t Hero::get_limit()$/;"	f	class:Hero	signature:()
get_limit	.\character.h	/^		uint64_t get_limit();$/;"	p	class:Hero	access:public	signature:()
get_ticks	.\timer.cpp	/^int Timer::get_ticks()$/;"	f	class:Timer	signature:()
get_ticks	.\timer.h	/^		int get_ticks();$/;"	p	class:Timer	access:public	signature:()
h	.\building.h	/^		int w,h;$/;"	m	class:Building	access:private
h	.\building.h	/^		int w,h;$/;"	m	class:Door	access:private
h	.\character.h	/^		int w, h;$/;"	m	class:Character	access:protected
h	.\map.h	/^		int w,h;$/;"	m	class:Map	access:protected
handleInput	.\GameScene.cpp	/^void GameScene::handleInput()$/;"	f	class:GameScene	signature:()
handleInput	.\Scene.h	/^                void handleInput();$/;"	p	class:GameScene	access:private	signature:()
handleInput	.\character.cpp	/^void Hero::handleInput()$/;"	f	class:Hero	signature:()
handleInput	.\character.h	/^		void handleInput();$/;"	p	class:Hero	access:public	signature:()
handleUserEvent	.\GameScene.cpp	/^void GameScene::handleUserEvent()$/;"	f	class:GameScene	signature:()
handleUserEvent	.\Scene.h	/^                void handleUserEvent();$/;"	p	class:GameScene	access:private	signature:()
happy_ending_flag	.\Scene.h	/^		bool happy_ending_flag;$/;"	m	class:GameScene	access:private
has_card	.\character.cpp	/^bool Hero::has_card()$/;"	f	class:Hero	signature:()
has_card	.\character.h	/^		bool has_card();$/;"	p	class:Hero	access:public	signature:()
hero	.\Scene.h	/^		Hero *hero;$/;"	m	class:GameScene	access:private
i_ci	.\lua.h	/^  int i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug	access:public
i_ci	.\lua\lua.h	/^  struct CallInfo *i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug	typeref:struct:lua_Debug::CallInfo	access:public
image	.\character.h	/^		SDL_Surface *image;$/;"	m	class:Character	access:protected
increase_grade	.\character.cpp	/^void Hero::increase_grade()$/;"	f	class:Hero	signature:()
increase_grade	.\character.h	/^		void increase_grade();$/;"	p	class:Hero	access:public	signature:()
indoor	.\character.h	/^                bool indoor;$/;"	m	class:Hero	access:private
init	.\GameScene.cpp	/^void GameScene::init()$/;"	f	class:GameScene	signature:()
init	.\GameScene_GUI.cpp	/^void WalletBar::init(int x, int y, int w, int h)$/;"	f	class:WalletBar	signature:(int x, int y, int w, int h)
init	.\Scene.cpp	/^void BadEndScene::init()$/;"	f	class:BadEndScene	signature:()
init	.\Scene.cpp	/^void CreditScene::init()$/;"	f	class:CreditScene	signature:()
init	.\Scene.cpp	/^void GoodEndScene::init()$/;"	f	class:GoodEndScene	signature:()
init	.\Scene.cpp	/^void Scene::init() { ;$/;"	f	class:Scene	signature:()
init	.\Scene.cpp	/^void StartScene::init()$/;"	f	class:StartScene	signature:()
init	.\Scene.h	/^		virtual void init();$/;"	p	class:BadEndScene	access:public	signature:()
init	.\Scene.h	/^		virtual void init();$/;"	p	class:CreditScene	access:public	signature:()
init	.\Scene.h	/^		virtual void init();$/;"	p	class:GameScene	access:public	signature:()
init	.\Scene.h	/^		virtual void init();$/;"	p	class:GoodEndScene	access:public	signature:()
init	.\Scene.h	/^		virtual void init();$/;"	p	class:Scene	access:public	signature:()
init	.\Scene.h	/^		virtual void init();$/;"	p	class:StartScene	access:public	signature:()
init	.\Scene.h	/^		void init(int x, int y, int w, int h);$/;"	p	class:WalletBar	access:public	signature:(int x, int y, int w, int h)
init	.\building.cpp	/^void Building::init(ECard pCard)$/;"	f	class:Building	signature:(ECard pCard)
init	.\building.h	/^		void init(ECard pCard);$/;"	p	class:Building	access:public	signature:(ECard pCard)
init	.\character.cpp	/^void Character::init() {;}$/;"	f	class:Character	signature:()
init	.\character.cpp	/^void Hero::init()$/;"	f	class:Hero	signature:()
init	.\character.h	/^		virtual void init();$/;"	p	class:Character	access:public	signature:()
init	.\character.h	/^		virtual void init();$/;"	p	class:Gang	access:public	signature:()
init	.\character.h	/^		virtual void init();$/;"	p	class:Hero	access:public	signature:()
init	.\gang.cpp	/^void Gang::init()$/;"	f	class:Gang	signature:()
init	.\main.cpp	/^void init()$/;"	f	signature:()
init	.\map.cpp	/^void Map::init(SDL_Surface* back)$/;"	f	class:Map	signature:(SDL_Surface* back)
init	.\map.h	/^		void init(SDL_Surface* back);$/;"	p	class:Map	access:public	signature:(SDL_Surface* back)
init_glue	.\lua_glue.cpp	/^void init_glue()$/;"	f	signature:()
init_glue	.\lua_glue.h	/^void init_glue();$/;"	p	signature:()
init_variables	.\GameScene.cpp	/^void GameScene::init_variables()$/;"	f	class:GameScene	signature:()
init_variables	.\Scene.h	/^                void init_variables();$/;"	p	class:GameScene	access:private	signature:()
initb	.\lua\lauxlib.h	/^  char initb[LUAL_BUFFERSIZE];  \/* initial buffer *\/$/;"	m	struct:luaL_Buffer	access:public
interest_count	.\Scene.h	/^		int interest_count;$/;"	m	class:GameScene	access:private
interest_timer	.\Scene.h	/^		Timer interest_timer;$/;"	m	class:GameScene	access:private
is_buyable	.\character.h	/^		bool is_buyable;$/;"	m	class:Hero	access:private
is_indoor	.\character.cpp	/^bool Hero::is_indoor()$/;"	f	class:Hero	signature:()
is_indoor	.\character.h	/^                bool is_indoor();$/;"	p	class:Hero	access:public	signature:()
is_paused	.\timer.cpp	/^bool Timer::is_paused()$/;"	f	class:Timer	signature:()
is_paused	.\timer.h	/^		bool is_paused();$/;"	p	class:Timer	access:public	signature:()
is_started	.\timer.cpp	/^bool Timer::is_started()$/;"	f	class:Timer	signature:()
is_started	.\timer.h	/^		bool is_started();$/;"	p	class:Timer	access:public	signature:()
istailcall	.\lua\lua.h	/^  char istailcall;	\/* (t) *\/$/;"	m	struct:lua_Debug	access:public
isvararg	.\lua\lua.h	/^  char isvararg;        \/* (u) *\/$/;"	m	struct:lua_Debug	access:public
l_d	.\luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	m	union:luai_Cast	access:public
l_l	.\luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	m	union:luai_Cast	access:public
lastlinedefined	.\lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lastlinedefined	.\lua\lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lauxlib_h	.\lauxlib.h	9;"	d
lauxlib_h	.\lua\lauxlib.h	9;"	d
lconfig_h	.\lua\luaconf.h	9;"	d
lconfig_h	.\luaconf.h	9;"	d
linedefined	.\lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
linedefined	.\lua\lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
load_background_image	.\GameScene.cpp	/^void GameScene::load_background_image()$/;"	f	class:GameScene	signature:()
load_background_image	.\Scene.h	/^                void load_background_image();$/;"	p	class:GameScene	access:private	signature:()
load_files	.\main.cpp	/^void load_files()$/;"	f	signature:()
load_font	.\main.cpp	/^static void load_font()$/;"	f	file:	signature:()
load_font	.\main.cpp	/^static void load_font();$/;"	p	file:	signature:()
load_image	.\GlobalFunctions.cpp	/^SDL_Surface *load_image( std::string filename) $/;"	f	signature:( std::string filename)
load_image	.\GlobalFunctions.h	/^SDL_Surface *load_image( std::string filename);$/;"	p	signature:( std::string filename)
luaI_openlib	.\lauxlib.h	/^LUALIB_API void (luaI_openlib) (lua_State *L, const char *libname,$/;"	p	signature:(lua_State *L, const char *libname, const luaL_Reg *l, int nup)
luaI_openlib	.\lauxlib.h	27;"	d
luaL_Buffer	.\lauxlib.h	/^typedef struct luaL_Buffer {$/;"	s
luaL_Buffer	.\lauxlib.h	/^} luaL_Buffer;$/;"	t	typeref:struct:luaL_Buffer
luaL_Buffer	.\lua\lauxlib.h	/^typedef struct luaL_Buffer {$/;"	s
luaL_Buffer	.\lua\lauxlib.h	/^} luaL_Buffer;$/;"	t	typeref:struct:luaL_Buffer
luaL_Buffer::L	.\lauxlib.h	/^  lua_State *L;$/;"	m	struct:luaL_Buffer	access:public
luaL_Buffer::L	.\lua\lauxlib.h	/^  lua_State *L;$/;"	m	struct:luaL_Buffer	access:public
luaL_Buffer::b	.\lua\lauxlib.h	/^  char *b;  \/* buffer address *\/$/;"	m	struct:luaL_Buffer	access:public
luaL_Buffer::buffer	.\lauxlib.h	/^  char buffer[LUAL_BUFFERSIZE];$/;"	m	struct:luaL_Buffer	access:public
luaL_Buffer::initb	.\lua\lauxlib.h	/^  char initb[LUAL_BUFFERSIZE];  \/* initial buffer *\/$/;"	m	struct:luaL_Buffer	access:public
luaL_Buffer::lvl	.\lauxlib.h	/^  int lvl;  \/* number of strings in the stack (level) *\/$/;"	m	struct:luaL_Buffer	access:public
luaL_Buffer::n	.\lua\lauxlib.h	/^  size_t n;  \/* number of characters in buffer *\/$/;"	m	struct:luaL_Buffer	access:public
luaL_Buffer::p	.\lauxlib.h	/^  char *p;			\/* current position in buffer *\/$/;"	m	struct:luaL_Buffer	access:public
luaL_Buffer::size	.\lua\lauxlib.h	/^  size_t size;  \/* buffer size *\/$/;"	m	struct:luaL_Buffer	access:public
luaL_Reg	.\lauxlib.h	/^typedef struct luaL_Reg {$/;"	s
luaL_Reg	.\lauxlib.h	/^} luaL_Reg;$/;"	t	typeref:struct:luaL_Reg
luaL_Reg	.\lua\lauxlib.h	/^typedef struct luaL_Reg {$/;"	s
luaL_Reg	.\lua\lauxlib.h	/^} luaL_Reg;$/;"	t	typeref:struct:luaL_Reg
luaL_Reg::func	.\lauxlib.h	/^  lua_CFunction func;$/;"	m	struct:luaL_Reg	access:public
luaL_Reg::func	.\lua\lauxlib.h	/^  lua_CFunction func;$/;"	m	struct:luaL_Reg	access:public
luaL_Reg::name	.\lauxlib.h	/^  const char *name;$/;"	m	struct:luaL_Reg	access:public
luaL_Reg::name	.\lua\lauxlib.h	/^  const char *name;$/;"	m	struct:luaL_Reg	access:public
luaL_Stream	.\lua\lauxlib.h	/^typedef struct luaL_Stream {$/;"	s
luaL_Stream	.\lua\lauxlib.h	/^} luaL_Stream;$/;"	t	typeref:struct:luaL_Stream
luaL_Stream::closef	.\lua\lauxlib.h	/^  lua_CFunction closef;  \/* to close stream (NULL for closed streams) *\/$/;"	m	struct:luaL_Stream	access:public
luaL_Stream::f	.\lua\lauxlib.h	/^  FILE *f;  \/* stream (NULL for incompletely created streams) *\/$/;"	m	struct:luaL_Stream	access:public
luaL_addchar	.\lauxlib.h	136;"	d
luaL_addchar	.\lua\lauxlib.h	152;"	d
luaL_addlstring	.\lauxlib.h	/^LUALIB_API void (luaL_addlstring) (luaL_Buffer *B, const char *s, size_t l);$/;"	p	signature:(luaL_Buffer *B, const char *s, size_t l)
luaL_addlstring	.\lua\lauxlib.h	/^LUALIB_API void (luaL_addlstring) (luaL_Buffer *B, const char *s, size_t l);$/;"	p	signature:(luaL_Buffer *B, const char *s, size_t l)
luaL_addsize	.\lauxlib.h	143;"	d
luaL_addsize	.\lua\lauxlib.h	156;"	d
luaL_addstring	.\lauxlib.h	/^LUALIB_API void (luaL_addstring) (luaL_Buffer *B, const char *s);$/;"	p	signature:(luaL_Buffer *B, const char *s)
luaL_addstring	.\lua\lauxlib.h	/^LUALIB_API void (luaL_addstring) (luaL_Buffer *B, const char *s);$/;"	p	signature:(luaL_Buffer *B, const char *s)
luaL_addvalue	.\lauxlib.h	/^LUALIB_API void (luaL_addvalue) (luaL_Buffer *B);$/;"	p	signature:(luaL_Buffer *B)
luaL_addvalue	.\lua\lauxlib.h	/^LUALIB_API void (luaL_addvalue) (luaL_Buffer *B);$/;"	p	signature:(luaL_Buffer *B)
luaL_argcheck	.\lauxlib.h	100;"	d
luaL_argcheck	.\lua\lauxlib.h	113;"	d
luaL_argerror	.\lauxlib.h	/^LUALIB_API int (luaL_argerror) (lua_State *L, int numarg, const char *extramsg);$/;"	p	signature:(lua_State *L, int numarg, const char *extramsg)
luaL_argerror	.\lua\lauxlib.h	/^LUALIB_API int (luaL_argerror) (lua_State *L, int numarg, const char *extramsg);$/;"	p	signature:(lua_State *L, int numarg, const char *extramsg)
luaL_buffinit	.\lauxlib.h	/^LUALIB_API void (luaL_buffinit) (lua_State *L, luaL_Buffer *B);$/;"	p	signature:(lua_State *L, luaL_Buffer *B)
luaL_buffinit	.\lua\lauxlib.h	/^LUALIB_API void (luaL_buffinit) (lua_State *L, luaL_Buffer *B);$/;"	p	signature:(lua_State *L, luaL_Buffer *B)
luaL_buffinitsize	.\lua\lauxlib.h	/^LUALIB_API char *(luaL_buffinitsize) (lua_State *L, luaL_Buffer *B, size_t sz);$/;"	p	signature:(lua_State *L, luaL_Buffer *B, size_t sz)
luaL_callmeta	.\lauxlib.h	/^LUALIB_API int (luaL_callmeta) (lua_State *L, int obj, const char *e);$/;"	p	signature:(lua_State *L, int obj, const char *e)
luaL_callmeta	.\lua\lauxlib.h	/^LUALIB_API int (luaL_callmeta) (lua_State *L, int obj, const char *e);$/;"	p	signature:(lua_State *L, int obj, const char *e)
luaL_checkany	.\lauxlib.h	/^LUALIB_API void (luaL_checkany) (lua_State *L, int narg);$/;"	p	signature:(lua_State *L, int narg)
luaL_checkany	.\lua\lauxlib.h	/^LUALIB_API void (luaL_checkany) (lua_State *L, int narg);$/;"	p	signature:(lua_State *L, int narg)
luaL_checkint	.\lauxlib.h	104;"	d
luaL_checkint	.\lua\lauxlib.h	117;"	d
luaL_checkinteger	.\lauxlib.h	/^LUALIB_API lua_Integer (luaL_checkinteger) (lua_State *L, int numArg);$/;"	p	signature:(lua_State *L, int numArg)
luaL_checkinteger	.\lua\lauxlib.h	/^LUALIB_API lua_Integer (luaL_checkinteger) (lua_State *L, int numArg);$/;"	p	signature:(lua_State *L, int numArg)
luaL_checklong	.\lauxlib.h	106;"	d
luaL_checklong	.\lua\lauxlib.h	119;"	d
luaL_checklstring	.\lauxlib.h	/^LUALIB_API const char *(luaL_checklstring) (lua_State *L, int numArg,$/;"	p	signature:(lua_State *L, int numArg, size_t *l)
luaL_checklstring	.\lua\lauxlib.h	/^LUALIB_API const char *(luaL_checklstring) (lua_State *L, int numArg,$/;"	p	signature:(lua_State *L, int numArg, size_t *l)
luaL_checknumber	.\lauxlib.h	/^LUALIB_API lua_Number (luaL_checknumber) (lua_State *L, int numArg);$/;"	p	signature:(lua_State *L, int numArg)
luaL_checknumber	.\lua\lauxlib.h	/^LUALIB_API lua_Number (luaL_checknumber) (lua_State *L, int numArg);$/;"	p	signature:(lua_State *L, int numArg)
luaL_checkoption	.\lauxlib.h	/^LUALIB_API int (luaL_checkoption) (lua_State *L, int narg, const char *def,$/;"	p	signature:(lua_State *L, int narg, const char *def, const char *const lst[])
luaL_checkoption	.\lua\lauxlib.h	/^LUALIB_API int (luaL_checkoption) (lua_State *L, int narg, const char *def,$/;"	p	signature:(lua_State *L, int narg, const char *def, const char *const lst[])
luaL_checkstack	.\lauxlib.h	/^LUALIB_API void (luaL_checkstack) (lua_State *L, int sz, const char *msg);$/;"	p	signature:(lua_State *L, int sz, const char *msg)
luaL_checkstack	.\lua\lauxlib.h	/^LUALIB_API void (luaL_checkstack) (lua_State *L, int sz, const char *msg);$/;"	p	signature:(lua_State *L, int sz, const char *msg)
luaL_checkstring	.\lauxlib.h	102;"	d
luaL_checkstring	.\lua\lauxlib.h	115;"	d
luaL_checktype	.\lauxlib.h	/^LUALIB_API void (luaL_checktype) (lua_State *L, int narg, int t);$/;"	p	signature:(lua_State *L, int narg, int t)
luaL_checktype	.\lua\lauxlib.h	/^LUALIB_API void (luaL_checktype) (lua_State *L, int narg, int t);$/;"	p	signature:(lua_State *L, int narg, int t)
luaL_checkudata	.\lauxlib.h	/^LUALIB_API void *(luaL_checkudata) (lua_State *L, int ud, const char *tname);$/;"	p	signature:(lua_State *L, int ud, const char *tname)
luaL_checkudata	.\lua\lauxlib.h	/^LUALIB_API void *(luaL_checkudata) (lua_State *L, int ud, const char *tname);$/;"	p	signature:(lua_State *L, int ud, const char *tname)
luaL_checkunsigned	.\lua\lauxlib.h	/^LUALIB_API lua_Unsigned (luaL_checkunsigned) (lua_State *L, int numArg);$/;"	p	signature:(lua_State *L, int numArg)
luaL_checkversion	.\lua\lauxlib.h	30;"	d
luaL_checkversion_	.\lua\lauxlib.h	/^LUALIB_API void (luaL_checkversion_) (lua_State *L, lua_Number ver);$/;"	p	signature:(lua_State *L, lua_Number ver)
luaL_dofile	.\lauxlib.h	111;"	d
luaL_dofile	.\lua\lauxlib.h	124;"	d
luaL_dostring	.\lauxlib.h	114;"	d
luaL_dostring	.\lua\lauxlib.h	127;"	d
luaL_error	.\lauxlib.h	/^LUALIB_API int (luaL_error) (lua_State *L, const char *fmt, ...);$/;"	p	signature:(lua_State *L, const char *fmt, ...)
luaL_error	.\lua\lauxlib.h	/^LUALIB_API int (luaL_error) (lua_State *L, const char *fmt, ...);$/;"	p	signature:(lua_State *L, const char *fmt, ...)
luaL_execresult	.\lua\lauxlib.h	/^LUALIB_API int (luaL_execresult) (lua_State *L, int stat);$/;"	p	signature:(lua_State *L, int stat)
luaL_fileresult	.\lua\lauxlib.h	/^LUALIB_API int (luaL_fileresult) (lua_State *L, int stat, const char *fname);$/;"	p	signature:(lua_State *L, int stat, const char *fname)
luaL_findtable	.\lauxlib.h	/^LUALIB_API const char *(luaL_findtable) (lua_State *L, int idx,$/;"	p	signature:(lua_State *L, int idx, const char *fname, int szhint)
luaL_getmetafield	.\lauxlib.h	/^LUALIB_API int (luaL_getmetafield) (lua_State *L, int obj, const char *e);$/;"	p	signature:(lua_State *L, int obj, const char *e)
luaL_getmetafield	.\lua\lauxlib.h	/^LUALIB_API int (luaL_getmetafield) (lua_State *L, int obj, const char *e);$/;"	p	signature:(lua_State *L, int obj, const char *e)
luaL_getmetatable	.\lauxlib.h	117;"	d
luaL_getmetatable	.\lua\lauxlib.h	130;"	d
luaL_getn	.\lauxlib.h	/^LUALIB_API int (luaL_getn) (lua_State *L, int t);$/;"	p	signature:(lua_State *L, int t)
luaL_getn	.\lauxlib.h	22;"	d
luaL_getsubtable	.\lua\lauxlib.h	/^LUALIB_API int (luaL_getsubtable) (lua_State *L, int idx, const char *fname);$/;"	p	signature:(lua_State *L, int idx, const char *fname)
luaL_gsub	.\lauxlib.h	/^LUALIB_API const char *(luaL_gsub) (lua_State *L, const char *s, const char *p,$/;"	p	signature:(lua_State *L, const char *s, const char *p, const char *r)
luaL_gsub	.\lua\lauxlib.h	/^LUALIB_API const char *(luaL_gsub) (lua_State *L, const char *s, const char *p,$/;"	p	signature:(lua_State *L, const char *s, const char *p, const char *r)
luaL_len	.\lua\lauxlib.h	/^LUALIB_API int (luaL_len) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
luaL_loadbuffer	.\lauxlib.h	/^LUALIB_API int (luaL_loadbuffer) (lua_State *L, const char *buff, size_t sz,$/;"	p	signature:(lua_State *L, const char *buff, size_t sz, const char *name)
luaL_loadbuffer	.\lua\lauxlib.h	134;"	d
luaL_loadbufferx	.\lua\lauxlib.h	/^LUALIB_API int (luaL_loadbufferx) (lua_State *L, const char *buff, size_t sz,$/;"	p	signature:(lua_State *L, const char *buff, size_t sz, const char *name, const char *mode)
luaL_loadfile	.\lauxlib.h	/^LUALIB_API int (luaL_loadfile) (lua_State *L, const char *filename);$/;"	p	signature:(lua_State *L, const char *filename)
luaL_loadfile	.\lua\lauxlib.h	78;"	d
luaL_loadfilex	.\lua\lauxlib.h	/^LUALIB_API int (luaL_loadfilex) (lua_State *L, const char *filename,$/;"	p	signature:(lua_State *L, const char *filename, const char *mode)
luaL_loadstring	.\lauxlib.h	/^LUALIB_API int (luaL_loadstring) (lua_State *L, const char *s);$/;"	p	signature:(lua_State *L, const char *s)
luaL_loadstring	.\lua\lauxlib.h	/^LUALIB_API int (luaL_loadstring) (lua_State *L, const char *s);$/;"	p	signature:(lua_State *L, const char *s)
luaL_newlib	.\lua\lauxlib.h	111;"	d
luaL_newlibtable	.\lua\lauxlib.h	108;"	d
luaL_newmetatable	.\lauxlib.h	/^LUALIB_API int   (luaL_newmetatable) (lua_State *L, const char *tname);$/;"	p	signature:(lua_State *L, const char *tname)
luaL_newmetatable	.\lua\lauxlib.h	/^LUALIB_API int   (luaL_newmetatable) (lua_State *L, const char *tname);$/;"	p	signature:(lua_State *L, const char *tname)
luaL_newstate	.\lauxlib.h	/^LUALIB_API lua_State *(luaL_newstate) (void);$/;"	p	signature:(void)
luaL_newstate	.\lua\lauxlib.h	/^LUALIB_API lua_State *(luaL_newstate) (void);$/;"	p	signature:(void)
luaL_openlib	.\lua\lauxlib.h	/^LUALIB_API void (luaL_openlib) (lua_State *L, const char *libname,$/;"	p	signature:(lua_State *L, const char *libname, const luaL_Reg *l, int nup)
luaL_openlibs	.\lua\lualib.h	/^LUALIB_API void (luaL_openlibs) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaL_openlibs	.\lualib.h	/^LUALIB_API void (luaL_openlibs) (lua_State *L); $/;"	p	signature:(lua_State *L)
luaL_opt	.\lauxlib.h	119;"	d
luaL_opt	.\lua\lauxlib.h	132;"	d
luaL_optint	.\lauxlib.h	105;"	d
luaL_optint	.\lua\lauxlib.h	118;"	d
luaL_optinteger	.\lauxlib.h	/^LUALIB_API lua_Integer (luaL_optinteger) (lua_State *L, int nArg,$/;"	p	signature:(lua_State *L, int nArg, lua_Integer def)
luaL_optinteger	.\lua\lauxlib.h	/^LUALIB_API lua_Integer (luaL_optinteger) (lua_State *L, int nArg,$/;"	p	signature:(lua_State *L, int nArg, lua_Integer def)
luaL_optlong	.\lauxlib.h	107;"	d
luaL_optlong	.\lua\lauxlib.h	120;"	d
luaL_optlstring	.\lauxlib.h	/^LUALIB_API const char *(luaL_optlstring) (lua_State *L, int numArg,$/;"	p	signature:(lua_State *L, int numArg, const char *def, size_t *l)
luaL_optlstring	.\lua\lauxlib.h	/^LUALIB_API const char *(luaL_optlstring) (lua_State *L, int numArg,$/;"	p	signature:(lua_State *L, int numArg, const char *def, size_t *l)
luaL_optnumber	.\lauxlib.h	/^LUALIB_API lua_Number (luaL_optnumber) (lua_State *L, int nArg, lua_Number def);$/;"	p	signature:(lua_State *L, int nArg, lua_Number def)
luaL_optnumber	.\lua\lauxlib.h	/^LUALIB_API lua_Number (luaL_optnumber) (lua_State *L, int nArg, lua_Number def);$/;"	p	signature:(lua_State *L, int nArg, lua_Number def)
luaL_optstring	.\lauxlib.h	103;"	d
luaL_optstring	.\lua\lauxlib.h	116;"	d
luaL_optunsigned	.\lua\lauxlib.h	/^LUALIB_API lua_Unsigned (luaL_optunsigned) (lua_State *L, int numArg,$/;"	p	signature:(lua_State *L, int numArg, lua_Unsigned def)
luaL_prepbuffer	.\lauxlib.h	/^LUALIB_API char *(luaL_prepbuffer) (luaL_Buffer *B);$/;"	p	signature:(luaL_Buffer *B)
luaL_prepbuffer	.\lua\lauxlib.h	167;"	d
luaL_prepbuffsize	.\lua\lauxlib.h	/^LUALIB_API char *(luaL_prepbuffsize) (luaL_Buffer *B, size_t sz);$/;"	p	signature:(luaL_Buffer *B, size_t sz)
luaL_pushmodule	.\lua\lauxlib.h	/^LUALIB_API void (luaL_pushmodule) (lua_State *L, const char *modname,$/;"	p	signature:(lua_State *L, const char *modname, int sizehint)
luaL_pushresult	.\lauxlib.h	/^LUALIB_API void (luaL_pushresult) (luaL_Buffer *B);$/;"	p	signature:(luaL_Buffer *B)
luaL_pushresult	.\lua\lauxlib.h	/^LUALIB_API void (luaL_pushresult) (luaL_Buffer *B);$/;"	p	signature:(luaL_Buffer *B)
luaL_pushresultsize	.\lua\lauxlib.h	/^LUALIB_API void (luaL_pushresultsize) (luaL_Buffer *B, size_t sz);$/;"	p	signature:(luaL_Buffer *B, size_t sz)
luaL_putchar	.\lauxlib.h	141;"	d
luaL_ref	.\lauxlib.h	/^LUALIB_API int (luaL_ref) (lua_State *L, int t);$/;"	p	signature:(lua_State *L, int t)
luaL_ref	.\lua\lauxlib.h	/^LUALIB_API int (luaL_ref) (lua_State *L, int t);$/;"	p	signature:(lua_State *L, int t)
luaL_reg	.\lauxlib.h	170;"	d
luaL_register	.\lauxlib.h	/^LUALIB_API void (luaL_register) (lua_State *L, const char *libname,$/;"	p	signature:(lua_State *L, const char *libname, const luaL_Reg *l)
luaL_register	.\lua\lauxlib.h	205;"	d
luaL_requiref	.\lua\lauxlib.h	/^LUALIB_API void (luaL_requiref) (lua_State *L, const char *modname,$/;"	p	signature:(lua_State *L, const char *modname, lua_CFunction openf, int glb)
luaL_setfuncs	.\lua\lauxlib.h	/^LUALIB_API void (luaL_setfuncs) (lua_State *L, const luaL_Reg *l, int nup);$/;"	p	signature:(lua_State *L, const luaL_Reg *l, int nup)
luaL_setmetatable	.\lua\lauxlib.h	/^LUALIB_API void  (luaL_setmetatable) (lua_State *L, const char *tname);$/;"	p	signature:(lua_State *L, const char *tname)
luaL_setn	.\lauxlib.h	/^LUALIB_API void (luaL_setn) (lua_State *L, int t, int n);$/;"	p	signature:(lua_State *L, int t, int n)
luaL_setn	.\lauxlib.h	23;"	d
luaL_testudata	.\lua\lauxlib.h	/^LUALIB_API void *(luaL_testudata) (lua_State *L, int ud, const char *tname);$/;"	p	signature:(lua_State *L, int ud, const char *tname)
luaL_tolstring	.\lua\lauxlib.h	/^LUALIB_API const char *(luaL_tolstring) (lua_State *L, int idx, size_t *len);$/;"	p	signature:(lua_State *L, int idx, size_t *len)
luaL_traceback	.\lua\lauxlib.h	/^LUALIB_API void (luaL_traceback) (lua_State *L, lua_State *L1,$/;"	p	signature:(lua_State *L, lua_State *L1, const char *msg, int level)
luaL_typename	.\lauxlib.h	109;"	d
luaL_typename	.\lua\lauxlib.h	122;"	d
luaL_typerror	.\lauxlib.h	/^LUALIB_API int (luaL_typerror) (lua_State *L, int narg, const char *tname);$/;"	p	signature:(lua_State *L, int narg, const char *tname)
luaL_unref	.\lauxlib.h	/^LUALIB_API void (luaL_unref) (lua_State *L, int t, int ref);$/;"	p	signature:(lua_State *L, int t, int ref)
luaL_unref	.\lua\lauxlib.h	/^LUALIB_API void (luaL_unref) (lua_State *L, int t, int ref);$/;"	p	signature:(lua_State *L, int t, int ref)
luaL_where	.\lauxlib.h	/^LUALIB_API void (luaL_where) (lua_State *L, int lvl);$/;"	p	signature:(lua_State *L, int lvl)
luaL_where	.\lua\lauxlib.h	/^LUALIB_API void (luaL_where) (lua_State *L, int lvl);$/;"	p	signature:(lua_State *L, int lvl)
lua_Alloc	.\lua.h	/^typedef void * (*lua_Alloc) (void *ud, void *ptr, size_t osize, size_t nsize);$/;"	t
lua_Alloc	.\lua\lua.h	/^typedef void * (*lua_Alloc) (void *ud, void *ptr, size_t osize, size_t nsize);$/;"	t
lua_CFunction	.\lua.h	/^typedef int (*lua_CFunction) (lua_State *L);$/;"	t
lua_CFunction	.\lua\lua.h	/^typedef int (*lua_CFunction) (lua_State *L);$/;"	t
lua_Chunkreader	.\lua.h	293;"	d
lua_Chunkwriter	.\lua.h	294;"	d
lua_Debug	.\lua.h	/^struct lua_Debug {$/;"	s
lua_Debug	.\lua.h	/^typedef struct lua_Debug lua_Debug;  \/* activation record *\/$/;"	t	typeref:struct:lua_Debug
lua_Debug	.\lua\lua.h	/^struct lua_Debug {$/;"	s
lua_Debug	.\lua\lua.h	/^typedef struct lua_Debug lua_Debug;  \/* activation record *\/$/;"	t	typeref:struct:lua_Debug
lua_Debug::currentline	.\lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::currentline	.\lua\lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::event	.\lua.h	/^  int event;$/;"	m	struct:lua_Debug	access:public
lua_Debug::event	.\lua\lua.h	/^  int event;$/;"	m	struct:lua_Debug	access:public
lua_Debug::i_ci	.\lua.h	/^  int i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::i_ci	.\lua\lua.h	/^  struct CallInfo *i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug	typeref:struct:lua_Debug::CallInfo	access:public
lua_Debug::istailcall	.\lua\lua.h	/^  char istailcall;	\/* (t) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::isvararg	.\lua\lua.h	/^  char isvararg;        \/* (u) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::lastlinedefined	.\lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::lastlinedefined	.\lua\lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::linedefined	.\lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::linedefined	.\lua\lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::name	.\lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::name	.\lua\lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::namewhat	.\lua.h	/^  const char *namewhat;	\/* (n) `global', `local', `field', `method' *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::namewhat	.\lua\lua.h	/^  const char *namewhat;	\/* (n) 'global', 'local', 'field', 'method' *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::nparams	.\lua\lua.h	/^  unsigned char nparams;\/* (u) number of parameters *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::nups	.\lua.h	/^  int nups;		\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::nups	.\lua\lua.h	/^  unsigned char nups;	\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::short_src	.\lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::short_src	.\lua\lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::source	.\lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::source	.\lua\lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::what	.\lua.h	/^  const char *what;	\/* (S) `Lua', `C', `main', `tail' *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::what	.\lua\lua.h	/^  const char *what;	\/* (S) 'Lua', 'C', 'main', 'tail' *\/$/;"	m	struct:lua_Debug	access:public
lua_Hook	.\lua.h	/^typedef void (*lua_Hook) (lua_State *L, lua_Debug *ar);$/;"	t
lua_Hook	.\lua\lua.h	/^typedef void (*lua_Hook) (lua_State *L, lua_Debug *ar);$/;"	t
lua_Integer	.\lua.h	/^typedef LUA_INTEGER lua_Integer;$/;"	t
lua_Integer	.\lua\lua.h	/^typedef LUA_INTEGER lua_Integer;$/;"	t
lua_Number	.\lua.h	/^typedef LUA_NUMBER lua_Number;$/;"	t
lua_Number	.\lua\lua.h	/^typedef LUA_NUMBER lua_Number;$/;"	t
lua_Reader	.\lua.h	/^typedef const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);$/;"	t
lua_Reader	.\lua\lua.h	/^typedef const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);$/;"	t
lua_State	.\lua.h	/^typedef struct lua_State lua_State;$/;"	t	typeref:struct:lua_State
lua_State	.\lua\lua.h	/^typedef struct lua_State lua_State;$/;"	t	typeref:struct:lua_State
lua_Unsigned	.\lua\lua.h	/^typedef LUA_UNSIGNED lua_Unsigned;$/;"	t
lua_Writer	.\lua.h	/^typedef int (*lua_Writer) (lua_State *L, const void* p, size_t sz, void* ud);$/;"	t
lua_Writer	.\lua\lua.h	/^typedef int (*lua_Writer) (lua_State *L, const void* p, size_t sz, void* ud);$/;"	t
lua_absindex	.\lua\lua.h	/^LUA_API int   (lua_absindex) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_arith	.\lua\lua.h	/^LUA_API void  (lua_arith) (lua_State *L, int op);$/;"	p	signature:(lua_State *L, int op)
lua_assert	.\lua\lualib.h	51;"	d
lua_assert	.\lualib.h	49;"	d
lua_atpanic	.\lua.h	/^LUA_API lua_CFunction (lua_atpanic) (lua_State *L, lua_CFunction panicf);$/;"	p	signature:(lua_State *L, lua_CFunction panicf)
lua_atpanic	.\lua\lua.h	/^LUA_API lua_CFunction (lua_atpanic) (lua_State *L, lua_CFunction panicf);$/;"	p	signature:(lua_State *L, lua_CFunction panicf)
lua_call	.\lua.h	/^LUA_API void  (lua_call) (lua_State *L, int nargs, int nresults);$/;"	p	signature:(lua_State *L, int nargs, int nresults)
lua_call	.\lua\lua.h	248;"	d
lua_callk	.\lua\lua.h	/^LUA_API void  (lua_callk) (lua_State *L, int nargs, int nresults, int ctx,$/;"	p	signature:(lua_State *L, int nargs, int nresults, int ctx, lua_CFunction k)
lua_checkstack	.\lua.h	/^LUA_API int   (lua_checkstack) (lua_State *L, int sz);$/;"	p	signature:(lua_State *L, int sz)
lua_checkstack	.\lua\lua.h	/^LUA_API int   (lua_checkstack) (lua_State *L, int sz);$/;"	p	signature:(lua_State *L, int sz)
lua_close	.\lua.h	/^LUA_API void       (lua_close) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_close	.\lua\lua.h	/^LUA_API void       (lua_close) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_compare	.\lua\lua.h	/^LUA_API int   (lua_compare) (lua_State *L, int idx1, int idx2, int op);$/;"	p	signature:(lua_State *L, int idx1, int idx2, int op)
lua_concat	.\lua.h	/^LUA_API void  (lua_concat) (lua_State *L, int n);$/;"	p	signature:(lua_State *L, int n)
lua_concat	.\lua\lua.h	/^LUA_API void  (lua_concat) (lua_State *L, int n);$/;"	p	signature:(lua_State *L, int n)
lua_copy	.\lua\lua.h	/^LUA_API void  (lua_copy) (lua_State *L, int fromidx, int toidx);$/;"	p	signature:(lua_State *L, int fromidx, int toidx)
lua_cpcall	.\lua.h	/^LUA_API int   (lua_cpcall) (lua_State *L, lua_CFunction func, void *ud);$/;"	p	signature:(lua_State *L, lua_CFunction func, void *ud)
lua_cpcall	.\lua\luaconf.h	260;"	d
lua_createtable	.\lua.h	/^LUA_API void  (lua_createtable) (lua_State *L, int narr, int nrec);$/;"	p	signature:(lua_State *L, int narr, int nrec)
lua_createtable	.\lua\lua.h	/^LUA_API void  (lua_createtable) (lua_State *L, int narr, int nrec);$/;"	p	signature:(lua_State *L, int narr, int nrec)
lua_dump	.\lua.h	/^LUA_API int (lua_dump) (lua_State *L, lua_Writer writer, void *data);$/;"	p	signature:(lua_State *L, lua_Writer writer, void *data)
lua_dump	.\lua\lua.h	/^LUA_API int (lua_dump) (lua_State *L, lua_Writer writer, void *data);$/;"	p	signature:(lua_State *L, lua_Writer writer, void *data)
lua_equal	.\lua.h	/^LUA_API int            (lua_equal) (lua_State *L, int idx1, int idx2);$/;"	p	signature:(lua_State *L, int idx1, int idx2)
lua_equal	.\lua\luaconf.h	292;"	d
lua_error	.\lua.h	/^LUA_API int   (lua_error) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_error	.\lua\lua.h	/^LUA_API int   (lua_error) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_event_handler	.\Configuration.lua	/^function lua_event_handler(event_id)$/;"	f
lua_freeline	.\luaconf.h	281;"	d
lua_freeline	.\luaconf.h	287;"	d
lua_gc	.\lua.h	/^LUA_API int (lua_gc) (lua_State *L, int what, int data);$/;"	p	signature:(lua_State *L, int what, int data)
lua_gc	.\lua\lua.h	/^LUA_API int (lua_gc) (lua_State *L, int what, int data);$/;"	p	signature:(lua_State *L, int what, int data)
lua_getallocf	.\lua.h	/^LUA_API lua_Alloc (lua_getallocf) (lua_State *L, void **ud);$/;"	p	signature:(lua_State *L, void **ud)
lua_getallocf	.\lua\lua.h	/^LUA_API lua_Alloc (lua_getallocf) (lua_State *L, void **ud);$/;"	p	signature:(lua_State *L, void **ud)
lua_getctx	.\lua\lua.h	/^LUA_API int   (lua_getctx) (lua_State *L, int *ctx);$/;"	p	signature:(lua_State *L, int *ctx)
lua_getfenv	.\lua.h	/^LUA_API void  (lua_getfenv) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_getfield	.\lua.h	/^LUA_API void  (lua_getfield) (lua_State *L, int idx, const char *k);$/;"	p	signature:(lua_State *L, int idx, const char *k)
lua_getfield	.\lua\lua.h	/^LUA_API void  (lua_getfield) (lua_State *L, int idx, const char *k);$/;"	p	signature:(lua_State *L, int idx, const char *k)
lua_getgccount	.\lua.h	291;"	d
lua_getglobal	.\lua.h	277;"	d
lua_getglobal	.\lua\lua.h	/^LUA_API void  (lua_getglobal) (lua_State *L, const char *var);$/;"	p	signature:(lua_State *L, const char *var)
lua_gethook	.\lua.h	/^LUA_API lua_Hook lua_gethook (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_gethook	.\lua\lua.h	/^LUA_API lua_Hook (lua_gethook) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_gethookcount	.\lua.h	/^LUA_API int lua_gethookcount (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_gethookcount	.\lua\lua.h	/^LUA_API int (lua_gethookcount) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_gethookmask	.\lua.h	/^LUA_API int lua_gethookmask (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_gethookmask	.\lua\lua.h	/^LUA_API int (lua_gethookmask) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_getinfo	.\lua.h	/^LUA_API int lua_getinfo (lua_State *L, const char *what, lua_Debug *ar);$/;"	p	signature:(lua_State *L, const char *what, lua_Debug *ar)
lua_getinfo	.\lua\lua.h	/^LUA_API int (lua_getinfo) (lua_State *L, const char *what, lua_Debug *ar);$/;"	p	signature:(lua_State *L, const char *what, lua_Debug *ar)
lua_getlocal	.\lua.h	/^LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n);$/;"	p	signature:(lua_State *L, const lua_Debug *ar, int n)
lua_getlocal	.\lua\lua.h	/^LUA_API const char *(lua_getlocal) (lua_State *L, const lua_Debug *ar, int n);$/;"	p	signature:(lua_State *L, const lua_Debug *ar, int n)
lua_getmetatable	.\lua.h	/^LUA_API int   (lua_getmetatable) (lua_State *L, int objindex);$/;"	p	signature:(lua_State *L, int objindex)
lua_getmetatable	.\lua\lua.h	/^LUA_API int   (lua_getmetatable) (lua_State *L, int objindex);$/;"	p	signature:(lua_State *L, int objindex)
lua_getref	.\lauxlib.h	167;"	d
lua_getregistry	.\lua.h	289;"	d
lua_getstack	.\lua.h	/^LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar);$/;"	p	signature:(lua_State *L, int level, lua_Debug *ar)
lua_getstack	.\lua\lua.h	/^LUA_API int (lua_getstack) (lua_State *L, int level, lua_Debug *ar);$/;"	p	signature:(lua_State *L, int level, lua_Debug *ar)
lua_gettable	.\lua.h	/^LUA_API void  (lua_gettable) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_gettable	.\lua\lua.h	/^LUA_API void  (lua_gettable) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_gettop	.\lua.h	/^LUA_API int   (lua_gettop) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_gettop	.\lua\lua.h	/^LUA_API int   (lua_gettop) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_getupvalue	.\lua.h	/^LUA_API const char *lua_getupvalue (lua_State *L, int funcindex, int n);$/;"	p	signature:(lua_State *L, int funcindex, int n)
lua_getupvalue	.\lua\lua.h	/^LUA_API const char *(lua_getupvalue) (lua_State *L, int funcindex, int n);$/;"	p	signature:(lua_State *L, int funcindex, int n)
lua_getuservalue	.\lua\lua.h	/^LUA_API void  (lua_getuservalue) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_h	.\lua.h	10;"	d
lua_h	.\lua\lua.h	10;"	d
lua_init	.\lua_glue.cpp	/^void lua_init()$/;"	f	signature:()
lua_init	.\lua_glue.h	/^void lua_init();$/;"	p	signature:()
lua_insert	.\lua.h	/^LUA_API void  (lua_insert) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_insert	.\lua\lua.h	/^LUA_API void  (lua_insert) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_isboolean	.\lua.h	268;"	d
lua_isboolean	.\lua\lua.h	330;"	d
lua_iscfunction	.\lua.h	/^LUA_API int             (lua_iscfunction) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_iscfunction	.\lua\lua.h	/^LUA_API int             (lua_iscfunction) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_isfunction	.\lua.h	264;"	d
lua_isfunction	.\lua\lua.h	326;"	d
lua_islightuserdata	.\lua.h	266;"	d
lua_islightuserdata	.\lua\lua.h	328;"	d
lua_isnil	.\lua.h	267;"	d
lua_isnil	.\lua\lua.h	329;"	d
lua_isnone	.\lua.h	270;"	d
lua_isnone	.\lua\lua.h	332;"	d
lua_isnoneornil	.\lua.h	271;"	d
lua_isnoneornil	.\lua\lua.h	333;"	d
lua_isnumber	.\lua.h	/^LUA_API int             (lua_isnumber) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_isnumber	.\lua\lua.h	/^LUA_API int             (lua_isnumber) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_isstring	.\lua.h	/^LUA_API int             (lua_isstring) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_isstring	.\lua\lua.h	/^LUA_API int             (lua_isstring) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_istable	.\lua.h	265;"	d
lua_istable	.\lua\lua.h	327;"	d
lua_isthread	.\lua.h	269;"	d
lua_isthread	.\lua\lua.h	331;"	d
lua_isuserdata	.\lua.h	/^LUA_API int             (lua_isuserdata) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_isuserdata	.\lua\lua.h	/^LUA_API int             (lua_isuserdata) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_len	.\lua\lua.h	/^LUA_API void  (lua_len)    (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_lessthan	.\lua.h	/^LUA_API int            (lua_lessthan) (lua_State *L, int idx1, int idx2);$/;"	p	signature:(lua_State *L, int idx1, int idx2)
lua_lessthan	.\lua\luaconf.h	293;"	d
lua_load	.\lua.h	/^LUA_API int   (lua_load) (lua_State *L, lua_Reader reader, void *dt,$/;"	p	signature:(lua_State *L, lua_Reader reader, void *dt, const char *chunkname)
lua_load	.\lua\lua.h	/^LUA_API int   (lua_load) (lua_State *L, lua_Reader reader, void *dt,$/;"	p	signature:(lua_State *L, lua_Reader reader, void *dt, const char *chunkname, const char *mode)
lua_newstate	.\lua.h	/^LUA_API lua_State *(lua_newstate) (lua_Alloc f, void *ud);$/;"	p	signature:(lua_Alloc f, void *ud)
lua_newstate	.\lua\lua.h	/^LUA_API lua_State *(lua_newstate) (lua_Alloc f, void *ud);$/;"	p	signature:(lua_Alloc f, void *ud)
lua_newtable	.\lua.h	256;"	d
lua_newtable	.\lua\lua.h	320;"	d
lua_newthread	.\lua.h	/^LUA_API lua_State *(lua_newthread) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_newthread	.\lua\lua.h	/^LUA_API lua_State *(lua_newthread) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_newuserdata	.\lua.h	/^LUA_API void *(lua_newuserdata) (lua_State *L, size_t sz);$/;"	p	signature:(lua_State *L, size_t sz)
lua_newuserdata	.\lua\lua.h	/^LUA_API void *(lua_newuserdata) (lua_State *L, size_t sz);$/;"	p	signature:(lua_State *L, size_t sz)
lua_next	.\lua.h	/^LUA_API int   (lua_next) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_next	.\lua\lua.h	/^LUA_API int   (lua_next) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_number2int	.\luaconf.h	563;"	d
lua_number2int	.\luaconf.h	571;"	d
lua_number2int	.\luaconf.h	580;"	d
lua_number2integer	.\luaconf.h	564;"	d
lua_number2integer	.\luaconf.h	573;"	d
lua_number2integer	.\luaconf.h	581;"	d
lua_number2str	.\lua\luaconf.h	399;"	d
lua_number2str	.\luaconf.h	523;"	d
lua_objlen	.\lua.h	/^LUA_API size_t          (lua_objlen) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_objlen	.\lua\luaconf.h	290;"	d
lua_open	.\lua.h	287;"	d
lua_p_msg_1	.\lua_glue.cpp	/^    LuaGlue lua_p_msg_1(lua_State*);$/;"	p	file:	signature:(lua_State*)
lua_p_msg_1	.\lua_glue.cpp	/^LuaGlue lua_p_msg_1(lua_State *L) $/;"	f	signature:(lua_State *L)
lua_p_msg_2	.\lua_glue.cpp	/^    LuaGlue lua_p_msg_2(lua_State*);$/;"	p	file:	signature:(lua_State*)
lua_p_msg_2	.\lua_glue.cpp	/^LuaGlue lua_p_msg_2(lua_State *L) $/;"	f	signature:(lua_State *L)
lua_pcall	.\lua.h	/^LUA_API int   (lua_pcall) (lua_State *L, int nargs, int nresults, int errfunc);$/;"	p	signature:(lua_State *L, int nargs, int nresults, int errfunc)
lua_pcall	.\lua\lua.h	254;"	d
lua_pcallk	.\lua\lua.h	/^LUA_API int   (lua_pcallk) (lua_State *L, int nargs, int nresults, int errfunc,$/;"	p	signature:(lua_State *L, int nargs, int nresults, int errfunc, int ctx, lua_CFunction k)
lua_pclose	.\luaconf.h	671;"	d
lua_pclose	.\luaconf.h	676;"	d
lua_pclose	.\luaconf.h	682;"	d
lua_pop	.\lua.h	254;"	d
lua_pop	.\lua\lua.h	318;"	d
lua_popen	.\luaconf.h	670;"	d
lua_popen	.\luaconf.h	675;"	d
lua_popen	.\luaconf.h	680;"	d
lua_pushboolean	.\lua.h	/^LUA_API void  (lua_pushboolean) (lua_State *L, int b);$/;"	p	signature:(lua_State *L, int b)
lua_pushboolean	.\lua\lua.h	/^LUA_API void  (lua_pushboolean) (lua_State *L, int b);$/;"	p	signature:(lua_State *L, int b)
lua_pushcclosure	.\lua.h	/^LUA_API void  (lua_pushcclosure) (lua_State *L, lua_CFunction fn, int n);$/;"	p	signature:(lua_State *L, lua_CFunction fn, int n)
lua_pushcclosure	.\lua\lua.h	/^LUA_API void  (lua_pushcclosure) (lua_State *L, lua_CFunction fn, int n);$/;"	p	signature:(lua_State *L, lua_CFunction fn, int n)
lua_pushcfunction	.\lua.h	260;"	d
lua_pushcfunction	.\lua\lua.h	324;"	d
lua_pushfstring	.\lua.h	/^LUA_API const char *(lua_pushfstring) (lua_State *L, const char *fmt, ...);$/;"	p	signature:(lua_State *L, const char *fmt, ...)
lua_pushfstring	.\lua\lua.h	/^LUA_API const char *(lua_pushfstring) (lua_State *L, const char *fmt, ...);$/;"	p	signature:(lua_State *L, const char *fmt, ...)
lua_pushglobaltable	.\lua\lua.h	338;"	d
lua_pushinteger	.\lua.h	/^LUA_API void  (lua_pushinteger) (lua_State *L, lua_Integer n);$/;"	p	signature:(lua_State *L, lua_Integer n)
lua_pushinteger	.\lua\lua.h	/^LUA_API void        (lua_pushinteger) (lua_State *L, lua_Integer n);$/;"	p	signature:(lua_State *L, lua_Integer n)
lua_pushlightuserdata	.\lua.h	/^LUA_API void  (lua_pushlightuserdata) (lua_State *L, void *p);$/;"	p	signature:(lua_State *L, void *p)
lua_pushlightuserdata	.\lua\lua.h	/^LUA_API void  (lua_pushlightuserdata) (lua_State *L, void *p);$/;"	p	signature:(lua_State *L, void *p)
lua_pushliteral	.\lua.h	273;"	d
lua_pushliteral	.\lua\lua.h	335;"	d
lua_pushlstring	.\lua.h	/^LUA_API void  (lua_pushlstring) (lua_State *L, const char *s, size_t l);$/;"	p	signature:(lua_State *L, const char *s, size_t l)
lua_pushlstring	.\lua\lua.h	/^LUA_API const char *(lua_pushlstring) (lua_State *L, const char *s, size_t l);$/;"	p	signature:(lua_State *L, const char *s, size_t l)
lua_pushnil	.\lua.h	/^LUA_API void  (lua_pushnil) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_pushnil	.\lua\lua.h	/^LUA_API void        (lua_pushnil) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_pushnumber	.\lua.h	/^LUA_API void  (lua_pushnumber) (lua_State *L, lua_Number n);$/;"	p	signature:(lua_State *L, lua_Number n)
lua_pushnumber	.\lua\lua.h	/^LUA_API void        (lua_pushnumber) (lua_State *L, lua_Number n);$/;"	p	signature:(lua_State *L, lua_Number n)
lua_pushstring	.\lua.h	/^LUA_API void  (lua_pushstring) (lua_State *L, const char *s);$/;"	p	signature:(lua_State *L, const char *s)
lua_pushstring	.\lua\lua.h	/^LUA_API const char *(lua_pushstring) (lua_State *L, const char *s);$/;"	p	signature:(lua_State *L, const char *s)
lua_pushthread	.\lua.h	/^LUA_API int   (lua_pushthread) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_pushthread	.\lua\lua.h	/^LUA_API int   (lua_pushthread) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_pushunsigned	.\lua\lua.h	/^LUA_API void        (lua_pushunsigned) (lua_State *L, lua_Unsigned n);$/;"	p	signature:(lua_State *L, lua_Unsigned n)
lua_pushvalue	.\lua.h	/^LUA_API void  (lua_pushvalue) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_pushvalue	.\lua\lua.h	/^LUA_API void  (lua_pushvalue) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_pushvfstring	.\lua.h	/^LUA_API const char *(lua_pushvfstring) (lua_State *L, const char *fmt,$/;"	p	signature:(lua_State *L, const char *fmt, va_list argp)
lua_pushvfstring	.\lua\lua.h	/^LUA_API const char *(lua_pushvfstring) (lua_State *L, const char *fmt,$/;"	p	signature:(lua_State *L, const char *fmt, va_list argp)
lua_rawequal	.\lua.h	/^LUA_API int            (lua_rawequal) (lua_State *L, int idx1, int idx2);$/;"	p	signature:(lua_State *L, int idx1, int idx2)
lua_rawequal	.\lua\lua.h	/^LUA_API int   (lua_rawequal) (lua_State *L, int idx1, int idx2);$/;"	p	signature:(lua_State *L, int idx1, int idx2)
lua_rawget	.\lua.h	/^LUA_API void  (lua_rawget) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_rawget	.\lua\lua.h	/^LUA_API void  (lua_rawget) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_rawgeti	.\lua.h	/^LUA_API void  (lua_rawgeti) (lua_State *L, int idx, int n);$/;"	p	signature:(lua_State *L, int idx, int n)
lua_rawgeti	.\lua\lua.h	/^LUA_API void  (lua_rawgeti) (lua_State *L, int idx, int n);$/;"	p	signature:(lua_State *L, int idx, int n)
lua_rawgetp	.\lua\lua.h	/^LUA_API void  (lua_rawgetp) (lua_State *L, int idx, const void *p);$/;"	p	signature:(lua_State *L, int idx, const void *p)
lua_rawlen	.\lua\lua.h	/^LUA_API size_t          (lua_rawlen) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_rawset	.\lua.h	/^LUA_API void  (lua_rawset) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_rawset	.\lua\lua.h	/^LUA_API void  (lua_rawset) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_rawseti	.\lua.h	/^LUA_API void  (lua_rawseti) (lua_State *L, int idx, int n);$/;"	p	signature:(lua_State *L, int idx, int n)
lua_rawseti	.\lua\lua.h	/^LUA_API void  (lua_rawseti) (lua_State *L, int idx, int n);$/;"	p	signature:(lua_State *L, int idx, int n)
lua_rawsetp	.\lua\lua.h	/^LUA_API void  (lua_rawsetp) (lua_State *L, int idx, const void *p);$/;"	p	signature:(lua_State *L, int idx, const void *p)
lua_readline	.\luaconf.h	277;"	d
lua_readline	.\luaconf.h	283;"	d
lua_ref	.\lauxlib.h	162;"	d
lua_register	.\lua.h	258;"	d
lua_register	.\lua\lua.h	322;"	d
lua_remove	.\lua.h	/^LUA_API void  (lua_remove) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_remove	.\lua\lua.h	/^LUA_API void  (lua_remove) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_replace	.\lua.h	/^LUA_API void  (lua_replace) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_replace	.\lua\lua.h	/^LUA_API void  (lua_replace) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_resume	.\lua.h	/^LUA_API int  (lua_resume) (lua_State *L, int narg);$/;"	p	signature:(lua_State *L, int narg)
lua_resume	.\lua\lua.h	/^LUA_API int  (lua_resume) (lua_State *L, lua_State *from, int narg);$/;"	p	signature:(lua_State *L, lua_State *from, int narg)
lua_saveline	.\luaconf.h	278;"	d
lua_saveline	.\luaconf.h	286;"	d
lua_setallocf	.\lua.h	/^LUA_API void lua_setallocf (lua_State *L, lua_Alloc f, void *ud);$/;"	p	signature:(lua_State *L, lua_Alloc f, void *ud)
lua_setallocf	.\lua\lua.h	/^LUA_API void      (lua_setallocf) (lua_State *L, lua_Alloc f, void *ud);$/;"	p	signature:(lua_State *L, lua_Alloc f, void *ud)
lua_setfenv	.\lua.h	/^LUA_API int   (lua_setfenv) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_setfield	.\lua.h	/^LUA_API void  (lua_setfield) (lua_State *L, int idx, const char *k);$/;"	p	signature:(lua_State *L, int idx, const char *k)
lua_setfield	.\lua\lua.h	/^LUA_API void  (lua_setfield) (lua_State *L, int idx, const char *k);$/;"	p	signature:(lua_State *L, int idx, const char *k)
lua_setglobal	.\lua.h	276;"	d
lua_setglobal	.\lua\lua.h	/^LUA_API void  (lua_setglobal) (lua_State *L, const char *var);$/;"	p	signature:(lua_State *L, const char *var)
lua_sethook	.\lua.h	/^LUA_API int lua_sethook (lua_State *L, lua_Hook func, int mask, int count);$/;"	p	signature:(lua_State *L, lua_Hook func, int mask, int count)
lua_sethook	.\lua\lua.h	/^LUA_API int (lua_sethook) (lua_State *L, lua_Hook func, int mask, int count);$/;"	p	signature:(lua_State *L, lua_Hook func, int mask, int count)
lua_setlevel	.\lua.h	/^LUA_API void lua_setlevel	(lua_State *from, lua_State *to);$/;"	p	signature:(lua_State *from, lua_State *to)
lua_setlocal	.\lua.h	/^LUA_API const char *lua_setlocal (lua_State *L, const lua_Debug *ar, int n);$/;"	p	signature:(lua_State *L, const lua_Debug *ar, int n)
lua_setlocal	.\lua\lua.h	/^LUA_API const char *(lua_setlocal) (lua_State *L, const lua_Debug *ar, int n);$/;"	p	signature:(lua_State *L, const lua_Debug *ar, int n)
lua_setmetatable	.\lua.h	/^LUA_API int   (lua_setmetatable) (lua_State *L, int objindex);$/;"	p	signature:(lua_State *L, int objindex)
lua_setmetatable	.\lua\lua.h	/^LUA_API int   (lua_setmetatable) (lua_State *L, int objindex);$/;"	p	signature:(lua_State *L, int objindex)
lua_settable	.\lua.h	/^LUA_API void  (lua_settable) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_settable	.\lua\lua.h	/^LUA_API void  (lua_settable) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_settop	.\lua.h	/^LUA_API void  (lua_settop) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_settop	.\lua\lua.h	/^LUA_API void  (lua_settop) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_setupvalue	.\lua.h	/^LUA_API const char *lua_setupvalue (lua_State *L, int funcindex, int n);$/;"	p	signature:(lua_State *L, int funcindex, int n)
lua_setupvalue	.\lua\lua.h	/^LUA_API const char *(lua_setupvalue) (lua_State *L, int funcindex, int n);$/;"	p	signature:(lua_State *L, int funcindex, int n)
lua_setuservalue	.\lua\lua.h	/^LUA_API void  (lua_setuservalue) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_status	.\lua.h	/^LUA_API int  (lua_status) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_status	.\lua\lua.h	/^LUA_API int  (lua_status) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_stdin_is_tty	.\luaconf.h	229;"	d
lua_stdin_is_tty	.\luaconf.h	233;"	d
lua_stdin_is_tty	.\luaconf.h	235;"	d
lua_str2number	.\lua\luaconf.h	411;"	d
lua_str2number	.\luaconf.h	525;"	d
lua_strlen	.\lua.h	262;"	d
lua_strlen	.\lua\luaconf.h	288;"	d
lua_strx2number	.\lua\luaconf.h	414;"	d
lua_tmpnam	.\luaconf.h	649;"	d
lua_tmpnam	.\luaconf.h	657;"	d
lua_toboolean	.\lua.h	/^LUA_API int             (lua_toboolean) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_toboolean	.\lua\lua.h	/^LUA_API int             (lua_toboolean) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_tocfunction	.\lua.h	/^LUA_API lua_CFunction   (lua_tocfunction) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_tocfunction	.\lua\lua.h	/^LUA_API lua_CFunction   (lua_tocfunction) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_tointeger	.\lua.h	/^LUA_API lua_Integer     (lua_tointeger) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_tointeger	.\lua\lua.h	315;"	d
lua_tointegerx	.\lua\lua.h	/^LUA_API lua_Integer     (lua_tointegerx) (lua_State *L, int idx, int *isnum);$/;"	p	signature:(lua_State *L, int idx, int *isnum)
lua_tolstring	.\lua.h	/^LUA_API const char     *(lua_tolstring) (lua_State *L, int idx, size_t *len);$/;"	p	signature:(lua_State *L, int idx, size_t *len)
lua_tolstring	.\lua\lua.h	/^LUA_API const char     *(lua_tolstring) (lua_State *L, int idx, size_t *len);$/;"	p	signature:(lua_State *L, int idx, size_t *len)
lua_tonumber	.\lua.h	/^LUA_API lua_Number      (lua_tonumber) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_tonumber	.\lua\lua.h	314;"	d
lua_tonumberx	.\lua\lua.h	/^LUA_API lua_Number      (lua_tonumberx) (lua_State *L, int idx, int *isnum);$/;"	p	signature:(lua_State *L, int idx, int *isnum)
lua_topointer	.\lua.h	/^LUA_API const void     *(lua_topointer) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_topointer	.\lua\lua.h	/^LUA_API const void     *(lua_topointer) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_tostring	.\lua.h	279;"	d
lua_tostring	.\lua\lua.h	341;"	d
lua_tothread	.\lua.h	/^LUA_API lua_State      *(lua_tothread) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_tothread	.\lua\lua.h	/^LUA_API lua_State      *(lua_tothread) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_tounsigned	.\lua\lua.h	316;"	d
lua_tounsignedx	.\lua\lua.h	/^LUA_API lua_Unsigned    (lua_tounsignedx) (lua_State *L, int idx, int *isnum);$/;"	p	signature:(lua_State *L, int idx, int *isnum)
lua_touserdata	.\lua.h	/^LUA_API void	       *(lua_touserdata) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_touserdata	.\lua\lua.h	/^LUA_API void	       *(lua_touserdata) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_type	.\lua.h	/^LUA_API int             (lua_type) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_type	.\lua\lua.h	/^LUA_API int             (lua_type) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_typename	.\lua.h	/^LUA_API const char     *(lua_typename) (lua_State *L, int tp);$/;"	p	signature:(lua_State *L, int tp)
lua_typename	.\lua\lua.h	/^LUA_API const char     *(lua_typename) (lua_State *L, int tp);$/;"	p	signature:(lua_State *L, int tp)
lua_unref	.\lauxlib.h	165;"	d
lua_upvalueid	.\lua\lua.h	/^LUA_API void *(lua_upvalueid) (lua_State *L, int fidx, int n);$/;"	p	signature:(lua_State *L, int fidx, int n)
lua_upvalueindex	.\lua.h	39;"	d
lua_upvalueindex	.\lua\lua.h	41;"	d
lua_upvaluejoin	.\lua\lua.h	/^LUA_API void  (lua_upvaluejoin) (lua_State *L, int fidx1, int n1,$/;"	p	signature:(lua_State *L, int fidx1, int n1, int fidx2, int n2)
lua_version	.\lua\lua.h	/^LUA_API const lua_Number *(lua_version) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_xmove	.\lua.h	/^LUA_API void  (lua_xmove) (lua_State *from, lua_State *to, int n);$/;"	p	signature:(lua_State *from, lua_State *to, int n)
lua_xmove	.\lua\lua.h	/^LUA_API void  (lua_xmove) (lua_State *from, lua_State *to, int n);$/;"	p	signature:(lua_State *from, lua_State *to, int n)
lua_yield	.\lua.h	/^LUA_API int  (lua_yield) (lua_State *L, int nresults);$/;"	p	signature:(lua_State *L, int nresults)
lua_yield	.\lua\lua.h	268;"	d
lua_yieldk	.\lua\lua.h	/^LUA_API int  (lua_yieldk) (lua_State *L, int nresults, int ctx,$/;"	p	signature:(lua_State *L, int nresults, int ctx, lua_CFunction k)
luai_Cast	.\luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	u
luai_Cast::l_d	.\luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	m	union:luai_Cast	access:public
luai_Cast::l_l	.\luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	m	union:luai_Cast	access:public
luai_apicheck	.\luaconf.h	379;"	d
luai_apicheck	.\luaconf.h	381;"	d
luai_jmpbuf	.\luaconf.h	611;"	d
luai_jmpbuf	.\luaconf.h	617;"	d
luai_jmpbuf	.\luaconf.h	623;"	d
luai_numadd	.\lua\luaconf.h	431;"	d
luai_numadd	.\luaconf.h	533;"	d
luai_numdiv	.\lua\luaconf.h	434;"	d
luai_numdiv	.\luaconf.h	536;"	d
luai_numeq	.\lua\luaconf.h	436;"	d
luai_numeq	.\luaconf.h	540;"	d
luai_numisnan	.\lua\luaconf.h	439;"	d
luai_numisnan	.\luaconf.h	543;"	d
luai_numle	.\lua\luaconf.h	438;"	d
luai_numle	.\luaconf.h	542;"	d
luai_numlt	.\lua\luaconf.h	437;"	d
luai_numlt	.\luaconf.h	541;"	d
luai_nummod	.\lua\luaconf.h	425;"	d
luai_nummod	.\luaconf.h	537;"	d
luai_nummul	.\lua\luaconf.h	433;"	d
luai_nummul	.\luaconf.h	535;"	d
luai_numpow	.\lua\luaconf.h	426;"	d
luai_numpow	.\luaconf.h	538;"	d
luai_numsub	.\lua\luaconf.h	432;"	d
luai_numsub	.\luaconf.h	534;"	d
luai_numunm	.\lua\luaconf.h	435;"	d
luai_numunm	.\luaconf.h	539;"	d
luai_userstateclose	.\luaconf.h	724;"	d
luai_userstatefree	.\luaconf.h	726;"	d
luai_userstateopen	.\luaconf.h	723;"	d
luai_userstateresume	.\luaconf.h	727;"	d
luai_userstatethread	.\luaconf.h	725;"	d
luai_userstateyield	.\luaconf.h	728;"	d
luai_writeline	.\lua\luaconf.h	217;"	d
luai_writestring	.\lua\luaconf.h	216;"	d
luai_writestringerror	.\lua\luaconf.h	224;"	d
lualib_h	.\lua\lualib.h	9;"	d
lualib_h	.\lualib.h	9;"	d
luaopen_base	.\lua\lualib.h	/^LUAMOD_API int (luaopen_base) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_base	.\lualib.h	/^LUALIB_API int (luaopen_base) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_bit32	.\lua\lualib.h	/^LUAMOD_API int (luaopen_bit32) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_coroutine	.\lua\lualib.h	/^LUAMOD_API int (luaopen_coroutine) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_debug	.\lua\lualib.h	/^LUAMOD_API int (luaopen_debug) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_debug	.\lualib.h	/^LUALIB_API int (luaopen_debug) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_io	.\lua\lualib.h	/^LUAMOD_API int (luaopen_io) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_io	.\lualib.h	/^LUALIB_API int (luaopen_io) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_math	.\lua\lualib.h	/^LUAMOD_API int (luaopen_math) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_math	.\lualib.h	/^LUALIB_API int (luaopen_math) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_os	.\lua\lualib.h	/^LUAMOD_API int (luaopen_os) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_os	.\lualib.h	/^LUALIB_API int (luaopen_os) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_package	.\lua\lualib.h	/^LUAMOD_API int (luaopen_package) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_package	.\lualib.h	/^LUALIB_API int (luaopen_package) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_string	.\lua\lualib.h	/^LUAMOD_API int (luaopen_string) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_string	.\lualib.h	/^LUALIB_API int (luaopen_string) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_table	.\lua\lualib.h	/^LUAMOD_API int (luaopen_table) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_table	.\lualib.h	/^LUALIB_API int (luaopen_table) (lua_State *L);$/;"	p	signature:(lua_State *L)
lvl	.\lauxlib.h	/^  int lvl;  \/* number of strings in the stack (level) *\/$/;"	m	struct:luaL_Buffer	access:public
main	.\main.cpp	/^int main(int argc, char* args[] )$/;"	f	signature:(int argc, char* args[] )
main_bg	.\Scene.h	/^		SDL_Surface* main_bg;$/;"	m	class:StartScene	access:private
main_menu1	.\Scene.h	/^		SDL_Surface* main_menu1;$/;"	m	class:StartScene	access:private
main_menu1_over	.\Scene.h	/^		SDL_Surface* main_menu1_over;$/;"	m	class:StartScene	access:private
main_menu2	.\Scene.h	/^		SDL_Surface* main_menu2;$/;"	m	class:StartScene	access:private
main_menu2_over	.\Scene.h	/^		SDL_Surface* main_menu2_over;$/;"	m	class:StartScene	access:private
maj_lua_error	.\GlobalFunctions.cpp	/^void maj_lua_error(lua_State *L, const char *fmt, const char *at ,...) {$/;"	f	signature:(lua_State *L, const char *fmt, const char *at ,...)
maj_lua_error	.\GlobalFunctions.h	/^void maj_lua_error(lua_State*, const char*, const char*, ...);$/;"	p	signature:(lua_State*, const char*, const char*, ...)
map	.\Scene.h	/^		Map* map;$/;"	m	class:GameScene	access:private
menu	.\Scene.h	/^		int menu;$/;"	m	class:StartScene	access:private
message	.\Scene.h	/^		std::string message;$/;"	m	class:GameScene	access:private
message	.\Scene.h	/^        std::string message;$/;"	m	class:MessageBox	access:private
message2	.\Scene.h	/^		std::string message2;$/;"	m	class:GameScene	access:private
message2	.\Scene.h	/^        std::string message2;$/;"	m	class:MessageBox	access:private
message_box	.\Scene.h	/^		SDL_Rect message_box;$/;"	m	class:GameScene	access:private
message_box_	.\Scene.h	/^                MessageBox* message_box_;$/;"	m	class:GameScene	access:private
message_box_clip	.\Scene.h	/^		SDL_Rect message_box_clip;$/;"	m	class:GameScene	access:private
message_handler	.\Configuration.lua	/^function message_handler(message_id)$/;"	f
message_timer	.\Scene.h	/^		Timer message_timer;$/;"	m	class:GameScene	access:private
message_timer	.\Scene.h	/^        Timer message_timer;$/;"	m	class:MessageBox	access:private
message_timer2	.\Scene.h	/^		Timer message_timer2;$/;"	m	class:GameScene	access:private
message_timer2	.\Scene.h	/^        Timer message_timer2;$/;"	m	class:MessageBox	access:private
move	.\character.cpp	/^bool Character::move(Uint32 deltaTicks) {return true ;}$/;"	f	class:Character	signature:(Uint32 deltaTicks)
move	.\character.cpp	/^bool Hero::move(Uint32 deltaTicks)$/;"	f	class:Hero	signature:(Uint32 deltaTicks)
move	.\character.h	/^		virtual bool move(Uint32 deltaTicks);$/;"	p	class:Character	access:public	signature:(Uint32 deltaTicks)
move	.\character.h	/^		virtual bool move(Uint32 deltaTicks);$/;"	p	class:Gang	access:public	signature:(Uint32 deltaTicks)
move	.\character.h	/^		virtual bool move(Uint32 deltaTicks);$/;"	p	class:Hero	access:public	signature:(Uint32 deltaTicks)
move	.\gang.cpp	/^bool Gang::move(Uint32 deltaTicks)$/;"	f	class:Gang	signature:(Uint32 deltaTicks)
move_back	.\character.cpp	/^void Character::move_back()$/;"	f	class:Character	signature:()
move_back	.\character.cpp	/^void Hero::move_back()$/;"	f	class:Hero	signature:()
move_back	.\character.h	/^		virtual void move_back();$/;"	p	class:Character	access:public	signature:()
move_back	.\character.h	/^		virtual void move_back();$/;"	p	class:Gang	access:public	signature:()
move_back	.\character.h	/^		virtual void move_back();$/;"	p	class:Hero	access:public	signature:()
move_back	.\gang.cpp	/^void Gang::move_back()$/;"	f	class:Gang	signature:()
n	.\lua\lauxlib.h	/^  size_t n;  \/* number of characters in buffer *\/$/;"	m	struct:luaL_Buffer	access:public
name	.\lauxlib.h	/^  const char *name;$/;"	m	struct:luaL_Reg	access:public
name	.\lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug	access:public
name	.\lua\lauxlib.h	/^  const char *name;$/;"	m	struct:luaL_Reg	access:public
name	.\lua\lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug	access:public
namewhat	.\lua.h	/^  const char *namewhat;	\/* (n) `global', `local', `field', `method' *\/$/;"	m	struct:lua_Debug	access:public
namewhat	.\lua\lua.h	/^  const char *namewhat;	\/* (n) 'global', 'local', 'field', 'method' *\/$/;"	m	struct:lua_Debug	access:public
next_person	.\character.h	/^		Character* next_person;$/;"	m	class:Character	access:private
next_person	.\character.h	/^		Character* next_person;$/;"	m	class:Hero	access:private
next_person	.\character.h	/^		Gang* next_person;$/;"	m	class:Gang	access:private
nparams	.\lua\lua.h	/^  unsigned char nparams;\/* (u) number of parameters *\/$/;"	m	struct:lua_Debug	access:public
nups	.\lua.h	/^  int nups;		\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug	access:public
nups	.\lua\lua.h	/^  unsigned char nups;	\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug	access:public
object_point	.\character.h	/^		SDL_Rect* object_point;$/;"	m	class:Gang	access:private
offset	.\Scene.h	/^		SDL_Rect offset;$/;"	m	class:Top	access:private
offset	.\Scene.h	/^		SDL_Rect offset;$/;"	m	class:WalletBar	access:private
p	.\lauxlib.h	/^  char *p;			\/* current position in buffer *\/$/;"	m	struct:luaL_Buffer	access:public
p_x	.\character.h	/^		int x, y, p_x, p_y;$/;"	m	class:Character	access:protected
p_y	.\character.h	/^		int x, y, p_x, p_y;$/;"	m	class:Character	access:protected
pause	.\timer.cpp	/^void Timer::pause()$/;"	f	class:Timer	signature:()
pause	.\timer.h	/^		void pause();$/;"	p	class:Timer	access:public	signature:()
paused	.\timer.h	/^		bool paused;$/;"	m	class:Timer	access:private
pausedTicks	.\timer.h	/^		int pausedTicks;$/;"	m	class:Timer	access:private
period	.\timer.h	/^                int period;$/;"	m	class:Timer	access:public
print_limit	.\GameScene_GUI.cpp	/^void WalletBar::print_limit(ECard i, uint64_t money)$/;"	f	class:WalletBar	signature:(ECard i, uint64_t money)
print_limit	.\Scene.h	/^		void print_limit(ECard, uint64_t);$/;"	p	class:WalletBar	access:public	signature:(ECard, uint64_t)
print_message_1	.\GameScene.cpp	/^void GameScene::print_message_1(std::string msg, int duration)$/;"	f	class:GameScene	signature:(std::string msg, int duration)
print_message_1	.\GameScene_GUI.cpp	/^void MessageBox::print_message_1(std::string msg, int duration)$/;"	f	class:MessageBox	signature:(std::string msg, int duration)
print_message_1	.\Scene.h	/^                void print_message_1(std::string msg, int duration);$/;"	p	class:GameScene	access:public	signature:(std::string msg, int duration)
print_message_1	.\Scene.h	/^        void print_message_1(std::string msg, int duration);$/;"	p	class:MessageBox	access:public	signature:(std::string msg, int duration)
print_message_2	.\GameScene.cpp	/^void GameScene::print_message_2(std::string msg, int duration) $/;"	f	class:GameScene	signature:(std::string msg, int duration)
print_message_2	.\GameScene_GUI.cpp	/^void MessageBox::print_message_2(std::string msg, int duration) $/;"	f	class:MessageBox	signature:(std::string msg, int duration)
print_message_2	.\Scene.h	/^                void print_message_2(std::string msg, int duration);$/;"	p	class:GameScene	access:public	signature:(std::string msg, int duration)
print_message_2	.\Scene.h	/^        void print_message_2(std::string msg, int duration);$/;"	p	class:MessageBox	access:public	signature:(std::string msg, int duration)
purchase_count	.\Scene.h	/^		int purchase_count;$/;"	m	class:GameScene	access:private
quit	.\main.cpp	/^bool quit = false;$/;"	v
rect	.\Scene.h	/^        SDL_Rect rect;$/;"	m	class:MessageBox	access:private
scene	.\main.cpp	/^Scene* scene = NULL;$/;"	v
scenes	.\main.cpp	/^Scene* scenes[SCENE_NUM];$/;"	v
scenes_initialize	.\main.cpp	/^static void scenes_initialize()$/;"	f	file:	signature:()
scenes_initialize	.\main.cpp	/^static void scenes_initialize();$/;"	p	file:	signature:()
screen	.\global.cpp	/^SDL_Surface *screen = NULL;$/;"	v
select_card	.\character.cpp	/^void Hero::select_card(ECard pCard )$/;"	f	class:Hero	signature:(ECard pCard )
select_card	.\character.h	/^		void select_card(ECard pCard);$/;"	p	class:Hero	access:public	signature:(ECard pCard)
set_clip	.\character.cpp	/^void Character::set_clip(){;}$/;"	f	class:Character	signature:()
set_clip	.\character.cpp	/^void Hero::set_clip()$/;"	f	class:Hero	signature:()
set_clip	.\character.h	/^		virtual void set_clip();$/;"	p	class:Character	access:public	signature:()
set_clip	.\character.h	/^		virtual void set_clip();$/;"	p	class:Gang	access:public	signature:()
set_clip	.\character.h	/^		virtual void set_clip();$/;"	p	class:Hero	access:public	signature:()
set_clip	.\gang.cpp	/^void Gang::set_clip()$/;"	f	class:Gang	signature:()
set_credit_score	.\GameScene_GUI.cpp	/^void Top::set_credit_score(int credit)$/;"	f	class:Top	signature:(int credit)
set_credit_score	.\Scene.h	/^		void set_credit_score(int credit);$/;"	p	class:Top	access:public	signature:(int credit)
set_object	.\character.cpp	/^void Character::set_object(SDL_Rect *object){;}$/;"	f	class:Character	signature:(SDL_Rect *object)
set_object	.\character.h	/^		virtual void set_object(SDL_Rect *object);$/;"	p	class:Character	access:public	signature:(SDL_Rect *object)
set_object	.\character.h	/^		virtual void set_object(SDL_Rect *object);$/;"	p	class:Gang	access:public	signature:(SDL_Rect *object)
set_object	.\gang.cpp	/^void Gang::set_object(SDL_Rect* object)$/;"	f	class:Gang	signature:(SDL_Rect* object)
set_total_dept	.\GameScene_GUI.cpp	/^void Top::set_total_dept(int total)$/;"	f	class:Top	signature:(int total)
set_total_dept	.\Scene.h	/^		void set_total_dept(int total);$/;"	p	class:Top	access:public	signature:(int total)
short_src	.\lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug	access:public
short_src	.\lua\lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug	access:public
show	.\GameScene.cpp	/^void GameScene::show()$/;"	f	class:GameScene	signature:()
show	.\GameScene_GUI.cpp	/^void MessageBox::show()$/;"	f	class:MessageBox	signature:()
show	.\GameScene_GUI.cpp	/^void Top::show(SDL_Surface* background)$/;"	f	class:Top	signature:(SDL_Surface* background)
show	.\GameScene_GUI.cpp	/^void WalletBar::show( )$/;"	f	class:WalletBar	signature:( )
show	.\Scene.cpp	/^void BadEndScene::show()$/;"	f	class:BadEndScene	signature:()
show	.\Scene.cpp	/^void CreditScene::show()$/;"	f	class:CreditScene	signature:()
show	.\Scene.cpp	/^void GoodEndScene::show()$/;"	f	class:GoodEndScene	signature:()
show	.\Scene.cpp	/^void Scene::show(){;}$/;"	f	class:Scene	signature:()
show	.\Scene.cpp	/^void StartScene::show()$/;"	f	class:StartScene	signature:()
show	.\Scene.h	/^		virtual void show();$/;"	p	class:BadEndScene	access:public	signature:()
show	.\Scene.h	/^		virtual void show();$/;"	p	class:CreditScene	access:public	signature:()
show	.\Scene.h	/^		virtual void show();$/;"	p	class:GameScene	access:public	signature:()
show	.\Scene.h	/^		virtual void show();$/;"	p	class:GoodEndScene	access:public	signature:()
show	.\Scene.h	/^		virtual void show();$/;"	p	class:Scene	access:public	signature:()
show	.\Scene.h	/^		virtual void show();$/;"	p	class:StartScene	access:public	signature:()
show	.\Scene.h	/^		void show();$/;"	p	class:WalletBar	access:public	signature:()
show	.\Scene.h	/^		void show(SDL_Surface*);$/;"	p	class:Top	access:public	signature:(SDL_Surface*)
show	.\Scene.h	/^        void show();$/;"	p	class:MessageBox	access:public	signature:()
show	.\building.cpp	/^void Building::show()$/;"	f	class:Building	signature:()
show	.\building.h	/^		void show();$/;"	p	class:Building	access:public	signature:()
show	.\character.cpp	/^void Character::show(SDL_Surface*){;}$/;"	f	class:Character	signature:(SDL_Surface*)
show	.\character.cpp	/^void Hero::show(SDL_Surface* screen)$/;"	f	class:Hero	signature:(SDL_Surface* screen)
show	.\character.h	/^		virtual void show(SDL_Surface*);$/;"	p	class:Character	access:public	signature:(SDL_Surface*)
show	.\character.h	/^		virtual void show(SDL_Surface*);$/;"	p	class:Gang	access:public	signature:(SDL_Surface*)
show	.\character.h	/^		virtual void show(SDL_Surface*);$/;"	p	class:Hero	access:public	signature:(SDL_Surface*)
show	.\gang.cpp	/^void Gang::show(SDL_Surface* screen)$/;"	f	class:Gang	signature:(SDL_Surface* screen)
show	.\map.cpp	/^void Map::show()$/;"	f	class:Map	signature:()
show	.\map.h	/^		void show();$/;"	p	class:Map	access:public	signature:()
show_gage	.\GameScene_GUI.cpp	/^void WalletBar::show_gage(ECard i, float ratio)$/;"	f	class:WalletBar	signature:(ECard i, float ratio)
show_gage	.\Scene.h	/^		void show_gage(ECard, float);$/;"	p	class:WalletBar	access:public	signature:(ECard, float)
show_message_box	.\GameScene.cpp	/^void GameScene::show_message_box(){$/;"	f	class:GameScene	signature:()
show_message_box	.\GameScene_GUI.cpp	/^void MessageBox::show_message_box()$/;"	f	class:MessageBox	signature:()
show_message_box	.\Scene.h	/^		void show_message_box();$/;"	p	class:GameScene	access:public	signature:()
show_message_box	.\Scene.h	/^        void show_message_box();$/;"	p	class:MessageBox	access:public	signature:()
size	.\lua\lauxlib.h	/^  size_t size;  \/* buffer size *\/$/;"	m	struct:luaL_Buffer	access:public
source	.\lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
source	.\lua\lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
sprite	.\sprite.h	/^		void sprite();$/;"	p	class:Sprite	access:public	signature:()
start	.\timer.cpp	/^void Timer::start()$/;"	f	class:Timer	signature:()
start	.\timer.cpp	/^void Timer::start(int prd)$/;"	f	class:Timer	signature:(int prd)
start	.\timer.h	/^		void start();$/;"	p	class:Timer	access:public	signature:()
start	.\timer.h	/^                void start(int);$/;"	p	class:Timer	access:public	signature:(int)
startTicks	.\timer.h	/^		int startTicks;$/;"	m	class:Timer	access:private
started	.\timer.h	/^		bool started;$/;"	m	class:Timer	access:private
stop	.\timer.cpp	/^void Timer::stop()$/;"	f	class:Timer	signature:()
stop	.\timer.h	/^		void stop();$/;"	p	class:Timer	access:public	signature:()
textColor	.\global.cpp	/^SDL_Color textColor = {0,0,0};$/;"	v
top	.\Scene.h	/^		Top* top;$/;"	m	class:GameScene	access:private
total_str	.\Scene.h	/^		std::string total_str;$/;"	m	class:Top	access:private
unpause	.\timer.cpp	/^void Timer::unpause()$/;"	f	class:Timer	signature:()
unpause	.\timer.h	/^		void unpause();$/;"	p	class:Timer	access:public	signature:()
w	.\building.h	/^		int w,h;$/;"	m	class:Building	access:private
w	.\building.h	/^		int w,h;$/;"	m	class:Door	access:private
w	.\character.h	/^		int w, h;$/;"	m	class:Character	access:protected
w	.\map.h	/^		int w,h;$/;"	m	class:Map	access:protected
wallet	.\Scene.h	/^		WalletBar* wallet;$/;"	m	class:GameScene	access:private
what	.\lua.h	/^  const char *what;	\/* (S) `Lua', `C', `main', `tail' *\/$/;"	m	struct:lua_Debug	access:public
what	.\lua\lua.h	/^  const char *what;	\/* (S) 'Lua', 'C', 'main', 'tail' *\/$/;"	m	struct:lua_Debug	access:public
whiteColor	.\global.cpp	/^SDL_Color whiteColor= {0xff,0xff,0xff};$/;"	v
x	.\building.h	/^		int x,y;$/;"	m	class:Building	access:private
x	.\building.h	/^		int x,y;$/;"	m	class:Door	access:private
x	.\character.h	/^		int x, y, p_x, p_y;$/;"	m	class:Character	access:protected
x	.\map.h	/^		int x,y;$/;"	m	class:Map	access:protected
xVel	.\character.h	/^		int xVel, yVel;$/;"	m	class:Character	access:protected
y	.\building.h	/^		int x,y;$/;"	m	class:Building	access:private
y	.\building.h	/^		int x,y;$/;"	m	class:Door	access:private
y	.\character.h	/^		int x, y, p_x, p_y;$/;"	m	class:Character	access:protected
y	.\map.h	/^		int x,y;$/;"	m	class:Map	access:protected
yVel	.\character.h	/^		int xVel, yVel;$/;"	m	class:Character	access:protected
~Character	.\character.cpp	/^Character::~Character()$/;"	f	class:Character	signature:()
~Character	.\character.h	/^                virtual ~Character();$/;"	p	class:Character	access:public	signature:()
~Scene	.\Scene.cpp	/^Scene::~Scene() { ; $/;"	f	class:Scene	signature:()
~Scene	.\Scene.h	/^                virtual ~Scene();$/;"	p	class:Scene	access:public	signature:()
